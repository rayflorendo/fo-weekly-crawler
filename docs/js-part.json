[
  {
    "title": "JSパーツ集",
    "url": "https://js-part.hmup.jp",
    "html": "<section class=\"content-element content-1\" style=\"background-color:#ffad2f\"><h2>JSパーツ集</h2><p>過去に作ったJavaScriptやサンプル用に作ったJavaScriptを集めたサイト</p>\n</section>\n\n<section class=\"content-element content-2\"><ul><li><a href=\"#category01\">ナビゲーション</a></li><li><a href=\"#category02\">フォーム関連</a></li><li><a href=\"#category03\">モーダル関連</a></li><li><a href=\"#category04\">バナー関連</a></li><li><a href=\"#category05\">カルーセル（スライダー）</a></li><li><a href=\"#category06\">アニメーション</a></li><li><a href=\"#category07\">その他（よくあるご相談）</a></li><li><a href=\"#category08\">その他（掲載要否判断）</a></li></ul></section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h3>ナビゲーション</h3></section>\n\n<section class=\"content-element content-4\"><h3>フォーム関連</h3></section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fbf9ef\"><h3>モーダル関連</h3></section>\n\n<section class=\"content-element content-6\"><h3>バナー関連</h3></section>\n\n<section class=\"content-element content-7\" style=\"background-color:#fbf9ef\"><h3>カルーセル（スライダー）</h3></section>\n\n<section class=\"content-element content-8\"><h3>アニメーション</h3></section>\n\n<section class=\"content-element content-9\" style=\"background-color:#fbf9ef\"><h3>その他（よくあるご相談）</h3></section>\n\n<section class=\"content-element content-10\"><h3>その他（掲載要否判断）</h3></section>\n\n<section class=\"content-element content-11\" style=\"background-color:#fbf9ef\"><h3>デザインパーツ化（済）</h3><p>デザインパーツとしてリリースされたJSパーツを格納しています。</p>\n</section>"
  },
  {
    "title": "JS使用時の初期設定",
    "url": "https://js-part.hmup.jp/initialization",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbeff6\"><h2>JavaScript埋め込みパーツ<br/>使用時にまず行うこと</h2></section>\n\n<section class=\"content-element content-2\"><h2>①独立したrowを作成し、<br/>　その中にJavaScript埋め込みパーツを配置する<br/></h2><p>複数のページでそのJavaScriptを使用する場合→「共通フッター」に配置。<br/>\n共通フッターが使われてない場合や、他のJSパーツと干渉してしまう場合→「該当ページ内のセクションの一番下」に配置。</p>\n<p><strong>■注意点</strong></p>\n<ul>\n<li> 案件では基本的に<strong>共通フッター</strong>にJSを入れてください。<br/>\n （ページのセクション内だとサイト全体のどこでJSが使われているか探すのが難しい為）</li>\n<li>ここで作成したJS埋め込みパーツ配置用のrowにはJS埋め込みパーツのみ配置し、<strong>他のパーツは入れない</strong>でください。<br/>\n （後述の②でJS埋め込みパーツを配置したrowに付与する専用クラスにはデフォルトでつく余白を削除する記述があるため）</li>\n</ul>\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>②クラス付与&amp;カスタムCSS追記<br/></h2><h3>カスタムCSS<br/></h3><ol>\n<li>JavaScript埋め込みパーツを配置したrow（行）にクラス名「<strong>js_script_row</strong>」を付与する。</li>\n<li>下記CSSをカスタムCSSの <strong>JS記述エリア</strong> に追記。</li>\n</ol>\n<p>※サイトのデザインに影響しないように、JavaScript埋め込みパーツ配置時にデフォルトでつく余計な余白を消す必要があります。</p>\n<a href=\"#\">CSSをコピーする</a>// JavaScriptパーツの余白削除 フッターでも使用できるようにセクション外<br/>  .js_script_row {<br/>    .col {<br/>      padding: 0 !important;<br/>      margin: 0 !important;<br/>      .component {<br/>        margin: 0 !important;<br/>      }<br/>    }<br/>  }<h3>編集画面用カスタムCSS</h3><ol>\n<li>下記CSSを編集画面用CSSの <strong>JS記述エリア </strong>に追記。</li>\n</ol>\n<a href=\"#\">CSSをコピーする</a>// JSパーツ編集画面用<br/>  .js_script_row {<br/>    margin: 30px 0;<br/>    .col {<br/>      padding: 10px 10px 0 !important;<br/>      .component {<br/>        margin: 10px 0 !important;<br/>      }<br/>    }<br/>  }</section>"
  },
  {
    "title": "JSパーツ集",
    "url": "https://js-part.hmup.jp/js",
    "html": "<section class=\"content-element content-1\" style=\"background-color:#ffad2f\"><h2>JSパーツ集</h2><p>過去に作ったJavaScriptやサンプル用に作ったJavaScriptを集めたサイト</p>\n</section>\n\n<section class=\"content-element content-2\"><ul><li><a href=\"#category01\">ナビゲーション</a></li><li><a href=\"#category02\">フォーム関連</a></li><li><a href=\"#category03\">モーダル関連</a></li><li><a href=\"#category04\">バナー関連</a></li><li><a href=\"#category05\">カルーセル（スライダー）</a></li><li><a href=\"#category06\">アニメーション</a></li><li><a href=\"#category07\">その他（よくあるご相談）</a></li><li><a href=\"#category08\">その他（掲載要否判断）</a></li></ul></section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h3>ナビゲーション</h3></section>\n\n<section class=\"content-element content-4\"><h3>フォーム関連</h3></section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fbf9ef\"><h3>モーダル関連</h3></section>\n\n<section class=\"content-element content-6\"><h3>バナー関連</h3></section>\n\n<section class=\"content-element content-7\" style=\"background-color:#fbf9ef\"><h3>カルーセル（スライダー）</h3></section>\n\n<section class=\"content-element content-8\"><h3>アニメーション</h3></section>\n\n<section class=\"content-element content-9\" style=\"background-color:#fbf9ef\"><h3>その他（よくあるご相談）</h3></section>\n\n<section class=\"content-element content-10\"><h3>その他（掲載要否判断）</h3></section>\n\n<section class=\"content-element content-11\" style=\"background-color:#fbf9ef\"><h3>デザインパーツ化（済）</h3><p>デザインパーツとしてリリースされたJSパーツを格納しています。</p>\n</section>"
  },
  {
    "title": "JSパーツ使用時のフロー",
    "url": "https://js-part.hmup.jp/manual/01",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>JS使用時のフロー</h2></section>\n\n<section class=\"content-element content-2\"><h2>使用手順</h2><p><strong>STEP 01</strong></p>\n<h3>2段階認証</h3><p>JSを使用するとなった場合、まず担当ディレクターにJSの権限を解放して良いか確認を取る。<br/>\n許可をもらったら、2段階認証でJSパーツの使用権限を解放する。</p>\n<p><br/>\n※パートナーや業務委託の方は、ベーシックへご依頼ください。</p>\n<a href=\"https://docs.google.com/document/d/1GRooSQkP5laZHrsyy_GpDurpLxe-mUxSGwGoLExivGY/edit#heading=h.7xjum8tfujm8\">2段階認証の詳しいやり方はこちら</a><p><strong>STEP 02</strong></p>\n<h3>初期設定</h3><p>下記ページに従ってJS使用時の初期設定を行う。</p>\n<a href=\"/initialization\">JSパーツ使用時にまず行うこと</a><p><strong>STEP 03</strong></p>\n<h3>パーツ配置＆クラス付与</h3><p><a href=\"//js-part.hmup.jp/js\">JSパーツ集</a>の中から該当するパーツのページを参照して実装する。</p>\n<p> </p>\n<p><strong>■注意点</strong></p>\n<ul>\n<li><strong>JavaScriptのコードは変更しないでください。</strong><br/>\n コードに変更は加えずに、そのまま使用するようにお願いします。<br/>\n CSSはデザインに合わせて自由に変更して構いません。<br/>\n  </li>\n<li><strong>JSパーツ集に掲載のある構成のままパーツ配置する</strong><br/>\n NG例）自動スクロールのアクセシビリティ対策用の停止ボタンを顧客要望でなく、制作者判断で外す。<br/>\n  </li>\n</ul>\n<ul>\n<li><strong>JavaScriptで操作するパーツのCSS記述箇所</strong><br/>\n 各パーツのCSS・編集画面用CSSについては、カスタムCSS内に<strong>/*JS記述エリア*/</strong>を用意しているので、そちらに追加をしてください。<br/>\n ※編集画面用にも記述欄の用意があるので、パーツ毎にぞれぞれ適した場所に追加するようにお願いします。</li>\n</ul>\n<p> </p>\n<ul>\n<li><strong>公開ページでチェック</strong><br/>\n 共有URL/プレビューと公開ページで挙動が変わる場合が稀にあります。<br/>\n 必ず公開ページで問題がないか最終的にチェックをするようにしてください。</li>\n</ul>\n<p><strong>STEP 04</strong></p>\n<h3>①JS対象シート追記 ②ドライブにUP</h3><p><strong>①</strong><a href=\"https://docs.google.com/spreadsheets/d/1BXlew3R3loKjm4tWplHsMxwBxRX5WIr8cnbrSeNMTtI/edit?pli=1#gid=1845153429\">JS対象確認シート</a><strong>に実装内容の詳細を追記。</strong></p>\n<ul>\n<li>使用箇所：どこのページにJSを使用しているか</li>\n<li>挙動内容：どういった内容でどういった動きをするか</li>\n</ul>\n<p><br/>\n<strong>②コーダー用ドライブにUPする。(※JSコードに変更を加えた場合)</strong><br/>\n<a href=\"https://drive.google.com/drive/u/0/folders/1kdrYlEMEdBSqyPh9tNb60Cc_UplSnHmt\">JS保管場所</a>＞新規フォルダ制作（フォルダ名はID）＞JS・CSSファイルをアップロード。</p>\n<p>※JSパーツ集のコードをそのまま使用している場合は②の対応はなしで問題ないです。</p>\n<p><br/>\n※こちらのステップはベーシックで対応します。</p>\n<p><strong>STEP 05</strong></p>\n<h3>ディレクター引き継ぎ</h3><p>JSパーツ集にあるパーツを使用した場合、該当JSパーツページに記載している注意点/懸念点をよく読み、<br/>\n案件のサイトチェックシートの引き継ぎ事項欄にも記入してディレクターによく伝える。<br/>\n<br/>\n※他にも懸念事項や不具合が発生しそうな点があれば報告する。</p>\n</section>\n\n<section class=\"content-element content-3\"><h2>注意点</h2><p>jQueryを使用したスクリプトを複数使用する場合、jQueryの読み込みは一度のみとし、1つだけ共通フッターに設置するようにしてください。</p>\n<p>jQueryが何回も呼ばれるのを避け、無駄な読み込みを減らすためです。（非常にサイトが重くなってしまう）</p>\n<p>アップセルなどで既にjQueryが使用されている場合も、重複して読み込まないようにしてください。</p>\n<p>複数のJSが入る場合はそれぞれJavaScript埋め込みパーツを配置し、スクリプトを個別に埋め込んでください。</p>\n<p>スクリプトの管理が容易になり、必要に応じて特定のスクリプトの削除等がしやすくなります。</p>\n<p>jQuery使用の際は「＄」ではなく、「jQuery」を使用</p>\n<p>コンフリクトを回避するため通常「＄」で記述する箇所を「jQuery」に変更してください。</p>\n<p>語尾にセミコロン【;】必須</p>\n<p>通常はつけなくても動作しますが、ferretOneのJSではセミコロンがないと動作しない場合があります。</p>\n<p>コメントアウトは　/* 〇〇〇〇 */　で指定<br/>\n※他者が見ても分かるように適宜コメントアウトを入れて下さい。</p>\n<p>【//〇〇〇〇】で指定するとエラーが起きます。必ず上記の形で指定してください。</p>\n<p>※ferretOneでは、JavaScriptコンパイル時にコードが一列になる為です。</p>\n<p>ちらつき防止→「js-displayNone」</p>\n<p>読み込み時に高さが出たりなど要素がちらつくのを防ぐ為、初期状態では要素を非表示「display: none;」にする事があります。その際、元々準備してあるクラス「<strong>.js-displayNone</strong>」を活用いただくと良いかと思います。</p>\n<p>※非表示にした要素をJS側で表示「display: block;」させる記述は追加する必要があります。</p>\n<p>console.logに出力・エラーを残さない</p>\n<p>JS動作確認用に表示させていた文字列など、余計な出力・エラーが納品時に残らないようにしてください。</p>\n<p>JSパーツ関連の無駄な余白を残さない</p>\n<p><a href=\"//js-part.hmup.jp/initialization\">初期設定</a>にもあるように、JavaScript埋め込みパーツにデフォルトでつく余白を消し忘れないようにしてください。</p>\n<p>jQuery使用推奨</p>\n<p>jQueryはエラーキャッチするのでエラーが出てもその後の処理が止まらないですが、JavaScriptはエラーキャッチ（例外処理）を自分で入れる必要があり、対策をしていないとお客様側で他のパーツを触ったりなどした場合に予期せぬエラーが起きるとその後の処理も止まってしまう恐れがあります。</p>\n<p> </p>\n<p>※JavaScriptを使用した上でエラーキャッチを入れない場合、共通フッターではなく該当ページのセクション下に設置して他ページになるべく影響が出ないように工夫をしてください。</p>\n</section>\n\n<section class=\"content-element content-4\"><h2>不具合・エラー</h2><p>エラーあるある</p>\n<ul>\n<li>セミコロン抜け</li>\n<li>遅延処理【setTimeout】すれば大体直る（HTMLより先にJSが走っている可能性が高い）<br/>\n ※記事リストパーツなどは読み込み時間がかかるため注意</li>\n</ul>\n<p>よくある不具合</p>\n<ul>\n<li>Reactのレンダリングが通常のHTMLより遅いため、JavaScript埋め込みパーツの処理が先に走ってしまい動作しないことがあります。（※要素移動系【insertBefore】使用時など/記事リストスライダー...）</li>\n</ul>\n<p>React18で正常に動かない件</p>\n<ul>\n<li>最適な解決策は現状なし（React17にダウングレードすることのみ）</li>\n<li>要素移動（insertBeforeなど）によってコンテンツモデルを無視した位置にHTMLを挿入することによって、NextJSからエラーが出る。そのエラーが出ることによって後続のJSパーツの記述が機能しなくなる。</li>\n<li>ferretOneのデフォルトの機能では再現できない無理やりな実装をしないことが一番の解決策。</li>\n</ul>\n<p> </p>\n<p>（参考）</p>\n<p><a href=\"https://blog.ojisan.io/next-nest-ng/\">https://blog.ojisan.io/next-nest-ng/</a></p>\n<p><a href=\"https://qiita.com/aiji42/items/748bf3ef3c7ca65535db\">https://qiita.com/aiji42/items/748bf3ef3c7ca65535db</a></p>\n<p><a href=\"https://zenn.dev/takewell/articles/5ee9530eedbeb82e4de7\">https://zenn.dev/takewell/articles/5ee9530eedbeb82e4de7</a></p>\n</section>\n\n<section class=\"content-element content-5\"></section>"
  },
  {
    "title": "擬似ナビ（2段）",
    "url": "https://js-part.hmup.jp/js/g-navi01",
    "html": "<section class=\"content-element content-1 navi_custom_sec js-navi_custom_sec fixed\" data-designpart=\"section-empty\" data-designpart-id=\"642f669ce4dc09621d945b2d\"><a href=\"/index\"></a><a href=\"#\">お問い合わせ</a><a href=\"#\">資料ダウンロード</a><p>ハンバーガーメニュー</p><ul><li><a href=\"#\">サービス</a><ul><li><a href=\"#\">サービス01</a></li><li><a href=\"#\">サービス02</a></li><li><a href=\"#\">サービス03</a><ul><li><a href=\"#\">サービス01-01</a></li><li><a href=\"#\">サービス01-02</a></li><li><a href=\"#\">サービス01-03</a></li></ul></li></ul></li><li><a href=\"#\">選ばれる理由</a></li><li><a href=\"#\">導入事例</a><ul><li><a href=\"#\">導入事例詳細01</a></li><li><a href=\"#\">導入事例詳細02</a></li><li><a href=\"#\">導入事例詳細03</a><ul><li><a href=\"#\">導入事例詳細03-01</a></li><li><a href=\"#\">導入事例詳細03-02</a></li></ul></li></ul></li><li><a href=\"#\">お知らせ</a></li><li><a href=\"#\">よくあるご質問</a></li></ul></section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>\n<p> </p>\n<p>追加可能パーツ</p>\n</th>\n<th>変更可能箇所</th>\n<th>NG</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>\n<p><strong>ページ複製・<br/>\n   クリップボード使用可否</strong></p>\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<ul>\n<li>CVボタン<br/>\n→全体で3つまで※1</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>ナビ項目の数<br/>\n(共通ナビと同様に最大8個)</li>\n<li>文字スタイル・余白</li>\n<li>hover時の挙動</li>\n<li>ボタンデザイン<br/>\n     </li>\n</ul>\n<p>[ハンバーガーメニュー]</p>\n<ul>\n<li>背景色・文字スタイル</li>\n<li>アイコンの色</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>パーツの新規追加<br/>\n（パーツ・行・カラム等）</li>\n<li>スムーズスクロールの速さ</li>\n<li>共通パーツに用意されていないパーツ（検索パーツ他）</li>\n<li>検索結果ページに表示※2</li>\n</ul>\n</td>\n<td><strong>×</strong></td>\n<td>○</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：4つ以上はレスポンシブ時に崩れる恐れがあります。<br/>\n   ※2：構造上、検索結果ページに擬似ナビを表示させることは不可です。<br/>\n<br/>\n   ※詳しい編集方法や編集時の注意点については【<a href=\"//js-part.hmup.jp/js/g-navi/edit\">擬似グロナビ（2段）〜共通パーツ編集方法〜</a>】をご参照ください。<br/>\n   ※サイドバーがある場合でも、疑似ナビは幅100%で表示されます。<br/>\n   ※リッチテキストは操作性が悪いので、頻繁に更新されるのに向きません。ご了承頂いた上で、要引継ぎをお願いします。<br/>\n   　<strong>文言・リンクの変更前にはクリップボードでバックアップを保存すること</strong>をオススメします。<br/>\n   ※<strong>リンク、文言の変更、文字色の変更はリッチテキスト内の文字行を１行ずつドラッグし編集を行うようにしてください。</strong><br/>\n   　複数の文字列をドラッグして選択した状態で編集を行うと、公開画面でメニューが崩れる恐れがあります。<br/>\n   ※<a href=\"//js-part.hmup.jp/js/fade-slide-in\">フェードインアニメーション</a>を使用している場合はページ内リンク位置がずれます。</p>\n<p>※テキストパーツのHTMLモードを使用した文言の編集・修正はしないでください。コードの確認、不要なインラインスタイルを削除する、入り込んでしまった不要なデータコードをHTMLモードで削除することは可能です。</p>\n<p>※<strong>メニューリストを作成する際にプレーンテキストをコピペした場合、作成後のメニューリストのHTML構造が「ul &gt; li &gt; div &gt; aになっていることを確認してください</strong>。li &gt; p &gt; aの構造になっていた場合、リスト化を解除した上でもう一度リスト化し　li &gt; div &gt; aに構造が変更されていることを確認してください。 JSがうまくあたらない場合、divが生成されていない可能性があります。（詳しくは<a href=\"//js-part.hmup.jp/js/g-navi/edit\">設定方法</a>をご覧ください）</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-4\" style=\"background-color:#fafafa\"><h2>内部リンク確認用</h2><ul><li><a href=\"#nav01\">内部リンク①</a></li><li><a href=\"#nav02\">内部リンク②</a></li><li><a href=\"#nav03\">内部リンク③</a></li></ul><ul><li><a href=\"/js/g-navi001#categoryA\">外部ページ遷移（疑似ナビ）</a></li><li><a href=\"/js/move-to-hamburger-at-sp#categoryA\">外部ページ遷移（共通ナビ）</a></li></ul><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>\n<p>編集画面用CSSを適切な位置に記述。</p>\n</li>\n<li>JavaScriptを使用したいパーツのセクションの<strong>一番下</strong>に配置。複数ページある場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。</li>\n</ul>\n<ol>\n<li>疑似ナビ表示用ページの編集画面に入り、右上にある基本設定画面から、エリアの表示切り替え＞「ナビゲーションを表示する」のチェックを外す。</li>\n<li>セクションを新規作成し、クラス名「<strong>navi_custom_sec js-navi_custom_sec fixed</strong>」を追加。<br/>\n ※ナビを固定したくない場合、クラス「<strong>fixed</strong>」は削除してください。</li>\n<li>上記セクションの中に共通パーツを新規作成。</li>\n<li>[共通パーツ内]で行（row）を作成し、クラス名「<strong>navigation-cont_custom</strong>」を追加。</li>\n<li>上記の行（row）を2分割し、左のカラム（col）にクラス名「<strong>logo_col</strong>」を、右のカラム（col）にクラス名「<strong>btn_col</strong>」を追加。※ロゴ画像やボタンは必要であれば各自追加。</li>\n<li>その下に行（row）を新規作成し、クラス名「<strong>menu-trigger_row</strong>」を追加。<br/>\n ※これがSP時の三本線ハンバーガーメニューの元になります。</li>\n<li>上記の行（row）内にリッチテキストを配置し、クラス名「<strong>js-menu-trigger_btn menu-trigger_btn</strong>」を追加。<br/>\n ※テキスト内容は公開ページには表示されないので何でも大丈夫です。（例：ハンバーガーメニュー）</li>\n<li>その下に行（row）を更に新規作成し、クラス名「<strong>main-menu_custom</strong>」を追加。</li>\n<li>上記の行（row）内にリッチテキストを配置し、クラス名「<strong>js-menu_lists menu_lists</strong>」を追加。<br/>\n リッチテキストのリスト機能を使用して、第一階層〜第三階層までリンクを設定。（<a href=\"//js-part.hmup.jp/js/g-navi/edit\">設定方法</a>・<a href=\"#structure\">構造図</a>参照）\n <p>※この際、一つでもリンク設定漏れがあると疑似ナビが正しく移動しませんのでご注意ください。</p>\n</li>\n</ol>\n<ul>\n<li>新CMSの場合：基本デザインパーツ（セクションパーツ、単体パーツ）を使用して問題ありません。<br/>\n rowは新規で作成した方がCSSの影響を受けないので安心かと思います。</li>\n</ul>\n<h2>注意点</h2><ul>\n<li>共通パーツ内のリッチテキストは時々意図しない挙動になり崩れる恐れがあるので注意してください。<br/>\n ※半角スペースが入っていると崩れたりなど<br/>\n ※コピーだと余計なタグを持ってくることがあるので手入力推奨<br/>\n  </li>\n<li>\n<p>第二階層の数について制限はありませんが、閲覧者のモニターの高さによっては見切れる可能性があります。個数的にははっきり言えませんが、10個以上はおすすめはしません。<br/>\n  </p>\n</li>\n<li>ページ内にフェードインのアニメーションを使用しているとページ内リンクのスクロール位置がズレます。これは共通ナビでも発生する仕様ですのでご注意ください。<br/>\n  </li>\n<li>\n<p>擬似ナビ設置ページでメンビジを使用する際は、擬似ナビとメンビジの表示位置が公開画面と逆になりますのでご注意ください。<br/>\n  </p>\n</li>\n<li>\n<p>アップセル等でCSSが古い場合があるので、カスタムCSSに「<strong>scroll-behavior: smooth;</strong>」が適用されているか必ず確認して下さい。こちらのスタイルが当たっていないとスムーズスクロールが効きません。<br/>\n  </p>\n</li>\n<li>\n<p><strong>メニューリストを作成する際にプレーンテキストをコピペした場合、作成後のメニューリストのHTML構造が「ul &gt; li &gt; div &gt; aになっていることを確認してください</strong>。li &gt; p &gt; aの構造になっていた場合、リスト化を解除した上でもう一度リスト化し　li &gt; div &gt; aに構造が変更されていることを確認してください。 JSがうまくあたらない場合、divが生成されていない可能性があります。（詳しくは<a href=\"//js-part.hmup.jp/js/g-navi/edit\">設定方法</a>をご覧ください）</p>\n</li>\n</ul>\n</section>\n\n<section class=\"content-element content-5\" data-designpart=\"section-tab-nab-v2\" data-designpart-id=\"6822d4806248c1056f815e0a\"><h2>JS・CSS・編集画面用CSS<br/></h2><ul><li><strong>JS</strong></li><li><strong>CSS</strong></li><li><strong>編集画面用CSS</strong></li><li><strong>変数が無い場合</strong></li></ul><a href=\"#\">JSをコピーする</a><p><strong>2025-08-14更新（v2.1.0）</strong></p>\n&lt;script&gt;<br/>'use strict';<br/>/* ---------------------------<br/>擬似ナビ（2段） v2.1.0<br/>--------------------------- */<br/>document.addEventListener('DOMContentLoaded', function() {<br/> /* 擬似ナビに .has-fixed-side を付与（固定サイドバーが存在する場合のみ） */<br/> const fixedSide = document.querySelector('.fixed-side');<br/> const navi_custom_sec = document.getElementsByClassName('js-navi_custom_sec')[0];<br/> if (fixedSide &amp;&amp; navi_custom_sec) {<br/>  navi_custom_sec.classList.add('has-fixed-side');<br/> }<br/><br/> /* ちらつき防止 */<br/> document.querySelectorAll('.js-navi_custom_sec')[0].style.display = 'block';<br/> /*--- PC or SP　判定 ---*/<br/> function windowPCorSP() {<br/>  if (window.matchMedia('(min-width: 770px)').matches) {<br/>   /* 画面幅が770px以上のときの処理(PC) */<br/>   return true;<br/>  } else {<br/>   /* 画面幅が769px以下のときの処理(SP) */<br/>   return false;<br/>  }<br/> };<br/> /*------------- 初期化 (変数定義やクラス付与) START -------------*/<br/> /* メインメニュー（Gナビ） */<br/> /* クラス付与 */<br/> const mainMenu = document.querySelectorAll('.js-menu_lists')[0];<br/> /* クラス付与 */<br/> const level_01 = document.querySelectorAll('.js-menu_lists &gt; div &gt; ul &gt; li');<br/> level_01.forEach((el) =&gt; {<br/>  if (!el.classList.contains('js-level-01')) {<br/>   el.classList.add('js-level-01');<br/>  }<br/> });<br/> /* クラス付与 */<br/> const level_02 = document.querySelectorAll(<br/>  '.js-menu_lists ul &gt; li &gt; ul &gt; li');<br/> level_02.forEach((el) =&gt; {<br/>  if (!el.classList.contains('js-level-02')) {<br/>   el.classList.add('js-level-02');<br/>  }<br/> });<br/> /* クラス付与 */<br/> const level_03 = document.querySelectorAll(<br/>  '.js-menu_lists ul &gt; li &gt; ul &gt; li &gt; ul &gt; li');<br/> level_03.forEach((el) =&gt; {<br/>  el.classList.remove('js-level-02');<br/>  /* 第三階層から js-level-02 を除外 */<br/>  if (!el.classList.contains('js-level-03')) {<br/>   el.classList.add('js-level-03');<br/>  }<br/> });<br/> /* 1階層目トリガー */<br/> for (let i = 0; i &lt; level_01.length; i++) {<br/>  let target;<br/>  if (level_01[i].querySelectorAll('.js-level-02').length &gt; 0) {<br/>   target = level_01[i];<br/>  };<br/>  /* クラス付与 */<br/>  if (target !== undefined) {<br/>   target.classList.add('js-level-01-trigger');<br/>   target.classList.remove('js-level-01', 'js-level-02', 'js-level-03');<br/>   /* aタグの中にspanを追加 */<br/>   let icon_element = document.createElement('span');<br/>   icon_element.classList.add('toggle_icon');<br/>   let aTag = target.querySelector('div &gt; a');<br/>   if (aTag &amp;&amp; !aTag.querySelector('.toggle_icon')) {<br/>    aTag.appendChild(icon_element);<br/>   }<br/>  }<br/> };<br/> const level_01_trigger = document.querySelectorAll('.js-level-01-trigger');<br/> /* 2階層目 [ul] */<br/> for (let i = 0; i &lt; level_02.length; i++) {<br/>  const level_01_cont = level_02[i].parentNode;<br/>  /* クラス付与 */<br/>  level_01_cont.classList.add('js-level-01-cont');<br/>  level_01_cont.style.display = 'none';<br/> };<br/> const level_01_cont = document.querySelectorAll('.js-level-01-cont');<br/> /* 2階層目トリガー */<br/> for (let i = 0; i &lt; level_02.length; i++) {<br/>  let target;<br/>  if (level_02[i].querySelectorAll('.js-level-03').length &gt; 0) {<br/>   target = level_02[i];<br/>  };<br/>  /* クラス付与 */<br/>  if (target !== undefined) {<br/>   target.classList.add('js-level-02-trigger');<br/>   target.classList.remove('js-level-01', 'js-level-02', 'js-level-03');<br/>   /* aタグの中にspanを追加 */<br/>   let icon_element = document.createElement('span');<br/>   icon_element.classList.add('toggle_icon');<br/>   let aTag = target.querySelector('div &gt; a');<br/>   if (aTag &amp;&amp; !aTag.querySelector('.toggle_icon')) {<br/>    aTag.appendChild(icon_element);<br/>   }<br/>  }<br/> };<br/> const level_02_trigger = document.querySelectorAll('.js-level-02-trigger');<br/> /* 3階層目 [ul] */<br/> for (let i = 0; i &lt; level_03.length; i++) {<br/>  const level_02_cont = level_03[i].parentNode;<br/>  /* クラス付与 */<br/>  level_02_cont.classList.add('js-level-02-cont');<br/>  level_02_cont.style.display = 'none';<br/> };<br/> const level_02_cont = document.querySelectorAll('.js-level-02-cont');<br/> /*------------- 初期化 (変数定義やクラス付与) END -------------*/<br/> /*------------- モジュール 関数定義 START -------------*/<br/> /* モジュール (カプセル化) jQueryとかぶらないように */<br/> const ferretModule = (() =&gt; {<br/>  return {<br/>   /* slideUp */<br/>   slideUp: (el, duration = 300) =&gt; {<br/>    el.style.height = el.offsetHeight + 'px';<br/>    el.offsetHeight;<br/>    el.style.transitionProperty = 'height, margin, padding';<br/>    el.style.transitionDuration = duration + 'ms';<br/>    el.style.transitionTimingFunction = 'ease';<br/>    el.style.overflow = 'hidden';<br/>    el.style.height = 0;<br/>    el.style.paddingTop = 0;<br/>    el.style.paddingBottom = 0;<br/>    el.style.marginTop = 0;<br/>    el.style.marginBottom = 0;<br/>    setTimeout(() =&gt; {<br/>     el.style.display = 'none';<br/>     el.style.removeProperty('height');<br/>     el.style.removeProperty('padding-top');<br/>     el.style.removeProperty('padding-bottom');<br/>     el.style.removeProperty('margin-top');<br/>     el.style.removeProperty('margin-bottom');<br/>     el.style.removeProperty('overflow');<br/>     el.style.removeProperty('transition-duration');<br/>     el.style.removeProperty('transition-property');<br/>     el.style.removeProperty('transition-timing-function');<br/>    }, duration);<br/>   },<br/>   /* slideDown */ slideDown: (el, duration = 300) =&gt; {<br/>    el.style.removeProperty('display');<br/>    let display = window.getComputedStyle(el).display;<br/>    if (display === 'none') {<br/>     display = 'block';<br/>    }<br/>    el.style.display = display;<br/>    let height = el.offsetHeight;<br/>    el.style.overflow = 'hidden';<br/>    el.style.height = 0;<br/>    el.style.paddingTop = 0;<br/>    el.style.paddingBottom = 0;<br/>    el.style.marginTop = 0;<br/>    el.style.marginBottom = 0;<br/>    el.offsetHeight;<br/>    el.style.transitionProperty = 'height, margin, padding';<br/>    el.style.transitionDuration = duration + 'ms';<br/>    el.style.transitionTimingFunction = 'ease';<br/>    el.style.height = height + 'px';<br/>    el.style.removeProperty('padding-top');<br/>    el.style.removeProperty('padding-bottom');<br/>    el.style.removeProperty('margin-top');<br/>    el.style.removeProperty('margin-bottom');<br/>    setTimeout(() =&gt; {<br/>     el.style.removeProperty('height');<br/>     el.style.removeProperty('overflow');<br/>     el.style.removeProperty('transition-duration');<br/>     el.style.removeProperty('transition-property');<br/>     el.style.removeProperty('transition-timing-function');<br/>    }, duration);<br/>   }<br/>  }<br/> })();<br/> /*------------- モジュール 関数定義 END -------------*/<br/> /*------------- 擬似ナビゲーション メンビジ上に配置 START -------------*/<br/> const theme_fo_base = document.getElementsByClassName('theme-fo-base')[0];<br/> const main_visual = document.getElementsByClassName('main-visual')[0];<br/> theme_fo_base.parentNode.insertBefore(navi_custom_sec, theme_fo_base);<br/> /*------------- 擬似ナビゲーション メンビジ上に配置 END -------------*/<br/><br/> /*------------- ドロップダウン ナビゲーション START -------------*/<br/> const initializationLevel = () =&gt; {<br/>  for (let i = 0; i &lt; level_01_cont.length; i++) {<br/>   level_01_cont[i].classList.remove('is-open');<br/>   level_01_cont[i].style.display = 'none';<br/>  }<br/>  for (let i = 0; i &lt; level_02_cont.length; i++) {<br/>   level_02_cont[i].classList.remove('is-open');<br/>   level_02_cont[i].style.display = 'none';<br/>  }<br/> };<br/> const level02Open = (e) =&gt; {<br/>  let slideTarget = e.currentTarget.getElementsByClassName(<br/>   'js-level-01-cont')[0];<br/>  ferretModule.slideDown(slideTarget, 0);<br/> };<br/> const level02Close = (e) =&gt; {<br/>  let slideTarget = e.currentTarget.getElementsByClassName(<br/>   'js-level-01-cont')[0];<br/>  ferretModule.slideUp(slideTarget, 200);<br/> };<br/> const level03Open = (e) =&gt; {<br/>  let slideTarget = e.currentTarget.getElementsByClassName(<br/>   'js-level-02-cont')[0];<br/>  ferretModule.slideDown(slideTarget, 200);<br/> };<br/> const level03Close = (e) =&gt; {<br/>  let slideTarget = e.currentTarget.getElementsByClassName(<br/>   'js-level-02-cont')[0];<br/>  ferretModule.slideUp(slideTarget, 200);<br/> };<br/> const level02ToggleSp = (e) =&gt; {<br/>  e.preventDefault();<br/>  e.stopPropagation();<br/>  let clickTarget = e.currentTarget;<br/>  let trigger = clickTarget.closest('.js-level-01-trigger');<br/>  let targetList = trigger.querySelector('.js-level-01-cont');<br/>  if (targetList.style.display !== 'block') {<br/>   clickTarget.classList.add('is-open');<br/>   targetList.classList.add('is-open');<br/>   targetList.style.display = 'block';<br/>  } else {<br/>   clickTarget.classList.remove('is-open');<br/>   targetList.classList.remove('is-open');<br/>   targetList.style.display = 'none';<br/>  }<br/> };<br/> const level03ToggleSp = (e) =&gt; {<br/>  console.log('3rd level toggle fired');<br/>  e.preventDefault();<br/>  e.stopPropagation();<br/>  let clickTarget = e.currentTarget;<br/>  let trigger = clickTarget.closest('.js-level-02-trigger');<br/>  let targetList = trigger.querySelector('ul.js-level-02-cont') || trigger.parentElement<br/>   .querySelector('ul.js-level-02-cont') || trigger.closest('li').querySelector(<br/>    'ul.js-level-02-cont');<br/>  if (!targetList) {<br/>   console.warn('第三階層が見つかりませんでした');<br/>   return;<br/>  }<br/>  if (targetList.style.display !== 'block') {<br/>   clickTarget.classList.add('is-open');<br/>   targetList.classList.add('is-open');<br/>   targetList.style.display = 'block';<br/>  } else {<br/>   clickTarget.classList.remove('is-open');<br/>   targetList.classList.remove('is-open');<br/>   targetList.style.display = 'none';<br/>  }<br/> };<br/> const menuLevel23Open = () =&gt; {<br/>  if (windowPCorSP()) { /*--- PCのときのイベント設定 ---*/<br/>   /* リサイズでレスポンシブ時 */<br/>   for (let i = 0; i &lt; level_01_cont.length; i++) {<br/>    if (level_01_cont[i].classList.contains('is-open')) {<br/>     initializationLevel();<br/>    }<br/>   };<br/>   mainMenu.style.display = '';<br/>   if (menuTiggerBtn.classList.contains('active')) {<br/>    menuTiggerBtn.classList.remove('active');<br/>   };<br/>   for (let i = 0; i &lt; level_01_trigger.length; i++) {<br/>    /* 2階層目OPEN ホバー ドロップダウン */<br/>    level_01_trigger[i].addEventListener('mouseenter', level02Open);<br/>    /* 2階層目OPEN ホバーアウト ドロップアップ */<br/>    level_01_trigger[i].addEventListener('mouseleave', level02Close);<br/>   };<br/>   /* 3階層目OPEN ホバー ドロップダウン */<br/>   for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>    level_02_trigger[i].addEventListener('mouseenter', level03Open);<br/>    /* 3階層目OPEN ホバーアウト ドロップアップ */<br/>    level_02_trigger[i].addEventListener('mouseleave', level03Close);<br/>   };<br/>   for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>    let toggle_icon = level_02_trigger[i].querySelector('div &gt; .toggle_icon');<br/>    /* 2階層目OPEN クリックトグル */<br/>    toggle_icon.removeEventListener('click', level02ToggleSp);<br/>   };<br/>   for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>    let toggle_icon = level_02_trigger[i].querySelector('div &gt; .toggle_icon');<br/>    /* 2階層目OPEN クリックトグル */<br/>    toggle_icon.removeEventListener('click', level03ToggleSp);<br/>   };<br/>  } else { /*--- SPのときのイベント設定 ---*/<br/>   menuTiggerBtn.style.display = '';<br/>   if (!menuTiggerBtn.classList.contains('active')) {<br/>    mainMenu.style.display = 'none';<br/>   };<br/>   for (let i = 0; i &lt; level_01_trigger.length; i++) {<br/>    /* 2階層目OPEN ホバー ドロップダウン */<br/>    level_01_trigger[i].removeEventListener('mouseenter', level02Open);<br/>    /* 2階層目OPEN ホバーアウト ドロップアップ */<br/>    level_01_trigger[i].removeEventListener('mouseleave', level02Close);<br/>   };<br/>   for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>    /* 3階層目OPEN ホバー ドロップダウン */<br/>    level_02_trigger[i].removeEventListener('mouseenter', level03Open);<br/>    /* 3階層目OPEN ホバーアウト ドロップアップ */<br/>    level_02_trigger[i].removeEventListener('mouseleave', level03Close);<br/>   };<br/>   for (let i = 0; i &lt; level_01_trigger.length; i++) {<br/>    let toggle_icon = level_01_trigger[i].querySelector('.toggle_icon');<br/>    /* 2階層目OPEN クリックトグル */<br/>    if (toggle_icon) {<br/>     toggle_icon.addEventListener('click', level02ToggleSp);<br/>    }<br/>   }; <br/>   /* 2階層トリガーの.toggle_iconに3階層トグルイベントをバインド */<br/>   for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>    let toggle_icon = level_02_trigger[i].querySelector('.toggle_icon');<br/>    if (toggle_icon) {<br/>     toggle_icon.removeEventListener('click', level03ToggleSp);<br/>     toggle_icon.addEventListener('click', level03ToggleSp);<br/>    }<br/>   }<br/>  };<br/> }; <br/> /*------------- ドロップダウン ナビゲーション END -------------*/<br/> /*------------- ハンバーガーメニュー START -------------*/<br/> const menuTiggerBtn = document.querySelectorAll('.js-menu-trigger_btn')[0];<br/> /* ハンバーガーメニュー内リンククリックでメニューを閉じる（トグル以外） */<br/> const navLinks = document.querySelectorAll('.js-menu_lists a');<br/> navLinks.forEach(link =&gt; {<br/>  link.addEventListener('click', function(e) {<br/>   if (!link.querySelector('.toggle_icon') &amp;&amp; !windowPCorSP()) {<br/>    mainMenu.style.display = 'none';<br/>    menuTiggerBtn.classList.remove('active');<br/>   }<br/>  });<br/> });<br/> menuTiggerBtn.innerHTML = (<br/>  '\\       &lt;span class=\"modal_close_border\"&gt;&lt;/span&gt;\\       &lt;span class=\"modal_close_border\"&gt;&lt;/span&gt;\\       &lt;span class=\"modal_close_border\"&gt;&lt;/span&gt;\\     '<br/> );<br/> menuTiggerBtn.addEventListener('click', function() {<br/>  menuTiggerBtn.classList.toggle('active');<br/>  if (menuTiggerBtn.classList.contains('active')) {<br/>   mainMenu.style.display = '';<br/>  } else {<br/>   mainMenu.style.display = 'none';<br/>  }<br/> }); <br/> /*------------- ハンバーガーメニュー END -------------*/ <br/> /*------------- PC or SPでGナビの表示非表示を切り替える START -------------*/<br/> const mainMenuDisplay = () =&gt; {<br/>  if (windowPCorSP()) {<br/>   mainMenu.style.display = '';<br/>   menuTiggerBtn.classList.remove('active');<br/>   menuTiggerBtn.style.display = 'none';<br/>  } else {<br/>   mainMenu.style.display = 'none';<br/>   menuTiggerBtn.style.display = '';<br/>  }<br/> }; <br/> /*------------- PC or SPでGナビの表示非表示を切り替える END -------------*/ <br/> /*--- ウィンドウのリサイズ完了後の処理 ---*/<br/> const windowResize = () =&gt; {<br/>  let timer = 0;<br/>  let delay = 200;<br/>  window.addEventListener('resize', () =&gt; {<br/>   clearTimeout(timer);<br/>   timer = setTimeout(() =&gt; {<br/>    menuLevel23Open();<br/>   }, delay);<br/>  }, false);<br/> };<br/> menuLevel23Open();<br/> mainMenuDisplay();<br/> windowResize();<br/>}); <br/>/*--- ページ内遷移ずれる対策 ---*/<br/>window.addEventListener('load', () =&gt; {<br/> const headerSec = document.querySelector('.js-navi_custom_sec'); <br/> /* 擬似ナビ（2段）を取得 */<br/> if (headerSec) {<br/>  const headerHeight = headerSec.offsetHeight; <br/>  /* 擬似ナビ（2段）の高さを取得 */ <br/>  /* 固定ナビの場合の処理 */<br/>  if (headerSec.classList.contains('fixed')) {<br/>   document.documentElement.style.setProperty('--navi-height',<br/>    `${headerHeight}px`);<br/>  }<br/> }<br/>}); <br/>/*--- ページ内遷移ずれる対策 END ---*/ <br/>/* ---------------------------     擬似ナビ（2段） END   --------------------------- */<br/><br/>&lt;/script&gt;<br/><br/><br/><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p><p>//旧CMS用（不要であれば削除）<br/>//新CMS用（不要であれば削除）<br/>と2つ記述を用意している箇所がいくつかありますので必要に応じて削除orコメントアウトを外してください。<br/>※デフォルトでは新CMS用の記述が当たるようにしています。</p><a href=\"#\">CSSをコピーする</a><p><strong>2025-08-14更新（v2.2.0）</strong></p>\n/*----- 擬似ナビ（2段） START v2.2.0-----*/<br/>// メンビジ上に配置のとき<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;.js-navi_custom_sec {<br/>    display: none; //ちらつき防止<br/>    * {<br/>      box-sizing: border-box; //はみだし防止<br/>    }<br/>    //固定サイドバー対策<br/>    &amp;.has-fixed-side {<br/>      @media screen and (min-width: 1201px) {<br/>        width: calc(100% - 420px);<br/>      }<br/>    }<br/>  }<br/>  &amp;.navi_custom_sec {<br/>    // font-family: $font_family;//旧CMS用（不要であれば削除）<br/>    font-family: var(--fo-text-font-family);//新CMS用（不要であれば削除）<br/>    width: 100%;<br/>    background: $header_bg_color;<br/>    box-shadow: $navigation_box_shadow_common;<br/>    padding: 0;<br/>    // オプション 上部固定<br/>    &amp;.fixed {<br/>      position: sticky;<br/>      z-index: 1001;<br/>      top: 0;<br/>    }<br/>    .inner {<br/>      max-width: 100%;<br/>      padding: 0;<br/>      .row {<br/>        .col {<br/>          padding: 0;<br/>          .component {<br/>            margin: 0;<br/>            &amp;.cta {<br/>              .cta-row {<br/>                &amp;.navigation-cont_custom {<br/>                  display: flex;<br/>                  align-items: center;<br/>                  justify-content: space-between;<br/>                  flex-wrap: nowrap;<br/>                  max-width: 1240px;<br/>                  min-height: 60px;<br/>                  padding: 10px 20px;<br/>                  margin: 0 auto;<br/>                  @include breakpoint-sp {<br/>                    min-height: 51px;<br/>                    padding: 0;<br/>                  }<br/>                  .cta-column {<br/>                    display: block;<br/>                    box-sizing: border-box;<br/>                    margin: 0;<br/>                    padding: 0;<br/>                    &amp;.logo_col {<br/>                      width: auto !important;<br/>                      @include breakpoint-sp {<br/>                        padding: 0 0 0 10px;<br/>                      }<br/>                      .component {<br/>                        &amp;.image {<br/>                          a {<br/>                            display: inline-block;<br/>                          }<br/>                          img {<br/>                            @include breakpoint-pc {<br/>                              width: $header_logo !important;<br/>                              // max-height: 50px;<br/>                            }<br/>                            @include breakpoint-sp {<br/>                              max-height: $header_sp_logo;<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                    &amp;.btn_col {<br/>                      display: flex;<br/>                      flex-direction: row;<br/>                      flex-grow: 1;<br/>                      justify-content: flex-end;<br/>                      width: auto !important;<br/>                      padding: 10px 0;<br/>                      @include breakpoint-sp {<br/>                        padding: 0 65px 0 0;<br/>                      }<br/>                      .component {<br/>                        &amp;.button {<br/>                          &amp;:not(:first-child) {<br/>                            margin-left: 10px;<br/>                            @include breakpoint-sp {<br/>                              margin-left: 0;<br/>                            }<br/>                          }<br/>                          .button-cont {<br/>                            a {<br/>                              &amp;.size-s {<br/>                                @include breakpoint-sp {<br/>                                  width: auto;<br/>                                  min-width: auto;<br/>                                  margin: 0;<br/>                                  padding: 5px 10px 5px 5px;<br/>                                  border: 0;<br/>                                  border-radius: 0;<br/>                                  font-size: 0 !important;<br/>                                  letter-spacing: 0;<br/>                                  background: none !important;<br/>                                  box-shadow: none;<br/>                                }<br/>                                &amp;::before {<br/>                                  @include breakpoint-sp {<br/>                                    font-size: 22px;<br/>                                    margin: 0;<br/>                                    // color: $main_color;//旧CMS用（不要であれば削除）<br/>                                    color: var(--fo-main-color);//新CMS用（不要であれば削除）<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                          &amp;.btn_custom_tel {<br/>                            .button-cont {<br/>                              a {<br/>                                &amp;.size-s {<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>                &amp;.menu-trigger_row {<br/>                  width: max-content;<br/>                  position: absolute;<br/>                  top: 0;<br/>                  right: 0;<br/>                  margin: 0;<br/>                  padding: 0;<br/>                  @include breakpoint-pc {<br/>                    display: none;<br/>                  }<br/>                  .cta-column {<br/>                    margin: 0;<br/>                    padding: 0;<br/>                    .component {<br/>                      &amp;.richtext {<br/>                        &amp;.menu-trigger_btn {<br/>                          width: 60px;<br/>                          height: 51px;<br/>                          margin: 0;<br/>                          padding: 0;<br/>                          font-size: 0;<br/>                          // background-color: $main_color;//旧CMS用（不要であれば削除）<br/>                          background-color: var(--fo-main-color);//新CMS用（不要であれば削除）<br/>                          span {<br/>                            position: absolute;<br/>                            left: 15px;<br/>                            width: 30px;<br/>                            height: 3px;<br/>                            background-color: #fff;<br/>                            border-radius: 3px;<br/>                            transition: all .4s;<br/>                            &amp;:nth-of-type(1) {<br/>                              top: 15px;<br/>                            }<br/>                            &amp;:nth-of-type(2) {<br/>                              top: 24px;<br/>                            }<br/>                            &amp;:nth-of-type(3) {<br/>                              bottom: 15px;<br/>                            }<br/>                          }<br/>                          &amp;.active {<br/>                            span {<br/>                              &amp;:nth-of-type(1) {<br/>                                -webkit-transform: translateY(10px) rotate(-45deg);<br/>                                transform: translateY(10px) rotate(-45deg);<br/>                              }<br/>                              &amp;:nth-of-type(2) {<br/>                                opacity: 0;<br/>                              }<br/>                              &amp;:nth-of-type(3) {<br/>                                -webkit-transform: translateY(-8px) rotate(45deg);<br/>                                transform: translateY(-8px) rotate(45deg);<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>                &amp;.main-menu_custom {<br/>                  min-height: auto;<br/>                  margin: 0;<br/>                  padding: 0;<br/>                  background: $navigation_bg_color;<br/>                  //SP用<br/>                  @include breakpoint-sp {<br/>                    max-height: calc(100vh - 51px);<br/>                    overflow-y: auto;<br/>                    /*----<br/>                    //スクロールバー非表示<br/>                    -ms-overflow-style: none; //Edge<br/>                    scrollbar-width: none; //Firefox<br/>                    &amp;::-webkit-scrollbar {<br/>                      display: none;<br/>                    }<br/>                    ----*/<br/>                  }<br/>                  .cta-column {<br/>                    margin: 0;<br/>                    padding: 0;<br/>                    .component {<br/>                      &amp;.richtext {<br/>                        &amp;.menu_lists {<br/>                          //PC用<br/>                          @include breakpoint-pc {<br/>                            ul {<br/>                              max-width: 1140px;<br/>                              display: table;<br/>                              width: 100%;<br/>                              margin: 0 auto;<br/>                              text-align: center;<br/>                              list-style: none;<br/>                              li {<br/>                                position: relative;<br/>                                box-sizing: content-box;<br/>                                min-width: 90px;<br/>                                color: $navigation_text_color;<br/>                                p {<br/>                                  margin: 0;<br/>                                }<br/>                                a {<br/>                                  display: block;<br/>                                  text-decoration: none;<br/>                                  font-size: $navigation_font_size;<br/>                                  font-weight: $navigation_font_weight;<br/>                                  line-height: 1.15;<br/>                                  color: $navigation_text_color;<br/>                                  padding: 20px 10px;<br/>                                  &amp;:hover {<br/>                                    opacity: 1;<br/>                                  }<br/>                                }<br/>                              }<br/>                              .js-level-01,<br/>                              .js-level-01-trigger {<br/>                                display: table-cell;<br/>                                color: $navigation_text_color;<br/>                                &amp;:hover {<br/>                                  background-color: $navigation_hover_bg_color;<br/>                                  &gt; div {<br/>                                    &gt; a {<br/>                                      color: $navigation_hover_text_color;<br/>                                    }<br/>                                  }<br/>                                }<br/>                              }<br/>                              .js-level-01-trigger {<br/>                                padding-right: 20px;<br/>                                //三角部分<br/>                                &amp;::after {<br/>                                  position: absolute;<br/>                                  right: 10px;<br/>                                  top: 50%;<br/>                                  font-family: $font_family_awsm;<br/>                                  content: \"\\f107\";<br/>                                  color: $navigation_arrow1_color;<br/>                                  margin-top: 0;<br/>                                  transform: translateY(-50%);<br/>                                  font-size: 20px;<br/>                                  line-height: 1;<br/>                                }<br/>                                &amp;:hover::after {<br/>                                  color: $navigation_hover_text_color;<br/>                                  transform: rotate(180deg) translateY(50%);<br/>                                }<br/>                              }<br/>                              .js-level-01-cont {<br/>                                display: block;<br/>                                position: absolute;<br/>                                z-index: 1;<br/>                                top: 100%;<br/>                                left: 0;<br/>                                background-color: $navigation_bg2_color;<br/>                              }<br/>                              .js-level-02,<br/>                              .js-level-02-trigger {<br/>                                display: block;<br/>                                a {<br/>                                  padding: 20px;<br/>                                  color: $navigation_text2_color;<br/>                                  &amp;:hover {<br/>                                    color: $navigation_hover_text2_color;<br/>                                    background-color: $navigation_hover_bg2_color;<br/>                                  }<br/>                                }<br/>                              }<br/>                              .js-level-02-trigger {<br/>                                &amp;::after {<br/>                                  position: absolute;<br/>                                  right: 7px;<br/>                                  top: 50%;<br/>                                  font-family: $font_family_awsm;<br/>                                  content: \"\\f105\";<br/>                                  margin-top: 0;<br/>                                  color: $navigation_arrow2_color;<br/>                                  font-size: 20px;<br/>                                  transform: translateY(-50%);<br/>                                }<br/>                                &amp;:hover::after {<br/>                                  color: $navigation_hover_text_color;<br/>                                }<br/>                              }<br/>                              .js-level-02-cont {<br/>                                display: block;<br/>                                position: absolute;<br/>                                z-index: 1;<br/>                                top: 0;<br/>                                left: 100%;<br/>                                background-color: $navigation_bg2_color;<br/>                              }<br/>                              .js-level-03 {<br/>                                a {<br/>                                  padding: 20px;<br/>                                  color: $navigation_text2_color;<br/>                                  &amp;:hover {<br/>                                    color: $navigation_hover_text2_color;<br/>                                    background-color: $navigation_hover_bg2_color;<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                          //SP用<br/>                          @include breakpoint-sp {<br/>                            ul {<br/>                              list-style: none;<br/>                              margin: 0;<br/>                              li {<br/>                                p {<br/>                                  margin: 0;<br/>                                }<br/>                                a {<br/>                                  display: block;<br/>                                  position: relative;<br/>                                  text-decoration: none;<br/>                                  font-size: $navigation_sp_font_size;<br/>                                  color: $navigation_sp_text_color;<br/>                                  &amp;:hover {<br/>                                    color: $navigation_sp_hover_text_color;<br/>                                    background: $navigation_sp_bg_color;<br/>                                    span.toggle_icon {<br/>                                      &amp;::before {<br/>                                        color: $navigation_sp_hover_text_color;<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                              }<br/>                              .js-level-01,<br/>                              .js-level-01-trigger {<br/>                                a {<br/>                                  padding: 20px 10px;<br/>                                }<br/>                              }<br/>                              .js-level-02,<br/>                              .js-level-02-trigger,<br/>                              .js-level-03 {<br/>                                a {<br/>                                  &amp;:hover {<br/>                                    background: $navigation_sp_bg3_color;<br/>                                    color: $navigation_sp_text3_color;<br/>                                    span.toggle_icon {<br/>                                      &amp;::before {<br/>                                        color: $navigation_sp_text3_color;<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                              }<br/>                              .js-level-02,<br/>                              .js-level-02-trigger {<br/>                                a {<br/>                                  padding: 20px 30px 20px calc(10px + 1em);<br/>                                }<br/>                              }<br/>                              .js-level-03 {<br/>                                a {<br/>                                  padding: 20px 30px 20px calc(10px + 2em);<br/>                                }<br/>                              }<br/>                              .js-level-01-trigger {<br/>                                &gt; div {<br/>                                  &gt; a,<br/>                                  &gt; strong a {<br/>                                    padding: 20px 30px 20px 10px;<br/>                                  }<br/>                                }<br/>                              }<br/>                              .js-level-02-trigger {<br/>                                &gt; div {<br/>                                  &gt; a,<br/>                                  &gt; strong a {<br/>                                    padding: 20px 30px 20px calc(10px + 1em);<br/>                                  }<br/>                                }<br/>                              }<br/>                              .js-level-01-trigger,<br/>                              .js-level-02-trigger {<br/>                                a {<br/>                                  span.toggle_icon {<br/>                                    &amp;::before {<br/>                                      content: \"\\f107\";<br/>                                      display: flex;<br/>                                      justify-content: center;<br/>                                      align-items: center;<br/>                                      font-family: $font_family_awsm;<br/>                                      font-size: 30px;<br/>                                      line-height: 1;<br/>                                      color: $navigation_sp_arrow1_color;<br/>                                      width: 30px;<br/>                                      height: 100%;<br/>                                      position: absolute;<br/>                                      top: 50%;<br/>                                      right: 0;<br/>                                      transform: translateY(-50%);<br/>                                    }<br/>                                    // 2階層目, 3階層目オープン時<br/>                                    &amp;.is-open {<br/>                                      &amp;::before {<br/>                                        content: \"\\f106\";<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                            .js-level-02-cont {<br/>                              display: none;<br/>                              position: relative;<br/>                              width: 100%;<br/>                              background-color: $navigation_bg2_color;<br/>                              &amp;.is-open {<br/>                                display: block;<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- 擬似ナビ（2段） END -----*/<p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p><a href=\"#\">CSSをコピーする</a><p><strong>2024-09-13更新（v1.0.0）</strong></p>\n/*-- 擬似ナビ（2段） 編集画面用 2段 START v1.0.0​​​​​--*/<br/>  .theme-fo-base .wrapper .contents {<br/>    :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>      &amp;.js-navi_custom_sec {<br/>        display: block;<br/>      }<br/>      &amp;.navi_custom_sec {<br/>        padding: 50px 0;<br/>        &amp;.fixed {<br/>          position: relative;<br/>          top: initial;<br/>          border: 1px solid blue;<br/>          &amp;::before {<br/>            content: \"疑似ナビゲーション上部固定中（クラス名：fixed）\";<br/>            color: #fff;<br/>            background: blue;<br/>            font-size: 13px;<br/>            position: absolute;<br/>            right: 0;<br/>            top: -24px;<br/>            padding: 0 5px;<br/>          }<br/>        }<br/>        .inner {<br/>          padding: 20px;<br/>          .row {<br/>            .col {<br/>              .component {<br/>                &amp;.cta {<br/>                  .cta-row {<br/>                    &amp;.menu-trigger_row {<br/>                      display: block;<br/>                      width: 100%;<br/>                      border: 1px solid #000;<br/>                      position: relative;<br/>                      top: initial;<br/>                      right: initial;<br/>                      .cta-column {<br/>                        width: 100%;<br/>                      }<br/>                      &amp;::before {<br/>                        content: \"ハンバーガーメニュー（削除しないでください）\";<br/>                        color: #fff;<br/>                        background: #000;<br/>                        font-size: 13px;<br/>                        position: absolute;<br/>                        right: 0;<br/>                        top: -24px;<br/>                        padding: 0 5px;<br/>                      }<br/>                    }<br/>                    &amp;.main-menu_custom {<br/>                      .cta-column {<br/>                        .component {<br/>                          &amp;.richtext {<br/>                            &amp;.menu_lists {<br/>                              ul {<br/>                                li {<br/>                                  display: table-cell !important;<br/>                                   &gt; ul {<br/>                                     display: none !important;<br/>                                   }<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>/*-- 擬似ナビ（2段） 編集画面用 2段 END --*/<p><strong>※変数が不足している場合は、下記をご活用ください。</strong></p><a href=\"#\">CSSをコピーする</a><p><strong>2024-09-13更新（v1.0.0）</strong></p>\n// v1.0.0​​​​​<br/>&amp;.navi_custom_sec {<br/>  //フォント<br/>  $font_family_awsm: \"FontAwesome\";<br/> <br/>  //ボックスシャドウ<br/>  $navigation_box_shadow_common: 0 3px 8px rgba(#000, 0.1); //ナビゲーション専用<br/><br/>  //ナビゲーションロゴ<br/>  $header_logo: 300px; //PCでの幅サイズ（固定）<br/>  $header_sp_logo: 35px; //SPでの高さサイズ（maxサイズ）<br/><br/>  //グロナビ PC<br/>  $header_bg_color: var(--fo-background-color1); //ナビゲーション全体の背景色<br/>  $navigation_bg_color: $header_bg_color; //グロナビの背景色<br/>  $navigation_font_size: 14px; //グロナビのフォントサイズ（1〜3階層）<br/>  $navigation_font_weight: normal; //グロナビのフォントの太さ（1〜3階層） normal or bold<br/>  $navigation_hover_opacity: 1; //グロナビをホバーした時の透視度<br/>  $navigation_bg2_color: $navigation_bg_color; //グロナビの背景色（2階層以下）<br/>  $navigation_text_color: var(--fo-text-main-color); //グロナビのテキストカラー<br/>  $navigation_text2_color: $navigation_text_color; //グロナビのテキストカラー（2階層以下）<br/>  $navigation_hover_bg_color: #fff; //グロナビをホバーした時の背景色<br/>  $navigation_hover_bg2_color: var(--fo-main-color); //グロナビをホバーした時の背景色（2階層以下）<br/>  $navigation_hover_text_color: var(--fo-main-color); //グロナビをホバーした時のテキストカラー<br/>  $navigation_hover_text2_color: $navigation_hover_text_color; //グロナビをホバーした時のテキストカラー（2階層以下）<br/>  $navigation_arrow1_color: #aaa; //矢印カラー（1階層）<br/>  $navigation_arrow2_color: $navigation_arrow1_color; //矢印カラー（2階層）<br/><br/>  //グロナビ ハンバーガーメニュー<br/>  $navigation_sp_font_size: 14px; //ハンバーガーメニュー（SP）時のテキストサイズ（1〜3階層）<br/>  $navigation_sp_font_weight: normal; //ハンバーガーメニュー（SP）時のテキストの太さ（1〜3階層） normal or bold<br/>  $navigation_sp_text_color: var(--fo-text-main-color); //ハンバーガーメニュー（SP）時のテキストカラー １階層<br/>  $navigation_sp_text2_color: var(--fo-text-main-color); //ハンバーガーメニュー（SP）時のテキストカラー（2階層）<br/>  $navigation_sp_text3_color: var(--fo-text-main-color); //ハンバーガーメニュー（SP）時のテキストカラー（3階層）<br/>  $navigation_sp_hover_text_color: #fff; //ハンバーガーメニュー（SP）時のホバーした時の2階層のテキスト＆矢印のカラー<br/>  $navigation_sp_arrow1_color: $navigation_sp_text_color; //ハンバーガーメニュー（SP） 矢印カラー（1階層）<br/>  $navigation_sp_arrow2_color: $navigation_sp_text2_color; //ハンバーガーメニュー（SP） 矢印カラー（2階層）<br/>  $navigation_sp_bg_color: var(--fo-main-color); //ハンバーガーメニュー（SP）時の背景色（1階層）<br/>  $navigation_sp_bg2_color: #fff; //ハンバーガーメニュー（SP）時の背景色（２階層）<br/>  $navigation_sp_bg3_color: #eee; //ハンバーガーメニュー（SP）時の背景色（3階層）<br/>  $navigation_sp_border-bottom: 1px dashed var(--fo-main-color); //ハンバーガーメニュー（SP）時のボーダー（hamburger_custom 使用時）<br/>}</section>\n\n<section class=\"content-element content-6\" data-designpart=\"section-tab-nab-v2\" data-designpart-id=\"6822d4806248c1056f815e0a\" style=\"background-color:#fbf9ef\"><h2>旧リッチテキストパーツ用<br/>JS・CSS・編集画面用CSS<br/></h2><p><strong>【旧リッチテキストパーツ】で組み込みが必要な場合にお使いください。</strong></p><ul><li><strong>JS</strong></li><li><strong>CSS</strong></li><li><strong>編集画面用CSS</strong></li><li><strong>変数が無い場合</strong></li></ul><a href=\"#\">JSをコピーする</a><p><strong>2025-08-14更新（v1.1.0）</strong></p>\n&lt;script&gt;<br/>  'use strict';<br/> <br/>  /* ---------------------------<br/>    擬似ナビ（2段） v1.1.0​​​​​<br/>  --------------------------- */<br/><br/>  document.addEventListener('DOMContentLoaded', function() {<br/> /* 擬似ナビに .has-fixed-side を付与（固定サイドバーが存在する場合のみ） */<br/> const fixedSide = document.querySelector('.fixed-side');<br/> const navi_custom_sec = document.getElementsByClassName('js-navi_custom_sec')[0];<br/> if (fixedSide &amp;&amp; navi_custom_sec) {<br/>  navi_custom_sec.classList.add('has-fixed-side');<br/> }<br/><br/>    /* ちらつき防止 */<br/>    document.querySelectorAll('.js-navi_custom_sec')[0].style.display = 'block';<br/><br/>    /*--- PC or SP　判定 ---*/<br/>    function windowPCorSP() {<br/>      if (window.matchMedia('(min-width: 770px)').matches) {<br/>        /* 画面幅が770px以上のときの処理(PC) */<br/>        return true;<br/>      } else {<br/>        /* 画面幅が769px以下のときの処理(SP) */<br/>        return false;<br/>      }<br/>    };<br/><br/>    /*------------- 初期化 (変数定義やクラス付与) START -------------*/<br/>    /* メインメニュー（Gナビ） */<br/>    const mainMenu = document.querySelectorAll('.js-menu_lists')[0];<br/><br/>    /* 1階層目 */<br/>    const level_01 = document.querySelectorAll('.js-menu_lists &gt; ul &gt; li');<br/>    /* クラス付与 */<br/>    level_01.forEach((el) =&gt; {<br/>      el.classList.add('js-level-01');<br/>    });<br/><br/>    /* 2階層目 */<br/>    const level_02 = document.querySelectorAll('.js-menu_lists &gt; ul &gt; li &gt; ul &gt; li');<br/>    /* クラス付与 */<br/>    level_02.forEach((el) =&gt; {<br/>      el.classList.add('js-level-02');<br/>    });<br/><br/>    /* 3階層目 */<br/>    const level_03 = document.querySelectorAll('.js-menu_lists &gt; ul &gt; li &gt; ul &gt; li &gt; ul &gt; li');<br/>    /* クラス付与 */<br/>    level_03.forEach((el) =&gt; {<br/>      el.classList.add('js-level-03');<br/>    });<br/><br/>    /* 1階層目トリガー */<br/>    for (let i = 0; i &lt; level_01.length; i++) {<br/>      let target;<br/>      if (level_01[i].querySelectorAll('.js-level-02').length &gt; 0) {<br/>        target = level_01[i];<br/>      };<br/><br/>      /* クラス付与 */<br/>      if ( target !== undefined) {<br/>        target.classList.add('js-level-01-trigger');<br/>        target.classList.remove('js-level-01');<br/>        /* aタグの中にspanを追加 */<br/>        let icon_element = document.createElement('span');<br/>        icon_element.classList.add('toggle_icon');<br/>        target.querySelector('a').appendChild(icon_element);<br/>      }<br/>    };<br/>    const level_01_trigger = document.querySelectorAll('.js-level-01-trigger');<br/><br/>    /* 2階層目 [ul] */<br/>    for (let i = 0; i &lt; level_02.length; i++) {<br/>      const level_01_cont = level_02[i].parentNode;<br/>      /* クラス付与 */<br/>      level_01_cont.classList.add('js-level-01-cont');<br/>      level_01_cont.style.display = 'none';<br/>    };<br/>    const level_01_cont = document.querySelectorAll('.js-level-01-cont');<br/><br/>    /* 2階層目トリガー */<br/>    for (let i = 0; i &lt; level_02.length; i++) {<br/>      let target;<br/>      if (level_02[i].querySelectorAll('.js-level-03').length &gt; 0) {<br/>        target = level_02[i];<br/>      };<br/><br/>      /* クラス付与 */<br/>      if ( target !== undefined) {<br/>        target.classList.add('js-level-02-trigger');<br/>        target.classList.remove('js-level-02');<br/>        /* aタグの中にspanを追加 */<br/>        let icon_element = document.createElement('span');<br/>        icon_element.classList.add('toggle_icon');<br/>        target.querySelector('a').appendChild(icon_element);<br/>      }<br/>    };<br/>    const level_02_trigger = document.querySelectorAll('.js-level-02-trigger');<br/><br/>    /* 3階層目 [ul] */<br/>    for (let i = 0; i &lt; level_03.length; i++) {<br/>      const level_02_cont = level_03[i].parentNode;<br/>      /* クラス付与 */<br/>      level_02_cont.classList.add('js-level-02-cont');<br/>      level_02_cont.style.display = 'none';<br/>    };<br/>    const level_02_cont = document.querySelectorAll('.js-level-02-cont');<br/><br/>    /*------------- 初期化 (変数定義やクラス付与) END -------------*/<br/><br/>    /*------------- モジュール 関数定義 START -------------*/<br/><br/>    /* モジュール (カプセル化) jQueryとかぶらないように */<br/>    const ferretModule = (() =&gt; {<br/><br/>      return {<br/>        /* slideUp */<br/>        slideUp: (el, duration = 300) =&gt; {<br/>          el.style.height = el.offsetHeight + 'px';<br/>          el.offsetHeight;<br/>          el.style.transitionProperty = 'height, margin, padding';<br/>          el.style.transitionDuration = duration + 'ms';<br/>          el.style.transitionTimingFunction = 'ease';<br/>          el.style.overflow = 'hidden';<br/>          el.style.height = 0;<br/>          el.style.paddingTop = 0;<br/>          el.style.paddingBottom = 0;<br/>          el.style.marginTop = 0;<br/>          el.style.marginBottom = 0;<br/>          setTimeout(() =&gt; {<br/>            el.style.display = 'none';<br/>            el.style.removeProperty('height');<br/>            el.style.removeProperty('padding-top');<br/>            el.style.removeProperty('padding-bottom');<br/>            el.style.removeProperty('margin-top');<br/>            el.style.removeProperty('margin-bottom');<br/>            el.style.removeProperty('overflow');<br/>            el.style.removeProperty('transition-duration');<br/>            el.style.removeProperty('transition-property');<br/>            el.style.removeProperty('transition-timing-function');<br/>          }, duration);<br/>        },<br/><br/>        /* slideDown */<br/>        slideDown: (el, duration = 300) =&gt; {<br/>          el.style.removeProperty('display');<br/>          let display = window.getComputedStyle(el).display;<br/>          if (display === 'none') {<br/>            display = 'block';<br/>          }<br/>          el.style.display = display;<br/>          let height = el.offsetHeight;<br/>          el.style.overflow = 'hidden';<br/>          el.style.height = 0;<br/>          el.style.paddingTop = 0;<br/>          el.style.paddingBottom = 0;<br/>          el.style.marginTop = 0;<br/>          el.style.marginBottom = 0;<br/>          el.offsetHeight;<br/>          el.style.transitionProperty = 'height, margin, padding';<br/>          el.style.transitionDuration = duration + 'ms';<br/>          el.style.transitionTimingFunction = 'ease';<br/>          el.style.height = height + 'px';<br/>          el.style.removeProperty('padding-top');<br/>          el.style.removeProperty('padding-bottom');<br/>          el.style.removeProperty('margin-top');<br/>          el.style.removeProperty('margin-bottom');<br/>          setTimeout(() =&gt; {<br/>            el.style.removeProperty('height');<br/>            el.style.removeProperty('overflow');<br/>            el.style.removeProperty('transition-duration');<br/>            el.style.removeProperty('transition-property');<br/>            el.style.removeProperty('transition-timing-function');<br/>          }, duration);<br/>        }<br/>      }<br/>    })();<br/><br/>    /*------------- モジュール 関数定義 END -------------*/<br/><br/>    /*------------- 擬似ナビゲーション メンビジ上に配置 START -------------*/<br/><br/>    const theme_fo_base = document.getElementsByClassName('theme-fo-base')[0];<br/>    const main_visual = document.getElementsByClassName('main-visual')[0];<br/><br/>    theme_fo_base.parentNode.insertBefore(navi_custom_sec, theme_fo_base);<br/><br/>    /*------------- 擬似ナビゲーション メンビジ上に配置 END -------------*/<br/><br/><br/>    /*------------- ドロップダウン ナビゲーション START -------------*/<br/><br/>    const initializationLevel = () =&gt; {<br/>      for (let i = 0; i &lt; level_01_cont.length; i++) {<br/>        level_01_cont[i].classList.remove('is-open');<br/>        level_01_cont[i].style.display = 'none';<br/>      }<br/>      for (let i = 0; i &lt; level_02_cont.length; i++) {<br/>        level_02_cont[i].classList.remove('is-open');<br/>        level_02_cont[i].style.display = 'none';<br/>      }<br/>    };<br/><br/>    const level02Open = (e) =&gt; {<br/>      let slideTarget = e.currentTarget.getElementsByClassName('js-level-01-cont')[0];<br/>      ferretModule.slideDown(slideTarget, 0);<br/>    };<br/><br/>    const level02Close = (e) =&gt; {<br/>      let slideTarget = e.currentTarget.getElementsByClassName('js-level-01-cont')[0];<br/>      ferretModule.slideUp(slideTarget, 200);<br/>    };<br/><br/>    const level03Open = (e) =&gt; {<br/>      let slideTarget = e.currentTarget.getElementsByClassName('js-level-02-cont')[0];<br/>      ferretModule.slideDown(slideTarget, 200);<br/>    };<br/><br/>    const level03Close = (e) =&gt; {<br/>      let slideTarget = e.currentTarget.getElementsByClassName('js-level-02-cont')[0];<br/>      ferretModule.slideUp(slideTarget, 200);<br/>    };<br/><br/>    const level02ToggleSp = (e) =&gt; {<br/>      e.preventDefault();<br/>      e.stopPropagation();<br/>      let clickTarget = e.currentTarget;<br/>      let trigger = clickTarget.closest('.js-level-01-trigger');<br/>      let targetList = trigger.querySelector('.js-level-01-cont');<br/><br/>      if (targetList.style.display !== 'block') {<br/>        clickTarget.classList.add('is-open');<br/>        targetList.classList.add('is-open');<br/>        targetList.style.display = 'block';<br/>      } else {<br/>        clickTarget.classList.remove('is-open');<br/>        targetList.classList.remove('is-open');<br/>        targetList.style.display = 'none';<br/>      }<br/>    };<br/><br/>    const level03ToggleSp = (e) =&gt; {<br/>      e.preventDefault();<br/>      e.stopPropagation();<br/>      let clickTarget = e.currentTarget;<br/>      let trigger = clickTarget.closest('.js-level-02-trigger');<br/>      let targetList = trigger.querySelector('.js-level-02-cont');<br/><br/>      if (targetList.style.display !== 'block') {<br/>        clickTarget.classList.add('is-open');<br/>        targetList.classList.add('is-open');<br/>        targetList.style.display = 'block';<br/>      } else {<br/>        clickTarget.classList.remove('is-open');<br/>        targetList.classList.remove('is-open');<br/>        targetList.style.display = 'none';<br/>      }<br/>    };<br/><br/>    const menuLevel23Open = () =&gt; {<br/>      if (windowPCorSP()) {<br/>        /*--- PCのときのイベント設定 ---*/<br/><br/>        /* リサイズでレスポンシブ時 */<br/>        for (let i = 0; i &lt; level_01_cont.length; i++) {<br/>          if (level_01_cont[i].classList.contains('is-open')) {<br/>            initializationLevel();<br/>          }<br/>        };<br/>        mainMenu.style.display = '';<br/><br/><br/>        if(menuTiggerBtn.classList.contains('active')) {<br/>          menuTiggerBtn.classList.remove('active');<br/>        };<br/><br/>        for (let i = 0; i &lt; level_01_trigger.length; i++) {<br/>          /* 2階層目OPEN ホバー ドロップダウン */<br/>          level_01_trigger[i].addEventListener('mouseenter', level02Open);<br/><br/>          /* 2階層目OPEN ホバーアウト ドロップアップ */<br/>          level_01_trigger[i].addEventListener('mouseleave', level02Close);<br/>        };<br/><br/>        /* 3階層目OPEN ホバー ドロップダウン */<br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          level_02_trigger[i].addEventListener('mouseenter', level03Open);<br/><br/>          /* 3階層目OPEN ホバーアウト ドロップアップ */<br/>          level_02_trigger[i].addEventListener('mouseleave', level03Close);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          let toggle_icon = level_02_trigger[i].querySelector('.toggle_icon');<br/>          /* 2階層目OPEN クリックトグル */<br/>          toggle_icon.removeEventListener('click', level02ToggleSp);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          let toggle_icon = level_02_trigger[i].querySelector('.toggle_icon');<br/>          /* 2階層目OPEN クリックトグル */<br/>          toggle_icon.removeEventListener('click', level03ToggleSp);<br/>        };<br/><br/>      } else {<br/>        /*--- SPのときのイベント設定 ---*/<br/>        menuTiggerBtn.style.display = '';<br/><br/>        if (!menuTiggerBtn.classList.contains('active')) {<br/>          mainMenu.style.display = 'none';<br/>        };<br/><br/>        for (let i = 0; i &lt; level_01_trigger.length; i++) {<br/>          /* 2階層目OPEN ホバー ドロップダウン */<br/>          level_01_trigger[i].removeEventListener('mouseenter', level02Open);<br/><br/>          /* 2階層目OPEN ホバーアウト ドロップアップ */<br/>          level_01_trigger[i].removeEventListener('mouseleave', level02Close);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          /* 3階層目OPEN ホバー ドロップダウン */<br/>          level_02_trigger[i].removeEventListener('mouseenter', level03Open);<br/><br/>          /* 3階層目OPEN ホバーアウト ドロップアップ */<br/>          level_02_trigger[i].removeEventListener('mouseleave', level03Close);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_01_trigger.length; i++) {<br/>          let toggle_icon = level_01_trigger[i].querySelector('.toggle_icon');<br/>          /* 2階層目OPEN クリックトグル */<br/>          toggle_icon.addEventListener('click', level02ToggleSp);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          let toggle_icon = level_02_trigger[i].querySelector('.toggle_icon');<br/>          /* 3階層目OPEN クリックトグル */<br/>          toggle_icon.addEventListener('click', level03ToggleSp);<br/>        };<br/>      };<br/>    };<br/><br/>    /*------------- ドロップダウン ナビゲーション END -------------*/<br/><br/>    /*------------- ハンバーガーメニュー START -------------*/<br/>    const menuTiggerBtn = document.querySelectorAll('.js-menu-trigger_btn')[0];<br/><br/>    menuTiggerBtn.innerHTML = ('\\<br/>      &lt;span class=\"modal_close_border\"&gt;&lt;/span&gt;\\<br/>      &lt;span class=\"modal_close_border\"&gt;&lt;/span&gt;\\<br/>      &lt;span class=\"modal_close_border\"&gt;&lt;/span&gt;\\<br/>    ');<br/><br/>    menuTiggerBtn.addEventListener('click', function() {<br/>      menuTiggerBtn.classList.toggle('active');<br/>      if (menuTiggerBtn.classList.contains('active')) {<br/>        mainMenu.style.display = '';<br/>      } else {<br/>        mainMenu.style.display = 'none';<br/>      }<br/>    });<br/>    /*------------- ハンバーガーメニュー END -------------*/<br/><br/>    /*------------- PC or SPでGナビの表示非表示を切り替える START -------------*/<br/>    const mainMenuDisplay = () =&gt; {<br/>      if (windowPCorSP()) {<br/>        mainMenu.style.display = '';<br/>        menuTiggerBtn.classList.remove('active');<br/>        menuTiggerBtn.style.display = 'none';<br/>      } else {<br/>        mainMenu.style.display = 'none';<br/>        menuTiggerBtn.style.display = '';<br/>      }<br/>    };<br/>    /*------------- PC or SPでGナビの表示非表示を切り替える END -------------*/<br/><br/>    /*--- ウィンドウのリサイズ完了後の処理 ---*/<br/>    const windowResize = () =&gt; {<br/>      let timer = 0;<br/>      let delay = 200;<br/>      window.addEventListener('resize', () =&gt; {<br/>        clearTimeout(timer);<br/>        timer = setTimeout(() =&gt; {<br/>          menuLevel23Open();<br/>        }, delay);<br/>      }, false);<br/>    };<br/><br/>    menuLevel23Open();<br/>    mainMenuDisplay();<br/>    windowResize();<br/><br/>  });<br/><br/>  /*--- ページ内遷移ずれる対策 ---*/<br/>  window.addEventListener('load', () =&gt; {<br/>    const headerSec = document.querySelector('.js-navi_custom_sec'); /* 擬似ナビ（2段）を取得 */<br/>    if (headerSec) {<br/>      const headerHeight = headerSec.offsetHeight; /* 擬似ナビ（2段）の高さを取得 */<br/>      /* 固定ナビの場合の処理 */<br/>      if (headerSec.classList.contains('fixed')) {<br/>        document.documentElement.style.setProperty('--navi-height', `${headerHeight}px`);<br/>      }<br/>    }<br/>  });<br/>  /*--- ページ内遷移ずれる対策 END ---*/<br/>  /* ---------------------------<br/>    擬似ナビ（2段） END<br/>  --------------------------- */<br/>&lt;/script&gt;<br/><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p><p>//旧CMS用（不要であれば削除）<br/>//新CMS用（不要であれば削除）<br/>と2つ記述を用意している箇所がいくつかありますので必要に応じて削除orコメントアウトを外してください。<br/>※デフォルトでは新CMS用の記述が当たるようにしています。</p><a href=\"#\">CSSをコピーする</a><p><strong>2025-08-14更新（v1.1.0）</strong></p>\n/*----- 擬似ナビ（2段） START v1.1.0​​​​​-----*/<br/>// メンビジ上に配置のとき<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;.js-navi_custom_sec {<br/>    display: none; //ちらつき防止<br/>    * {<br/>      box-sizing: border-box; //はみだし防止<br/>    }<br/>    //固定サイドバー対策<br/>    &amp;.has-fixed-side {<br/>      @media screen and (min-width: 1201px) {<br/>        width: calc(100% - 420px);<br/>      }<br/>    }<br/>  }<br/>  &amp;.navi_custom_sec {<br/>    // font-family: $font_family;//旧CMS用（不要であれば削除）<br/>    font-family: var(--fo-text-font-family);//新CMS用（不要であれば削除）<br/>    width: 100%;<br/>    background: $header_bg_color;<br/>    box-shadow: $navigation_box_shadow_common;<br/>    padding: 0;<br/>    // オプション 上部固定<br/>    &amp;.fixed {<br/>      position: sticky;<br/>      z-index: 1001;<br/>      top: 0;<br/>    }<br/>    .inner {<br/>      max-width: 100%;<br/>      padding: 0;<br/>      .row {<br/>        .col {<br/>          padding: 0;<br/>          .component {<br/>            margin: 0;<br/>            &amp;.cta {<br/>              .cta-row {<br/>                &amp;.navigation-cont_custom {<br/>                  display: flex;<br/>                  align-items: center;<br/>                  justify-content: space-between;<br/>                  flex-wrap: nowrap;<br/>                  max-width: 1240px;<br/>                  min-height: 60px;<br/>                  padding: 10px 20px;<br/>                  margin: 0 auto;<br/>                  @include breakpoint-sp {<br/>                    min-height: 51px;<br/>                    padding: 0;<br/>                  }<br/>                  .cta-column {<br/>                    display: block;<br/>                    box-sizing: border-box;<br/>                    margin: 0;<br/>                    padding: 0;<br/>                    &amp;.logo_col {<br/>                      width: auto !important;<br/>                      @include breakpoint-sp {<br/>                        padding: 0 0 0 10px;<br/>                      }<br/>                      .component {<br/>                        &amp;.image {<br/>                          a {<br/>                            display: inline-block;<br/>                          }<br/>                          img {<br/>                            @include breakpoint-pc {<br/>                              width: $header_logo !important;<br/>                              // max-height: 50px;<br/>                            }<br/>                            @include breakpoint-sp {<br/>                              max-height: $header_sp_logo;<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                    &amp;.btn_col {<br/>                      display: flex;<br/>                      flex-direction: row;<br/>                      flex-grow: 1;<br/>                      justify-content: flex-end;<br/>                      width: auto !important;<br/>                      padding: 10px 0;<br/>                      @include breakpoint-sp {<br/>                        padding: 0 65px 0 0;<br/>                      }<br/>                      .component {<br/>                        &amp;.button {<br/>                          &amp;:not(:first-child) {<br/>                            margin-left: 10px;<br/>                            @include breakpoint-sp {<br/>                              margin-left: 0;<br/>                            }<br/>                          }<br/>                          .button-cont {<br/>                            a {<br/>                              &amp;.size-s {<br/>                                @include breakpoint-sp {<br/>                                  width: auto;<br/>                                  min-width: auto;<br/>                                  margin: 0;<br/>                                  padding: 5px 10px 5px 5px;<br/>                                  border: 0;<br/>                                  border-radius: 0;<br/>                                  font-size: 0 !important;<br/>                                  letter-spacing: 0;<br/>                                  background: none !important;<br/>                                }<br/>                                &amp;::before {<br/>                                  @include breakpoint-sp {<br/>                                    font-size: 22px;<br/>                                    margin: 0;<br/>                                    // color: $main_color;//旧CMS用（不要であれば削除）<br/>                                    color: var(--fo-main-color);//新CMS用（不要であれば削除）<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                          &amp;.btn_custom_tel {<br/>                            .button-cont {<br/>                              a {<br/>                                &amp;.size-s {<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>                &amp;.menu-trigger_row {<br/>                  width: max-content;<br/>                  position: absolute;<br/>                  top: 0;<br/>                  right: 0;<br/>                  margin: 0;<br/>                  padding: 0;<br/>                  @include breakpoint-pc {<br/>                    display: none;<br/>                  }<br/>                  .cta-column {<br/>                    margin: 0;<br/>                    padding: 0;<br/>                    .component {<br/>                      &amp;.richtext {<br/>                        &amp;.menu-trigger_btn {<br/>                          width: 60px;<br/>                          height: 51px;<br/>                          margin: 0;<br/>                          padding: 0;<br/>                          font-size: 0;<br/>                          // background-color: $main_color;//旧CMS用（不要であれば削除）<br/>                          background-color: var(--fo-main-color);//新CMS用（不要であれば削除）<br/>                          span {<br/>                            position: absolute;<br/>                            left: 15px;<br/>                            width: 30px;<br/>                            height: 3px;<br/>                            background-color: #fff;<br/>                            border-radius: 3px;<br/>                            transition: all .4s;<br/>                            &amp;:nth-of-type(1) {<br/>                              top: 15px;<br/>                            }<br/>                            &amp;:nth-of-type(2) {<br/>                              top: 24px;<br/>                            }<br/>                            &amp;:nth-of-type(3) {<br/>                              bottom: 15px;<br/>                            }<br/>                          }<br/>                          &amp;.active {<br/>                            span {<br/>                              &amp;:nth-of-type(1) {<br/>                                -webkit-transform: translateY(10px) rotate(-45deg);<br/>                                transform: translateY(10px) rotate(-45deg);<br/>                              }<br/>                              &amp;:nth-of-type(2) {<br/>                                opacity: 0;<br/>                              }<br/>                              &amp;:nth-of-type(3) {<br/>                                -webkit-transform: translateY(-8px) rotate(45deg);<br/>                                transform: translateY(-8px) rotate(45deg);<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>                &amp;.main-menu_custom {<br/>                  min-height: auto;<br/>                  margin: 0;<br/>                  padding: 0;<br/>                  background: $navigation_bg_color;<br/>                  //SP用<br/>                  @include breakpoint-sp {<br/>                    max-height: calc(100vh - 51px);<br/>                    overflow-y: auto;<br/>                    /*----<br/>                    //スクロールバー非表示<br/>                    -ms-overflow-style: none; //Edge<br/>                    scrollbar-width: none; //Firefox<br/>                    &amp;::-webkit-scrollbar {<br/>                      display: none;<br/>                    }<br/>                    ----*/<br/>                  }<br/>                  .cta-column {<br/>                    margin: 0;<br/>                    padding: 0;<br/>                    .component {<br/>                      &amp;.richtext {<br/>                        &amp;.menu_lists {<br/>                          //PC用<br/>                          @include breakpoint-pc {<br/>                            ul {<br/>                              max-width: 1140px;<br/>                              display: table;<br/>                              width: 100%;<br/>                              margin: 0 auto;<br/>                              text-align: center;<br/>                              list-style: none;<br/>                              li {<br/>                                position: relative;<br/>                                box-sizing: content-box;<br/>                                min-width: 90px;<br/>                                color: $navigation_text_color;<br/>                                p {<br/>                                  margin: 0;<br/>                                }<br/>                                a {<br/>                                  display: block;<br/>                                  text-decoration: none;<br/>                                  font-size: $navigation_font_size;<br/>                                  font-weight: $navigation_font_weight;<br/>                                  line-height: 1.15;<br/>                                  color: $navigation_text_color;<br/>                                  padding: 20px 10px;<br/>                                  &amp;:hover {<br/>                                    opacity: 1;<br/>                                  }<br/>                                }<br/>                              }<br/>                              .js-level-01,<br/>                              .js-level-01-trigger {<br/>                                display: table-cell;<br/>                                color: $navigation_text_color;<br/>                                &amp;:hover {<br/>                                  background-color: $navigation_hover_bg_color;<br/>                                  &gt; a {<br/>                                    color: $navigation_hover_text_color;<br/>                                  }<br/>                                }<br/>                              }<br/>                              .js-level-01-trigger {<br/>                                padding-right: 20px;<br/>                                //三角部分<br/>                                &amp;::after {<br/>                                  position: absolute;<br/>                                  right: 10px;<br/>                                  top: 50%;<br/>                                  font-family: $font_family_awsm;<br/>                                  content: \"\\f107\";<br/>                                  color: $navigation_arrow1_color;<br/>                                  margin-top: 0;<br/>                                  transform: translateY(-50%);<br/>                                  font-size: 20px;<br/>                                  line-height: 1;<br/>                                }<br/>                                &amp;:hover::after {<br/>                                  color: $navigation_hover_text_color;<br/>                                  transform: rotate(180deg) translateY(50%);<br/>                                }<br/>                              }<br/>                              .js-level-01-cont {<br/>                                display: block;<br/>                                position: absolute;<br/>                                z-index: 1;<br/>                                top: 100%;<br/>                                left: 0;<br/>                                background-color: $navigation_bg2_color;<br/>                              }<br/>                              .js-level-02,<br/>                              .js-level-02-trigger {<br/>                                display: block;<br/>                                a {<br/>                                  padding: 20px;<br/>                                  color: $navigation_text2_color;<br/>                                  &amp;:hover {<br/>                                    color: $navigation_hover_text2_color;<br/>                                    background-color: $navigation_hover_bg2_color;<br/>                                  }<br/>                                }<br/>                              }<br/>                              .js-level-02-trigger {<br/>                                &amp;::after {<br/>                                  position: absolute;<br/>                                  right: 7px;<br/>                                  top: 50%;<br/>                                  font-family: $font_family_awsm;<br/>                                  content: \"\\f105\";<br/>                                  margin-top: 0;<br/>                                  color: $navigation_arrow2_color;<br/>                                  font-size: 20px;<br/>                                  transform: translateY(-50%);<br/>                                }<br/>                                &amp;:hover::after {<br/>                                  color: $navigation_hover_text_color;<br/>                                }<br/>                              }<br/>                              .js-level-02-cont {<br/>                                display: block;<br/>                                position: absolute;<br/>                                z-index: 1;<br/>                                top: 0;<br/>                                left: 100%;<br/>                                background-color: $navigation_bg2_color;<br/>                              }<br/>                              .js-level-03 {<br/>                                a {<br/>                                  padding: 20px;<br/>                                  color: $navigation_text2_color;<br/>                                  &amp;:hover {<br/>                                    color: $navigation_hover_text2_color;<br/>                                    background-color: $navigation_hover_bg2_color;<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                          //SP用<br/>                          @include breakpoint-sp {<br/>                            ul {<br/>                              list-style: none;<br/>                              margin: 0;<br/>                              li {<br/>                                p {<br/>                                  margin: 0;<br/>                                }<br/>                                a {<br/>                                  display: block;<br/>                                  position: relative;<br/>                                  text-decoration: none;<br/>                                  font-size: $navigation_sp_font_size;<br/>                                  color: $navigation_sp_text_color;<br/>                                  &amp;:hover {<br/>                                    color: $navigation_sp_hover_text_color;<br/>                                    background: $navigation_sp_bg_color;<br/>                                    span.toggle_icon {<br/>                                      &amp;::before {<br/>                                        color: $navigation_sp_hover_text_color;<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                              }<br/>                              .js-level-01 {<br/>                                a {<br/>                                  padding: 20px 10px;<br/>                                }<br/>                              }<br/>                              .js-level-02,<br/>                              .js-level-02-trigger,<br/>                              .js-level-03 {<br/>                                a {<br/>                                  &amp;:hover {<br/>                                    background: $navigation_sp_bg3_color;<br/>                                    color: $navigation_sp_text3_color;<br/>                                    span.toggle_icon {<br/>                                      &amp;::before {<br/>                                        color: $navigation_sp_text3_color;<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                              }<br/>                              .js-level-02 {<br/>                                a {<br/>                                  padding: 20px 30px 20px calc(10px + 1em);<br/>                                }<br/>                              }<br/>                              .js-level-03 {<br/>                                a {<br/>                                  padding: 20px 30px 20px calc(10px + 2em);<br/>                                }<br/>                              }<br/>                              .js-level-01-trigger {<br/>                                &gt; a,<br/>                                &gt; strong a {<br/>                                  padding: 20px 30px 20px 10px;<br/>                                }<br/>                              }<br/>                              .js-level-02-trigger {<br/>                                &gt; a,<br/>                                &gt; strong a {<br/>                                  padding: 20px 30px 20px calc(10px + 1em);<br/>                                }<br/>                              }<br/>                              .js-level-01-trigger,<br/>                              .js-level-02-trigger {<br/>                                a {<br/>                                  span.toggle_icon {<br/>                                    &amp;::before {<br/>                                      content: \"\\f107\";<br/>                                      display: flex;<br/>                                      justify-content: center;<br/>                                      align-items: center;<br/>                                      font-family: $font_family_awsm;<br/>                                      font-size: 30px;<br/>                                      line-height: 1;<br/>                                      color: $navigation_sp_arrow1_color;<br/>                                      width: 30px;<br/>                                      height: 100%;<br/>                                      position: absolute;<br/>                                      top: 50%;<br/>                                      right: 0;<br/>                                      transform: translateY(-50%);<br/>                                    }<br/>                                    // 2階層目, 3階層目オープン時<br/>                                    &amp;.is-open {<br/>                                      &amp;::before {<br/>                                        content: \"\\f106\";<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- 擬似ナビ（2段） END -----*/<p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p><a href=\"#\">CSSをコピーする</a><p><strong>2024-09-13更新（v1.0.0）</strong></p>\n/*-- 擬似ナビ（2段） 編集画面用 2段 START v1.0.0​​​​​--*/<br/>  .theme-fo-base .wrapper .contents {<br/>    :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>      &amp;.js-navi_custom_sec {<br/>        display: block;<br/>      }<br/>      &amp;.navi_custom_sec {<br/>        padding: 50px 0;<br/>        &amp;.fixed {<br/>          position: relative;<br/>          top: initial;<br/>          border: 1px solid blue;<br/>          &amp;::before {<br/>            content: \"疑似ナビゲーション上部固定中（クラス名：fixed）\";<br/>            color: #fff;<br/>            background: blue;<br/>            font-size: 13px;<br/>            position: absolute;<br/>            right: 0;<br/>            top: -24px;<br/>            padding: 0 5px;<br/>          }<br/>        }<br/>        .inner {<br/>          padding: 20px;<br/>          .row {<br/>            .col {<br/>              .component {<br/>                &amp;.cta {<br/>                  .cta-row {<br/>                    &amp;.menu-trigger_row {<br/>                      display: block;<br/>                      width: 100%;<br/>                      border: 1px solid #000;<br/>                      position: relative;<br/>                      top: initial;<br/>                      right: initial;<br/>                      .cta-column {<br/>                        width: 100%;<br/>                      }<br/>                      &amp;::before {<br/>                        content: \"ハンバーガーメニュー（削除しないでください）\";<br/>                        color: #fff;<br/>                        background: #000;<br/>                        font-size: 13px;<br/>                        position: absolute;<br/>                        right: 0;<br/>                        top: -24px;<br/>                        padding: 0 5px;<br/>                      }<br/>                    }<br/>                    &amp;.main-menu_custom {<br/>                      .cta-column {<br/>                        .component {<br/>                          &amp;.richtext {<br/>                            &amp;.menu_lists {<br/>                              ul {<br/>                                li {<br/>                                  display: table-cell !important;<br/>                                   &gt; ul {<br/>                                     display: none !important;<br/>                                   }<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>/*-- 擬似ナビ（2段） 編集画面用 2段 END --*/<p><strong>※変数が不足している場合は、下記をご活用ください。</strong></p><a href=\"#\">CSSをコピーする</a><p><strong>2024-09-13更新（v1.0.0）</strong></p>\n// v1.0.0​​​​​<br/>&amp;.navi_custom_sec {<br/>  //フォント<br/>  $font_family_awsm: \"FontAwesome\";<br/> <br/>  //ボックスシャドウ<br/>  $navigation_box_shadow_common: 0 3px 8px rgba(#000, 0.1); //ナビゲーション専用<br/><br/>  //ナビゲーションロゴ<br/>  $header_logo: 300px; //PCでの幅サイズ（固定）<br/>  $header_sp_logo: 35px; //SPでの高さサイズ（maxサイズ）<br/><br/>  //グロナビ PC<br/>  $header_bg_color: var(--fo-background-color1); //ナビゲーション全体の背景色<br/>  $navigation_bg_color: $header_bg_color; //グロナビの背景色<br/>  $navigation_font_size: 14px; //グロナビのフォントサイズ（1〜3階層）<br/>  $navigation_font_weight: normal; //グロナビのフォントの太さ（1〜3階層） normal or bold<br/>  $navigation_hover_opacity: 1; //グロナビをホバーした時の透視度<br/>  $navigation_bg2_color: $navigation_bg_color; //グロナビの背景色（2階層以下）<br/>  $navigation_text_color: var(--fo-text-main-color); //グロナビのテキストカラー<br/>  $navigation_text2_color: $navigation_text_color; //グロナビのテキストカラー（2階層以下）<br/>  $navigation_hover_bg_color: #fff; //グロナビをホバーした時の背景色<br/>  $navigation_hover_bg2_color: var(--fo-main-color); //グロナビをホバーした時の背景色（2階層以下）<br/>  $navigation_hover_text_color: var(--fo-main-color); //グロナビをホバーした時のテキストカラー<br/>  $navigation_hover_text2_color: $navigation_hover_text_color; //グロナビをホバーした時のテキストカラー（2階層以下）<br/>  $navigation_arrow1_color: #aaa; //矢印カラー（1階層）<br/>  $navigation_arrow2_color: $navigation_arrow1_color; //矢印カラー（2階層）<br/><br/>  //グロナビ ハンバーガーメニュー<br/>  $navigation_sp_font_size: 14px; //ハンバーガーメニュー（SP）時のテキストサイズ（1〜3階層）<br/>  $navigation_sp_font_weight: normal; //ハンバーガーメニュー（SP）時のテキストの太さ（1〜3階層） normal or bold<br/>  $navigation_sp_text_color: var(--fo-text-main-color); //ハンバーガーメニュー（SP）時のテキストカラー １階層<br/>  $navigation_sp_text2_color: var(--fo-text-main-color); //ハンバーガーメニュー（SP）時のテキストカラー（2階層）<br/>  $navigation_sp_text3_color: var(--fo-text-main-color); //ハンバーガーメニュー（SP）時のテキストカラー（3階層）<br/>  $navigation_sp_hover_text_color: #fff; //ハンバーガーメニュー（SP）時のホバーした時の2階層のテキスト＆矢印のカラー<br/>  $navigation_sp_arrow1_color: $navigation_sp_text_color; //ハンバーガーメニュー（SP） 矢印カラー（1階層）<br/>  $navigation_sp_arrow2_color: $navigation_sp_text2_color; //ハンバーガーメニュー（SP） 矢印カラー（2階層）<br/>  $navigation_sp_bg_color: var(--fo-main-color); //ハンバーガーメニュー（SP）時の背景色（1階層）<br/>  $navigation_sp_bg2_color: #fff; //ハンバーガーメニュー（SP）時の背景色（２階層）<br/>  $navigation_sp_bg3_color: #eee; //ハンバーガーメニュー（SP）時の背景色（3階層）<br/>  $navigation_sp_border-bottom: 1px dashed var(--fo-main-color); //ハンバーガーメニュー（SP）時のボーダー（hamburger_custom 使用時）<br/>}</section>\n\n<section class=\"content-element content-11\"> </section>"
  },
  {
    "title": "擬似ナビ（1段）",
    "url": "https://js-part.hmup.jp/js/g-navi001",
    "html": "<section class=\"content-element content-1 js-navi_custom_sec navi01_custom_sec fixed\" data-designpart=\"section-empty\" data-designpart-id=\"642f669ce4dc09621d945b2d\"><a href=\"/index\"></a><ul><li><a href=\"#\">サービス</a><ul><li><a href=\"#\">サービス01</a></li><li><a href=\"#\">サービス02</a></li><li><a href=\"#\">サービス03</a><ul><li><a href=\"#\">サービス03-01</a></li><li><a href=\"#\">サービス03-02</a></li></ul></li></ul></li><li><a href=\"#\">選ばれる理由</a></li><li><a href=\"#\">導入事例</a><ul><li><a href=\"#\">導入事例詳細01</a></li><li><a href=\"#\">導入事例詳細02</a></li><li><a href=\"#\">導入事例詳細03</a><ul><li><a href=\"#\">導入事例詳細03-01</a></li><li><a href=\"#\">導入事例詳細03-02</a></li></ul></li></ul></li><li><a href=\"#\">お知らせ</a></li><li><a href=\"#\">よくあるご質問</a></li></ul><a href=\"#\">お問い合わせ</a><a href=\"#\">資料ダウンロード</a><p>ハンバーガーメニュー</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>\n<p><br/>\n    </p>\n<p>追加可能パーツ</p>\n</th>\n<th>変更可能箇所</th>\n<th>NG</th>\n<th>\n<p><strong>同一ページ<br/>\n   に複数設置</strong></p>\n</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<ul>\n<li>CVボタン<br/>\n→全体で2つまで※1</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>ナビ項目の数<br/>\n（〜5個推奨）</li>\n<li>文字スタイル・余白</li>\n<li>hover時の色</li>\n<li>ボタンデザイン<br/>\n     </li>\n</ul>\n<p>[ハンバーガーメニュー]</p>\n<ul>\n<li>背景色・文字スタイル</li>\n<li>アイコンの色</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>パーツの新規追加<br/>\n    ​​​​​​​（パーツ・行・カラム等）</li>\n<li>スムーズスクロールの速さ</li>\n<li>\n<p> 共通パーツに用意されていないパーツ（検索パーツ他）</p>\n</li>\n<li>\n<p>検索結果ページに表示※2</p>\n</li>\n</ul>\n</td>\n<td>×</td>\n<td>◯</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：3つ以上はレスポンシブ時に崩れる恐れがあります。<br/>\n   ※2：構造上、検索結果ページに擬似ナビを表示させることは不可です。<br/>\n<br/>\n   ※レイアウト崩れを防ぐため、1200px以下でハンバーガーメニュー化します。<br/>\n   ※詳しい編集方法や編集時の注意点については【<a href=\"//js-part.hmup.jp/js/g-navi001/edit\">擬似グロナビ（1段）〜共通パーツ編集方法〜</a>】をご参照ください。<br/>\n   ※サイドバーがある場合でも、幅100%で表示されます。<br/>\n   ※リッチテキストは操作性が悪いので、頻繁に更新されるのに向きません。ご了承頂いた上で、要引継ぎをお願いします。<br/>\n   　<strong>文言・リンクの変更前にはクリップボードでバックアップを保存すること</strong>をオススメします。<br/>\n   ※<strong>リンク、文言の変更、文字色の変更はリッチテキスト内の文字行を１行ずつドラッグし編集を行うようにしてください。</strong><br/>\n   　複数の文字列をドラッグして選択した状態で編集を行うと、公開画面でメニューが崩れる恐れがあります。<br/>\n※<a href=\"//js-part.hmup.jp/js/fade-slide-in\">フェードインアニメーション</a>を使用している場合はページ内リンク位置がずれます。</p>\n<p>※テキストパーツのHTMLモードを使用した文言の編集・修正はしないでください。コードの確認、不要なインラインスタイルを削除する、入り込んでしまった不要なデータコードをHTMLモードで削除することは可能です。</p>\n<p>※<strong>メニューリストを作成する際にプレーンテキストをコピペした場合、作成後のメニューリストのHTML構造が「ul &gt; li &gt; div &gt; aになっていることを確認してください</strong>。li &gt; p &gt; aの構造になっていた場合、リスト化を解除した上でもう一度リスト化し　li &gt; div &gt; aに構造が変更されていることを確認してください。 JSがうまくあたらない場合、divが生成されていない可能性があります。（詳しくは<a href=\"//js-part.hmup.jp/js/g-navi001/edit\">設定方法</a>をご覧ください）</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-4\" style=\"background-color:#fafafa\"><h2>内部リンク確認用</h2><ul><li><a href=\"#nav01\">内部リンク①</a></li><li><a href=\"#nav02\">内部リンク②</a></li><li><a href=\"#nav03\">内部リンク③</a></li></ul><ul><li><a href=\"/js/g-navi01#categoryA\">外部ページ遷移（疑似ナビ）</a></li><li><a href=\"/js/move-to-hamburger-at-sp#categoryA\">外部ページ遷移（共通ナビ）</a></li></ul><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>\n<p>編集画面用CSSを適切な位置に記述。</p>\n</li>\n<li>JavaScriptを使用したいパーツのセクションの<strong>一番下</strong>に配置。複数ページある場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。<br/>\n ※クラス名を簡単に取得できる<strong><a href=\"//js-part.hmup.jp/extension/01\">拡張機能</a></strong>を利用するとスムーズです。</li>\n</ul>\n<ol>\n<li>疑似ナビ表示用ページの編集画面に入り、右上にある基本設定画面から、エリアの表示切り替え＞「ナビゲーションを表示する」のチェックを外す。</li>\n<li>セクションを新規作成し、クラス名「<strong>js-navi_custom_sec navi01_custom_sec fixed</strong>」を追加。<br/>\n ※ナビを固定したくない場合、クラス<strong>「fixed</strong>」は削除してください。</li>\n<li>上記セクションの中に共通パーツを新規作成。</li>\n<li>[共通パーツ内]で行（row）を作成し、クラス名「<strong>navigation-cont_custom</strong>」を追加。</li>\n<li>上記の行（row）を<strong>3分割</strong>し、<br/>\n 左のカラム（col）にクラス名「<strong>logo_col</strong>」、<br/>\n 真ん中のカラム（col）にクラス名「<strong>menu_lists_col</strong>」、<br/>\n 右のカラム（col）にクラス名「<strong>btn_col</strong>」を追加。<br/>\n ※ロゴ画像やボタンは必要であれば各自追加。</li>\n<li>真ん中のカラム「<strong>menu_lists_col</strong>」内にリッチテキストを配置し、クラス名「<strong>js-menu_lists menu_lists</strong>」を追加。<br/>\n リッチテキストのリスト機能を使用して、第一階層〜第三階層までリンクを設定。（<a href=\"//js-part.hmup.jp/js/g-navi001/edit\">設定方法</a>・<a href=\"#structure\">構造図</a>参照）<br/>\n ※この際、一つでもリンク設定漏れがあると疑似ナビが正しく移動しませんのでご注意ください。</li>\n<li>その下に行（row）を新規作成し、クラス名「<strong>menu-trigger_row</strong>」を追加。<br/>\n ※これがSP時の三本線ハンバーガーメニューの元になります。</li>\n<li>上記の行（row）内にリッチテキストを配置し、クラス名「<strong>js-menu-trigger_btn menu-trigger_btn</strong>」を追加。</li>\n</ol>\n<ul>\n<li>新CMSの場合：基本デザインパーツ（セクションパーツ、単体パーツ）を使用して問題ありません。<br/>\n rowは新規で作成した方がCSSの影響を受けないので安心かと思います。</li>\n</ul>\n<h2>注意点</h2><ul>\n<li>テキストパーツのHTMLモードは使用しないでください。<br/>\n  </li>\n<li>共通パーツ内のリッチテキストは時々意図しない挙動になり崩れる恐れがあるので注意してください。<br/>\n ※半角スペースが入っていると崩れたりなど<br/>\n ※コピーだと余計なタグを持ってくることがあるので手入力推奨<br/>\n  </li>\n<li>\n<p>第二階層の数について制限はありませんが、閲覧者のモニターの高さによっては見切れる可能性があります。個数的にははっきり言えませんが、10個以上はおすすめはしません。<br/>\n  </p>\n</li>\n<li>\n<p>ページ内にフェードインのアニメーションを使用しているとページ内リンクのスクロール位置がズレます。これは共通ナビでも発生する仕様ですのでご注意ください<br/>\n  </p>\n</li>\n<li>\n<p>擬似ナビ設置ページでメンビジを使用する際は、擬似ナビとメンビジの表示位置が公開画面と逆になりますのでご注意ください。<br/>\n  </p>\n</li>\n<li>\n<p>アップセル等でCSSが古い場合があるので、カスタムCSSに「<strong>scroll-behavior: smooth;</strong>」が適用されているか必ず確認して下さい。こちらのスタイルが当たっていないとスムーズスクロールが効きません。<br/>\n  </p>\n</li>\n<li>\n<p> テキストパーツのHTMLモードを使用した文言の編集・修正はしないでください。コードの確認、不要なインラインスタイルを削除する、入り込んでしまった不要なデータコードをHTMLモードで削除することは可能です。<br/>\n  </p>\n</li>\n<li>\n<p><strong>メニューリストを作成する際にプレーンテキストをコピペした場合、作成後のメニューリストのHTML構造が「ul &gt; li &gt; div &gt; aになっていることを確認してください</strong>。li &gt; p &gt; aの構造になっていた場合、リスト化を解除した上でもう一度リスト化し　li &gt; div &gt; aに構造が変更されていることを確認してください。 JSがうまくあたらない場合、divが生成されていない可能性があります。（詳しくは<a href=\"//js-part.hmup.jp/js/g-navi001/edit\">設定方法</a>をご覧ください）</p>\n</li>\n</ul>\n</section>\n\n<section class=\"content-element content-5\" data-designpart=\"section-tab-nab-v2\" data-designpart-id=\"6822d4806248c1056f815e0a\"><h2>JS・CSS・編集画面用CSS<br/></h2><ul><li><strong>JS</strong></li><li><strong>CSS</strong></li><li><strong>編集画面用CSS</strong></li><li><strong>変数が無い場合</strong></li></ul><a href=\"#\">JSをコピーする</a><p><strong>2025-08-14更新（v2.2.0）</strong></p>\n&lt;script&gt;<br/>  'use strict';<br/> <br/>  /* ---------------------------<br/>    擬似ナビ（1段） v2.2.0<br/>  --------------------------- */<br/>  document.addEventListener('DOMContentLoaded', function() {<br/> const fixedSide = document.querySelector('.fixed-side');<br/> const navi_custom_sec = document.getElementsByClassName('js-navi_custom_sec')[0];<br/><br/> /* サイドバーが存在する場合にクラスを付与 */<br/> if (fixedSide &amp;&amp; navi_custom_sec) {<br/>  navi_custom_sec.classList.add('has-fixed-side');<br/> }<br/><br/>    /* ちらつき防止 */<br/>    document.querySelectorAll('.js-navi_custom_sec')[0].style.display = 'block';<br/><br/>    /*--- PC or SP　判定 ---*/<br/>    function windowPCorSP() {<br/>      if (window.matchMedia('(min-width: 1200px)').matches) {<br/>        /* 画面幅が1200px以上のときの処理(PC) */<br/>        return true;<br/>      } else {<br/>        /* 画面幅が1199px以下のときの処理(SP) */<br/>        return false;<br/>      }<br/>    };<br/><br/>    /*------------- 初期化 (変数定義やクラス付与) START -------------*/<br/>    /* メインメニュー（Gナビ） */<br/>    const mainMenu = document.querySelectorAll('.js-menu_lists')[0];<br/><br/>    /* 階層別にクラス付与 */<br/>    const level_01 = mainMenu.querySelectorAll('ul &gt; li');<br/>    const level_02 = [];<br/>    const level_03 = [];<br/>    level_01.forEach(li1 =&gt; {<br/>      if (!li1.classList.contains('js-level-02') &amp;&amp; !li1.classList.contains('js-level-03')) {<br/>        li1.classList.add('js-level-01');<br/>      }<br/>      const level_02_list = li1.querySelectorAll(':scope &gt; ul &gt; li');<br/>      level_02_list.forEach(li2 =&gt; {<br/>        if (!li2.classList.contains('js-level-03')) {<br/>          li2.classList.add('js-level-02');<br/>        }<br/>        level_02.push(li2);<br/>        const level_03_list = li2.querySelectorAll(':scope &gt; ul &gt; li');<br/>        level_03_list.forEach(li3 =&gt; {<br/>          li3.classList.add('js-level-03');<br/>          level_03.push(li3);<br/>        });<br/>      });<br/>    });<br/><br/>    /* 1階層目トリガー */<br/>    for (let i = 0; i &lt; level_01.length; i++) {<br/>      let target;<br/>      if (level_01[i].querySelectorAll('.js-level-02').length &gt; 0) {<br/>        target = level_01[i];<br/>      };<br/><br/>      /* クラス付与 */<br/>      if ( target !== undefined) {<br/>        target.classList.add('js-level-01-trigger');<br/>        target.classList.remove('js-level-01');<br/>        /* aタグの中にspanを追加 */<br/>        let anchor = target.querySelector('div &gt; a');<br/>        if (!anchor) {<br/>          anchor = target.querySelector('a');<br/>        }<br/>        if (anchor &amp;&amp; !anchor.querySelector('.toggle_icon')) {<br/>          let icon_element = document.createElement('span');<br/>          icon_element.classList.add('toggle_icon');<br/>          anchor.appendChild(icon_element);<br/>        }<br/>      }<br/>    };<br/>    const level_01_trigger = document.querySelectorAll('.js-level-01-trigger');<br/><br/>    /* 2階層目 [ul] */<br/>    for (let i = 0; i &lt; level_02.length; i++) {<br/>      const level_01_cont = level_02[i].parentNode;<br/>      /* クラス付与 */<br/>      level_01_cont.classList.add('js-level-01-cont');<br/>      level_01_cont.style.display = 'none';<br/>    };<br/>    const level_01_cont = document.querySelectorAll('.js-level-01-cont');<br/><br/>    /* 2階層目トリガー */<br/>    for (let i = 0; i &lt; level_02.length; i++) {<br/>      let target;<br/>      if (level_02[i].querySelectorAll('.js-level-03').length &gt; 0) {<br/>        target = level_02[i];<br/>      };<br/><br/>      /* クラス付与 */<br/>      if ( target !== undefined) {<br/>        target.classList.add('js-level-02-trigger');<br/>        target.classList.remove('js-level-02');<br/>        /* aタグの中にspanを追加 */<br/>        let anchor = target.querySelector('div &gt; a');<br/>        if (!anchor) {<br/>          anchor = target.querySelector('a');<br/>        }<br/>        if (anchor &amp;&amp; !anchor.querySelector('.toggle_icon')) {<br/>          let icon_element = document.createElement('span');<br/>          icon_element.classList.add('toggle_icon');<br/>          anchor.appendChild(icon_element);<br/>        }<br/>      }<br/>    };<br/>    const level_02_trigger = document.querySelectorAll('.js-level-02-trigger');<br/><br/>    /* 3階層目 [ul] */<br/>    for (let i = 0; i &lt; level_03.length; i++) {<br/>      const level_02_cont = level_03[i].parentNode;<br/>      /* クラス付与 */<br/>      level_02_cont.classList.add('js-level-02-cont');<br/>      level_02_cont.style.display = 'none';<br/>    };<br/>    const level_02_cont = document.querySelectorAll('.js-level-02-cont');<br/><br/>    /*------------- 初期化 (変数定義やクラス付与) END -------------*/<br/><br/>    /*------------- モジュール 関数定義 START -------------*/<br/><br/>    /* モジュール (カプセル化) jQueryとかぶらないように */<br/>    const ferretModule = (() =&gt; {<br/><br/>      return {<br/>        /* slideUp */<br/>        slideUp: (el, duration = 300) =&gt; {<br/>          el.style.height = el.offsetHeight + 'px';<br/>          el.offsetHeight;<br/>          el.style.transitionProperty = 'height, margin, padding';<br/>          el.style.transitionDuration = duration + 'ms';<br/>          el.style.transitionTimingFunction = 'ease';<br/>          el.style.overflow = 'hidden';<br/>          el.style.height = 0;<br/>          el.style.paddingTop = 0;<br/>          el.style.paddingBottom = 0;<br/>          el.style.marginTop = 0;<br/>          el.style.marginBottom = 0;<br/>          setTimeout(() =&gt; {<br/>            el.style.display = 'none';<br/>            el.style.removeProperty('height');<br/>            el.style.removeProperty('padding-top');<br/>            el.style.removeProperty('padding-bottom');<br/>            el.style.removeProperty('margin-top');<br/>            el.style.removeProperty('margin-bottom');<br/>            el.style.removeProperty('overflow');<br/>            el.style.removeProperty('transition-duration');<br/>            el.style.removeProperty('transition-property');<br/>            el.style.removeProperty('transition-timing-function');<br/>          }, duration);<br/>        },<br/><br/>        /* slideDown */<br/>        slideDown: (el, duration = 300) =&gt; {<br/>          el.style.removeProperty('display');<br/>          let display = window.getComputedStyle(el).display;<br/>          if (display === 'none') {<br/>            display = 'block';<br/>          }<br/>          el.style.display = display;<br/>          let height = el.offsetHeight;<br/>          el.style.overflow = 'hidden';<br/>          el.style.height = 0;<br/>          el.style.paddingTop = 0;<br/>          el.style.paddingBottom = 0;<br/>          el.style.marginTop = 0;<br/>          el.style.marginBottom = 0;<br/>          el.offsetHeight;<br/>          el.style.transitionProperty = 'height, margin, padding';<br/>          el.style.transitionDuration = duration + 'ms';<br/>          el.style.transitionTimingFunction = 'ease';<br/>          el.style.height = height + 'px';<br/>          el.style.removeProperty('padding-top');<br/>          el.style.removeProperty('padding-bottom');<br/>          el.style.removeProperty('margin-top');<br/>          el.style.removeProperty('margin-bottom');<br/>          setTimeout(() =&gt; {<br/>            el.style.removeProperty('height');<br/>            el.style.removeProperty('overflow');<br/>            el.style.removeProperty('transition-duration');<br/>            el.style.removeProperty('transition-property');<br/>            el.style.removeProperty('transition-timing-function');<br/>          }, duration);<br/>        }<br/>      }<br/>    })();<br/><br/>    /*------------- モジュール 関数定義 END -------------*/<br/><br/>    /*------------- 擬似ナビゲーション メンビジ上に配置 START -------------*/<br/><br/>    const theme_fo_base = document.getElementsByClassName('theme-fo-base')[0];<br/>    const main_visual = document.getElementsByClassName('main-visual')[0];<br/><br/>    theme_fo_base.parentNode.insertBefore(navi_custom_sec, theme_fo_base);<br/><br/>    /*------------- 擬似ナビゲーション メンビジ上に配置 END -------------*/<br/><br/><br/>    /*------------- ドロップダウン ナビゲーション START -------------*/<br/><br/>    const initializationLevel = () =&gt; {<br/>      for (let i = 0; i &lt; level_01_cont.length; i++) {<br/>        level_01_cont[i].classList.remove('is-open');<br/>        level_01_cont[i].style.display = 'none';<br/>      }<br/>      for (let i = 0; i &lt; level_02_cont.length; i++) {<br/>        level_02_cont[i].classList.remove('is-open');<br/>        level_02_cont[i].style.display = 'none';<br/>      }<br/>    };<br/><br/>    const level02Open = (e) =&gt; {<br/>      let slideTarget = e.currentTarget.getElementsByClassName('js-level-01-cont')[0];<br/>      ferretModule.slideDown(slideTarget, 0);<br/>    };<br/><br/>    const level02Close = (e) =&gt; {<br/>      let slideTarget = e.currentTarget.getElementsByClassName('js-level-01-cont')[0];<br/>      ferretModule.slideUp(slideTarget, 200);<br/>    };<br/><br/>    const level03Open = (e) =&gt; {<br/>      let slideTarget = e.currentTarget.getElementsByClassName('js-level-02-cont')[0];<br/>      ferretModule.slideDown(slideTarget, 200);<br/>    };<br/><br/>    const level03Close = (e) =&gt; {<br/>      let slideTarget = e.currentTarget.getElementsByClassName('js-level-02-cont')[0];<br/>      ferretModule.slideUp(slideTarget, 200);<br/>    };<br/><br/>    const level02ToggleSp = (e) =&gt; {<br/>      e.preventDefault();<br/>      e.stopPropagation();<br/>      let clickTarget = e.currentTarget;<br/>      let trigger = clickTarget.closest('.js-level-01-trigger');<br/>      let targetList = trigger.querySelector('.js-level-01-cont');<br/><br/>      if (targetList.style.display !== 'block') {<br/>        clickTarget.classList.add('is-open');<br/>        targetList.classList.add('is-open');<br/>        targetList.style.display = 'block';<br/>      } else {<br/>        clickTarget.classList.remove('is-open');<br/>        targetList.classList.remove('is-open');<br/>        targetList.style.display = 'none';<br/>      }<br/>    };<br/><br/>    const level03ToggleSp = (e) =&gt; {<br/>      e.preventDefault();<br/>      e.stopPropagation();<br/>      let clickTarget = e.currentTarget;<br/>      let trigger = clickTarget.closest('.js-level-02-trigger');<br/>      let targetList = trigger.querySelector('.js-level-02-cont');<br/><br/>      if (targetList.style.display !== 'block') {<br/>        clickTarget.classList.add('is-open');<br/>        targetList.classList.add('is-open');<br/>        targetList.style.display = 'block';<br/>      } else {<br/>        clickTarget.classList.remove('is-open');<br/>        targetList.classList.remove('is-open');<br/>        targetList.style.display = 'none';<br/>      }<br/>    };<br/><br/>    const menuLevel23Open = () =&gt; {<br/>      if (windowPCorSP()) {<br/>        /*--- PCのときのイベント設定 ---*/<br/><br/>        /* リサイズでレスポンシブ時 */<br/>        for (let i = 0; i &lt; level_01_cont.length; i++) {<br/>          if (level_01_cont[i].classList.contains('is-open')) {<br/>            initializationLevel();<br/>          }<br/>        };<br/>        mainMenu.style.display = '';<br/><br/><br/>        if(menuTiggerBtn.classList.contains('active')) {<br/>          menuTiggerBtn.classList.remove('active');<br/>        };<br/><br/>        for (let i = 0; i &lt; level_01_trigger.length; i++) {<br/>          /* 2階層目OPEN ホバー ドロップダウン */<br/>          level_01_trigger[i].addEventListener('mouseenter', level02Open);<br/><br/>          /* 2階層目OPEN ホバーアウト ドロップアップ */<br/>          level_01_trigger[i].addEventListener('mouseleave', level02Close);<br/>        };<br/><br/>        /* 3階層目OPEN ホバー ドロップダウン */<br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          level_02_trigger[i].addEventListener('mouseenter', level03Open);<br/><br/>          /* 3階層目OPEN ホバーアウト ドロップアップ */<br/>          level_02_trigger[i].addEventListener('mouseleave', level03Close);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          let toggle_icon = level_02_trigger[i].querySelector('.toggle_icon');<br/>          /* 2階層目OPEN クリックトグル */<br/>          toggle_icon.removeEventListener('click', level02ToggleSp);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          let toggle_icon = level_02_trigger[i].querySelector('.toggle_icon');<br/>          /* 2階層目OPEN クリックトグル */<br/>          toggle_icon.removeEventListener('click', level03ToggleSp);<br/>        };<br/><br/>      } else {<br/>        /*--- SPのときのイベント設定 ---*/<br/>        menuTiggerBtn.style.display = '';<br/><br/>        if (!menuTiggerBtn.classList.contains('active')) {<br/>          mainMenu.style.display = 'none';<br/>        };<br/><br/>        for (let i = 0; i &lt; level_01_trigger.length; i++) {<br/>          /* 2階層目OPEN ホバー ドロップダウン */<br/>          level_01_trigger[i].removeEventListener('mouseenter', level02Open);<br/><br/>          /* 2階層目OPEN ホバーアウト ドロップアップ */<br/>          level_01_trigger[i].removeEventListener('mouseleave', level02Close);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          /* 3階層目OPEN ホバー ドロップダウン */<br/>          level_02_trigger[i].removeEventListener('mouseenter', level03Open);<br/><br/>          /* 3階層目OPEN ホバーアウト ドロップアップ */<br/>          level_02_trigger[i].removeEventListener('mouseleave', level03Close);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_01_trigger.length; i++) {<br/>          let toggle_icon = level_01_trigger[i].querySelector('.toggle_icon');<br/>          /* 2階層目OPEN クリックトグル */<br/>          toggle_icon.addEventListener('click', level02ToggleSp);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          let toggle_icon = level_02_trigger[i].querySelector('.toggle_icon');<br/>          /* 3階層目OPEN クリックトグル */<br/>          toggle_icon.addEventListener('click', level03ToggleSp);<br/>        };<br/>      };<br/>    };<br/><br/>    /*------------- ドロップダウン ナビゲーション END -------------*/<br/><br/>    /*------------- ハンバーガーメニュー START -------------*/<br/>    const menuTiggerBtn = document.querySelectorAll('.js-menu-trigger_btn')[0];<br/><br/>    menuTiggerBtn.innerHTML = ('\\<br/>      &lt;span class=\"modal_close_border\"&gt;&lt;/span&gt;\\<br/>      &lt;span class=\"modal_close_border\"&gt;&lt;/span&gt;\\<br/>      &lt;span class=\"modal_close_border\"&gt;&lt;/span&gt;\\<br/>    ');<br/><br/>    menuTiggerBtn.addEventListener('click', function() {<br/>      menuTiggerBtn.classList.toggle('active');<br/>      if (menuTiggerBtn.classList.contains('active')) {<br/>        mainMenu.style.display = '';<br/>      } else {<br/>        mainMenu.style.display = 'none';<br/>      }<br/>    });<br/><br/>    /* SP時ページ内アンカーリンクをクリックしたらメニューを閉じる */<br/>    const anchorLinks = mainMenu.querySelectorAll('a[href*=\"#\"]');<br/><br/>    anchorLinks.forEach(link =&gt; {<br/>      link.addEventListener('click', (e) =&gt; {<br/>        if (!windowPCorSP() &amp;&amp; window.getComputedStyle(menuTiggerBtn).display !== 'none') {<br/>          const currentUrlBase = window.location.href.split('#')[0];<br/>          const linkUrlBase = link.href.split('#')[0];<br/><br/>          if (currentUrlBase === linkUrlBase) {<br/>            menuTiggerBtn.classList.remove('active');<br/>            mainMenu.style.display = 'none';<br/>          }<br/>        }<br/>      });<br/>    });<br/><br/>    /*------------- ハンバーガーメニュー END -------------*/<br/><br/>    /*------------- PC or SPでGナビの表示非表示を切り替える START -------------*/<br/>    const mainMenuDisplay = () =&gt; {<br/>      if (windowPCorSP()) {<br/>        mainMenu.style.display = '';<br/>        menuTiggerBtn.classList.remove('active');<br/>        menuTiggerBtn.style.display = 'none';<br/>      } else {<br/>        mainMenu.style.display = 'none';<br/>        menuTiggerBtn.style.display = '';<br/>      }<br/>    };<br/>    /*------------- PC or SPでGナビの表示非表示を切り替える END -------------*/<br/><br/>    /*--- ウィンドウのリサイズ完了後の処理 ---*/<br/>    const windowResize = () =&gt; {<br/>      let timer = 0;<br/>      let delay = 200;<br/>      window.addEventListener('resize', () =&gt; {<br/>        clearTimeout(timer);<br/>        timer = setTimeout(() =&gt; {<br/>          menuLevel23Open();<br/>        }, delay);<br/>      }, false);<br/>    };<br/><br/>    menuLevel23Open();<br/>    mainMenuDisplay();<br/>    windowResize();<br/><br/>  });<br/>  /*--- ページ内遷移ずれる対策 ---*/<br/>  window.addEventListener('load', () =&gt; {<br/>    const headerSec = document.querySelector('.js-navi_custom_sec'); /* 擬似ナビ（1段）を取得 */<br/>    if (headerSec) {<br/>      const headerHeight = headerSec.offsetHeight; /* 擬似ナビ（1段）の高さを取得 */<br/>      /* 固定ナビの場合の処理 */<br/>      if (headerSec.classList.contains('fixed')) {<br/>        document.documentElement.style.setProperty('--navi-height', `${headerHeight}px`);<br/>      }<br/>    }<br/>  });<br/>  /*--- ページ内遷移ずれる対策 END ---*/<br/>  /* ---------------------------<br/>    擬似ナビ（1段） END<br/>  --------------------------- */<br/>&lt;/script&gt;<br/><br/><br/><br/><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p><p>//旧CMS用（不要であれば削除）<br/>//新CMS用（不要であれば削除）<br/>と2つ記述を用意している箇所がいくつかありますので必要に応じて削除orコメントアウトを外してください。<br/>※デフォルトでは新CMS用の記述が当たるようにしています。</p><a href=\"#\">CSSをコピーする</a><p><strong>2025-08-14更新（v2.2.0）</strong></p>\n/*----- 擬似ナビ（1段） START v2.2.0   -----*/<br/>/*----------------------------------<br/>    Mixins記述箇所に追加<br/>----------------------------------*/<br/>@mixin breakpoint-min1200 {<br/>  @media screen and (min-width: 1200px) {<br/>    @content;<br/>  }<br/>}<br/>@mixin breakpoint-max1200 {<br/>  @media screen and (max-width: 1199px) {<br/>    @content;<br/>  }<br/>}<br/>/*----------------------------------*/<br/>// メンビジ上に配置のとき<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;.js-navi_custom_sec {<br/>    display: none; //ちらつき防止<br/>    * {<br/>      box-sizing: border-box; //はみだし防止<br/>    }<br/>    //固定サイドバー対策<br/>    &amp;.has-fixed-side {<br/>      @media screen and (min-width: 1201px) {<br/>        width: calc(100% - 420px);<br/>      }<br/>    }<br/>  }<br/>  &amp;.navi01_custom_sec {<br/>    // font-family: $font_family;//旧CMS用（不要であれば削除）<br/>    font-family: var(--fo-text-font-family);//新CMS用（不要であれば削除）<br/>    width: 100%;<br/>    background: $header_bg_color;<br/>    box-shadow: $navigation_box_shadow_common;<br/>    box-sizing: border-box;<br/>    padding: 0;<br/>    // オプション 上部固定<br/>    &amp;.fixed {<br/>      position: sticky;<br/>      top: 0;<br/>      z-index: 1001;<br/>    }<br/>    .inner {<br/>      max-width: 100%;<br/>      padding: 0;<br/>      .row {<br/>        .col {<br/>          padding: 0;<br/>          .component {<br/>            margin: 0;<br/>            &amp;.cta {<br/>              .cta-row {<br/>                &amp;.navigation-cont_custom {<br/>                  display: flex;<br/>                  align-items: center;<br/>                  justify-content: space-between;<br/>                  flex-wrap: nowrap;<br/>                  max-width: 100%;<br/>                  padding: 0 20px;<br/>                  margin: 0 auto;<br/>                  @include breakpoint-max1200 {<br/>                    min-height: 51px;<br/>                    padding: 0;<br/>                  }<br/>                  .cta-column {<br/>                    display: block;<br/>                    margin: 0;<br/>                    padding: 0;<br/>                    &amp;.logo_col {<br/>                      width: auto !important;<br/>                      @include breakpoint-max1200 {<br/>                        width: 45% !important;<br/>                        padding: 0 0 0 10px;<br/>                      }<br/>                      .component {<br/>                        &amp;.image {<br/>                          a {<br/>                            display: inline-block;<br/>                          }<br/>                          img {<br/>                            @include breakpoint-pc {<br/>                              // width: $header_logo !important;<br/>                              max-height: 40px;<br/>                            }<br/>                            @include breakpoint-sp {<br/>                              max-height: $header_sp_logo;<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                    &amp;.menu_lists_col {<br/>                      width: auto !important;<br/>                      @include breakpoint-max1200 {<br/>                        background: $navigation_bg_color;<br/>                        box-shadow: $navigation_box_shadow_common;<br/>                        position: absolute;<br/>                        top: 100%;<br/>                        right: 0;<br/>                        left: 0;<br/>                        margin: auto;<br/>                        width: 100% !important;<br/>                        max-height: calc(100vh - 51px);<br/>                        overflow-y: auto;<br/>                        /*----<br/>                        //スクロールバー非表示<br/>                        -ms-overflow-style: none; //Edge<br/>                        scrollbar-width: none; //Firefox<br/>                        &amp;::-webkit-scrollbar {<br/>                          display: none;<br/>                        }<br/>                        ----*/<br/>                      }<br/>                      .component {<br/>                        &amp;.richtext {<br/>                          &amp;.menu_lists {<br/>                            //PC用<br/>                            @include breakpoint-min1200 {<br/>                              ul {<br/>                                max-width: 1140px;<br/>                                display: table;<br/>                                width: 100%;<br/>                                margin: 0 auto;<br/>                                text-align: center;<br/>                                list-style: none;<br/>                                li {<br/>                                  position: relative;<br/>                                  box-sizing: content-box;<br/>                                  min-width: 90px;<br/>                                  color: $navigation_text_color;<br/>                                  p {<br/>                                    margin: 0;<br/>                                  }<br/>                                  a {<br/>                                    display: block;<br/>                                    text-decoration: none;<br/>                                    font-size: $navigation_font_size;<br/>                                    font-weight: $navigation_font_weight;<br/>                                    line-height: 1.15;<br/>                                    color: $navigation_text_color;<br/>                                    padding: 20px 10px;<br/>                                    &amp;:hover {<br/>                                      opacity: 1;<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-01,<br/>                                .js-level-01-trigger {<br/>                                  display: table-cell;<br/>                                  color: $navigation_text_color;<br/>                                  &amp;:hover {<br/>                                    background-color: $navigation_hover_bg_color;<br/>                                    &gt; div {<br/>                                      &gt; a,<br/>                                      &gt; strong a {<br/>                                        color: $navigation_hover_text_color;<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-01-trigger {<br/>                                  padding-right: 20px;<br/>                                  &amp;::after {<br/>                                    position: absolute;<br/>                                    right: 10px;<br/>                                    top: 50%;<br/>                                    font-family: $font_family_awsm;<br/>                                    content: \"\\f107\";<br/>                                    color: $navigation_arrow1_color;<br/>                                    margin-top: 0;<br/>                                    transform: translateY(-50%);<br/>                                    font-size: 20px;<br/>                                    line-height: 1;<br/>                                  }<br/>                                  &amp;:hover {<br/>                                    &amp;::after {<br/>                                      color: $navigation_hover_text_color;<br/>                                      transform: rotate(180deg) translateY(50%);<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-01-cont {<br/>                                  display: block;<br/>                                  position: absolute;<br/>                                  z-index: 1;<br/>                                  top: 100%;<br/>                                  left: 0;<br/>                                  background-color: $navigation_bg2_color;<br/>                                }<br/>                                .js-level-02,<br/>                                .js-level-02-trigger {<br/>                                  display: block;<br/>                                  a {<br/>                                    padding: 20px;<br/>                                    color: $navigation_text2_color;<br/>                                    &amp;:hover {<br/>                                      color: $navigation_hover_text2_color;<br/>                                      background-color: $navigation_hover_bg2_color;<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-02-trigger {<br/>                                  &amp;::after {<br/>                                    position: absolute;<br/>                                    right: 7px;<br/>                                    top: 50%;<br/>                                    font-family: $font_family_awsm;<br/>                                    content: \"\\f105\";<br/>                                    margin-top: 0;<br/>                                    color: $navigation_arrow2_color;<br/>                                    font-size: 20px;<br/>                                    transform: translateY(-50%);<br/>                                  }<br/>                                  &amp;:hover::after {<br/>                                    color: $navigation_hover_text_color;<br/>                                  }<br/>                                }<br/>                                .js-level-02-cont {<br/>                                  display: block;<br/>                                  position: absolute;<br/>                                  z-index: 1;<br/>                                  top: 0;<br/>                                  left: 100%;<br/>                                  background-color: $navigation_bg2_color;<br/>                                }<br/>                                .js-level-03 {<br/>                                  a {<br/>                                    padding: 20px;<br/>                                    color: $navigation_text2_color;<br/>                                    &amp;:hover {<br/>                                      color: $navigation_hover_text2_color;<br/>                                      background-color: $navigation_hover_bg2_color;<br/>                                    }<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                            //SP用<br/>                            @include breakpoint-max1200 {<br/>                              ul {<br/>                                list-style: none;<br/>                                margin: 0;<br/>                                li {<br/>                                  p {<br/>                                    margin: 0;<br/>                                  }<br/>                                  a {<br/>                                    display: block;<br/>                                    position: relative;<br/>                                    text-decoration: none;<br/>                                    font-size: $navigation_sp_font_size;<br/>                                    color: $navigation_sp_text_color;<br/>                                    &amp;:hover {<br/>                                      color: $navigation_sp_hover_text_color;<br/>                                      background: $navigation_sp_bg_color;<br/>                                      span.toggle_icon {<br/>                                        &amp;::before {<br/>                                          color: $navigation_sp_hover_text_color;<br/>                                        }<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-01 {<br/>                                  div {<br/>                                    a {<br/>                                      padding: 20px 10px;<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-02,<br/>                                .js-level-02-trigger,<br/>                                .js-level-03 {<br/>                                  a {<br/>                                    &amp;:hover {<br/>                                      background: $navigation_sp_bg3_color;<br/>                                      color: $navigation_sp_text3_color;<br/>                                      span.toggle_icon {<br/>                                        &amp;::before {<br/>                                          color: $navigation_sp_text3_color;<br/>                                        }<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-02 {<br/>                                  a {<br/>                                    padding: 20px 30px 20px calc(10px + 1em);<br/>                                  }<br/>                                }<br/>                                .js-level-03 {<br/>                                  a {<br/>                                    padding: 20px 30px 20px calc(10px + 2em);<br/>                                  }<br/>                                }<br/>                                .js-level-01-trigger {<br/>                                  &gt; div {<br/>                                    &gt; a,<br/>                                    &gt; strong a {<br/>                                      padding: 20px 30px 20px 10px;<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-02-trigger {<br/>                                  &gt; div {<br/>                                    &gt; a,<br/>                                    &gt; strong a {<br/>                                      padding: 20px 30px 20px calc(10px + 1em);<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-01-trigger,<br/>                                .js-level-02-trigger {<br/>                                  a {<br/>                                    span.toggle_icon {<br/>                                      &amp;::before {<br/>                                        content: \"\\f107\";<br/>                                        display: flex;<br/>                                        justify-content: center;<br/>                                        align-items: center;<br/>                                        font-family: $font_family_awsm;<br/>                                        font-size: 30px;<br/>                                        line-height: 1;<br/>                                        color: $navigation_sp_arrow1_color;<br/>                                        width: 30px;<br/>                                        height: 100%;<br/>                                        position: absolute;<br/>                                        top: 50%;<br/>                                        right: 0;<br/>                                        transform: translateY(-50%);<br/>                                      }<br/>                                      // 2階層目, 3階層目オープン時<br/>                                      &amp;.is-open {<br/>                                        &amp;::before {<br/>                                          content: \"\\f106\";<br/>                                        }<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                    &amp;.btn_col {<br/>                      width: auto !important;<br/>                      display: flex;<br/>                      flex-direction: row;<br/>                      flex: 0;<br/>                      @include breakpoint-max1200 {<br/>                        width: 55% !important;<br/>                        padding: 0 65px 0 0;<br/>                      }<br/>                      .component {<br/>                        &amp;.button {<br/>                          &amp;:not(:first-child) {<br/>                            margin-left: 10px;<br/>                            @include breakpoint-sp {<br/>                              margin-left: 0;<br/>                            }<br/>                          }<br/>                          .button-cont {<br/>                            a {<br/>                              &amp;.size-s {<br/>                                @include breakpoint-sp {<br/>                                  box-shadow: none;<br/>                                  width: auto;<br/>                                  min-width: auto;<br/>                                  margin: 0;<br/>                                  padding: 5px 10px 5px 5px;<br/>                                  border: 0;<br/>                                  border-radius: 0;<br/>                                  font-size: 0 !important;<br/>                                  letter-spacing: 0;<br/>                                  background: none !important;<br/>                                  &amp;::before {<br/>                                    font-size: 22px;<br/>                                    margin: 0;<br/>                                    // color: $main_color;//旧CMS用（不要であれば削除）<br/>                                    color: var(--fo-main-color);//新CMS用（不要であれば削除）<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                          &amp;.btn_custom_tel {<br/>                            .button-cont {<br/>                              a {<br/>                                &amp;.size-s {<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>                &amp;.menu-trigger_row {<br/>                  width: 60px;<br/>                  position: absolute;<br/>                  top: 0;<br/>                  right: 0;<br/>                  margin: 0;<br/>                  padding: 0;<br/>                  padding: 0;<br/>                  @include breakpoint-min1200 {<br/>                    display: none;<br/>                  }<br/>                  .cta-column {<br/>                    margin: 0;<br/>                    padding: 0;<br/>                    .component {<br/>                      &amp;.richtext {<br/>                        &amp;.menu-trigger_btn {<br/>                          width: 60px;<br/>                          height: 51px;<br/>                          margin: 0;<br/>                          padding: 0;<br/>                          font-size: 0;<br/>                          // background-color: $main_color;//旧CMS用（不要であれば削除）<br/>                          background-color: var(--fo-main-color);//新CMS用（不要であれば削除）<br/>                          span {<br/>                            position: absolute;<br/>                            left: 15px;<br/>                            width: 30px;<br/>                            height: 3px;<br/>                            background-color: #fff;<br/>                            border-radius: 3px;<br/>                            transition: all .4s;<br/>                            &amp;:nth-of-type(1) {<br/>                              top: 15px;<br/>                            }<br/>                            &amp;:nth-of-type(2) {<br/>                              top: 24px;<br/>                            }<br/>                            &amp;:nth-of-type(3) {<br/>                              bottom: 15px;<br/>                            }<br/>                          }<br/>                          &amp;.active {<br/>                            span {<br/>                              &amp;:nth-of-type(1) {<br/>                                -webkit-transform: translateY(10px) rotate(-45deg);<br/>                                transform: translateY(10px) rotate(-45deg);<br/>                              }<br/>                              &amp;:nth-of-type(2) {<br/>                                opacity: 0;<br/>                              }<br/>                              &amp;:nth-of-type(3) {<br/>                                -webkit-transform: translateY(-8px) rotate(45deg);<br/>                                transform: translateY(-8px) rotate(45deg);<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- 擬似ナビ（1段） END -----*/<p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p><a href=\"#\">CSSをコピーする</a><p><strong>2024-09-13更新（v1.0.0）</strong></p>\n/*----- 擬似ナビ（1段） START v2.1.0   -----*/<br/>/*----------------------------------<br/>    Mixins記述箇所に追加<br/>----------------------------------*/<br/>@mixin breakpoint-min1200 {<br/>  @media screen and (min-width: 1200px) {<br/>    @content;<br/>  }<br/>}<br/>@mixin breakpoint-max1200 {<br/>  @media screen and (max-width: 1199px) {<br/>    @content;<br/>  }<br/>}<br/>/*----------------------------------*/<br/>// メンビジ上に配置のとき<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;.js-navi_custom_sec {<br/>    display: none; //ちらつき防止<br/>    * {<br/>      box-sizing: border-box; //はみだし防止<br/>    }<br/>  }<br/>  &amp;.navi01_custom_sec {<br/>    // font-family: $font_family;//旧CMS用（不要であれば削除）<br/>    font-family: var(--fo-text-font-family);//新CMS用（不要であれば削除）<br/>    width: 100%;<br/>    background: $header_bg_color;<br/>    box-shadow: $navigation_box_shadow_common;<br/>    box-sizing: border-box;<br/>    padding: 0;<br/>    // オプション 上部固定<br/>    &amp;.fixed {<br/>      position: sticky;<br/>      top: 0;<br/>      z-index: 1001;<br/>    }<br/>    .inner {<br/>      max-width: 100%;<br/>      padding: 0;<br/>      .row {<br/>        .col {<br/>          padding: 0;<br/>          .component {<br/>            margin: 0;<br/>            &amp;.cta {<br/>              .cta-row {<br/>                &amp;.navigation-cont_custom {<br/>                  display: flex;<br/>                  align-items: center;<br/>                  justify-content: space-between;<br/>                  flex-wrap: nowrap;<br/>                  max-width: 100%;<br/>                  padding: 0 20px;<br/>                  margin: 0 auto;<br/>                  @include breakpoint-max1200 {<br/>                    min-height: 51px;<br/>                    padding: 0;<br/>                  }<br/>                  .cta-column {<br/>                    display: block;<br/>                    margin: 0;<br/>                    padding: 0;<br/>                    &amp;.logo_col {<br/>                      width: auto !important;<br/>                      @include breakpoint-max1200 {<br/>                        width: 45% !important;<br/>                        padding: 0 0 0 10px;<br/>                      }<br/>                      .component {<br/>                        &amp;.image {<br/>                          a {<br/>                            display: inline-block;<br/>                          }<br/>                          img {<br/>                            @include breakpoint-pc {<br/>                              // width: $header_logo !important;<br/>                              max-height: 40px;<br/>                            }<br/>                            @include breakpoint-sp {<br/>                              max-height: $header_sp_logo;<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                    &amp;.menu_lists_col {<br/>                      width: auto !important;<br/>                      @include breakpoint-max1200 {<br/>                        background: $navigation_bg_color;<br/>                        box-shadow: $navigation_box_shadow_common;<br/>                        position: absolute;<br/>                        top: 100%;<br/>                        right: 0;<br/>                        left: 0;<br/>                        margin: auto;<br/>                        width: 100% !important;<br/>                        max-height: calc(100vh - 51px);<br/>                        overflow-y: auto;<br/>                        /*----<br/>                        //スクロールバー非表示<br/>                        -ms-overflow-style: none; //Edge<br/>                        scrollbar-width: none; //Firefox<br/>                        &amp;::-webkit-scrollbar {<br/>                          display: none;<br/>                        }<br/>                        ----*/<br/>                      }<br/>                      .component {<br/>                        &amp;.richtext {<br/>                          &amp;.menu_lists {<br/>                            //PC用<br/>                            @include breakpoint-min1200 {<br/>                              ul {<br/>                                max-width: 1140px;<br/>                                display: table;<br/>                                width: 100%;<br/>                                margin: 0 auto;<br/>                                text-align: center;<br/>                                list-style: none;<br/>                                li {<br/>                                  position: relative;<br/>                                  box-sizing: content-box;<br/>                                  min-width: 90px;<br/>                                  color: $navigation_text_color;<br/>                                  p {<br/>                                    margin: 0;<br/>                                  }<br/>                                  a {<br/>                                    display: block;<br/>                                    text-decoration: none;<br/>                                    font-size: $navigation_font_size;<br/>                                    font-weight: $navigation_font_weight;<br/>                                    line-height: 1.15;<br/>                                    color: $navigation_text_color;<br/>                                    padding: 20px 10px;<br/>                                    &amp;:hover {<br/>                                      opacity: 1;<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-01,<br/>                                .js-level-01-trigger {<br/>                                  display: table-cell;<br/>                                  color: $navigation_text_color;<br/>                                  &amp;:hover {<br/>                                    background-color: $navigation_hover_bg_color;<br/>                                    &gt; div {<br/>                                      &gt; a,<br/>                                      &gt; strong a {<br/>                                        color: $navigation_hover_text_color;<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-01-trigger {<br/>                                  padding-right: 20px;<br/>                                  &amp;::after {<br/>                                    position: absolute;<br/>                                    right: 10px;<br/>                                    top: 50%;<br/>                                    font-family: $font_family_awsm;<br/>                                    content: \"\\f107\";<br/>                                    color: $navigation_arrow1_color;<br/>                                    margin-top: 0;<br/>                                    transform: translateY(-50%);<br/>                                    font-size: 20px;<br/>                                    line-height: 1;<br/>                                  }<br/>                                  &amp;:hover {<br/>                                    &amp;::after {<br/>                                      color: $navigation_hover_text_color;<br/>                                      transform: rotate(180deg) translateY(50%);<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-01-cont {<br/>                                  display: block;<br/>                                  position: absolute;<br/>                                  z-index: 1;<br/>                                  top: 100%;<br/>                                  left: 0;<br/>                                  background-color: $navigation_bg2_color;<br/>                                }<br/>                                .js-level-02,<br/>                                .js-level-02-trigger {<br/>                                  display: block;<br/>                                  a {<br/>                                    padding: 20px;<br/>                                    color: $navigation_text2_color;<br/>                                    &amp;:hover {<br/>                                      color: $navigation_hover_text2_color;<br/>                                      background-color: $navigation_hover_bg2_color;<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-02-trigger {<br/>                                  &amp;::after {<br/>                                    position: absolute;<br/>                                    right: 7px;<br/>                                    top: 50%;<br/>                                    font-family: $font_family_awsm;<br/>                                    content: \"\\f105\";<br/>                                    margin-top: 0;<br/>                                    color: $navigation_arrow2_color;<br/>                                    font-size: 20px;<br/>                                    transform: translateY(-50%);<br/>                                  }<br/>                                  &amp;:hover::after {<br/>                                    color: $navigation_hover_text_color;<br/>                                  }<br/>                                }<br/>                                .js-level-02-cont {<br/>                                  display: block;<br/>                                  position: absolute;<br/>                                  z-index: 1;<br/>                                  top: 0;<br/>                                  left: 100%;<br/>                                  background-color: $navigation_bg2_color;<br/>                                }<br/>                                .js-level-03 {<br/>                                  a {<br/>                                    padding: 20px;<br/>                                    color: $navigation_text2_color;<br/>                                    &amp;:hover {<br/>                                      color: $navigation_hover_text2_color;<br/>                                      background-color: $navigation_hover_bg2_color;<br/>                                    }<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                            //SP用<br/>                            @include breakpoint-max1200 {<br/>                              ul {<br/>                                list-style: none;<br/>                                margin: 0;<br/>                                li {<br/>                                  p {<br/>                                    margin: 0;<br/>                                  }<br/>                                  a {<br/>                                    display: block;<br/>                                    position: relative;<br/>                                    text-decoration: none;<br/>                                    font-size: $navigation_sp_font_size;<br/>                                    color: $navigation_sp_text_color;<br/>                                    &amp;:hover {<br/>                                      color: $navigation_sp_hover_text_color;<br/>                                      background: $navigation_sp_bg_color;<br/>                                      span.toggle_icon {<br/>                                        &amp;::before {<br/>                                          color: $navigation_sp_hover_text_color;<br/>                                        }<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-01 {<br/>                                  div {<br/>                                    a {<br/>                                      padding: 20px 10px;<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-02,<br/>                                .js-level-02-trigger,<br/>                                .js-level-03 {<br/>                                  a {<br/>                                    &amp;:hover {<br/>                                      background: $navigation_sp_bg3_color;<br/>                                      color: $navigation_sp_text3_color;<br/>                                      span.toggle_icon {<br/>                                        &amp;::before {<br/>                                          color: $navigation_sp_text3_color;<br/>                                        }<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-02 {<br/>                                  a {<br/>                                    padding: 20px 30px 20px calc(10px + 1em);<br/>                                  }<br/>                                }<br/>                                .js-level-03 {<br/>                                  a {<br/>                                    padding: 20px 30px 20px calc(10px + 2em);<br/>                                  }<br/>                                }<br/>                                .js-level-01-trigger {<br/>                                  &gt; div {<br/>                                    &gt; a,<br/>                                    &gt; strong a {<br/>                                      padding: 20px 30px 20px 10px;<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-02-trigger {<br/>                                  &gt; div {<br/>                                    &gt; a,<br/>                                    &gt; strong a {<br/>                                      padding: 20px 30px 20px calc(10px + 1em);<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-01-trigger,<br/>                                .js-level-02-trigger {<br/>                                  a {<br/>                                    span.toggle_icon {<br/>                                      &amp;::before {<br/>                                        content: \"\\f107\";<br/>                                        display: flex;<br/>                                        justify-content: center;<br/>                                        align-items: center;<br/>                                        font-family: $font_family_awsm;<br/>                                        font-size: 30px;<br/>                                        line-height: 1;<br/>                                        color: $navigation_sp_arrow1_color;<br/>                                        width: 30px;<br/>                                        height: 100%;<br/>                                        position: absolute;<br/>                                        top: 50%;<br/>                                        right: 0;<br/>                                        transform: translateY(-50%);<br/>                                      }<br/>                                      // 2階層目, 3階層目オープン時<br/>                                      &amp;.is-open {<br/>                                        &amp;::before {<br/>                                          content: \"\\f106\";<br/>                                        }<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                    &amp;.btn_col {<br/>                      width: auto !important;<br/>                      display: flex;<br/>                      flex-direction: row;<br/>                      flex: 0;<br/>                      @include breakpoint-max1200 {<br/>                        width: 55% !important;<br/>                        padding: 0 65px 0 0;<br/>                      }<br/>                      .component {<br/>                        &amp;.button {<br/>                          &amp;:not(:first-child) {<br/>                            margin-left: 10px;<br/>                            @include breakpoint-sp {<br/>                              margin-left: 0;<br/>                            }<br/>                          }<br/>                          .button-cont {<br/>                            a {<br/>                              &amp;.size-s {<br/>                                @include breakpoint-sp {<br/>                                  box-shadow: none;<br/>                                  width: auto;<br/>                                  min-width: auto;<br/>                                  margin: 0;<br/>                                  padding: 5px 10px 5px 5px;<br/>                                  border: 0;<br/>                                  border-radius: 0;<br/>                                  font-size: 0 !important;<br/>                                  letter-spacing: 0;<br/>                                  background: none !important;<br/>                                  &amp;::before {<br/>                                    font-size: 22px;<br/>                                    margin: 0;<br/>                                    // color: $main_color;//旧CMS用（不要であれば削除）<br/>                                    color: var(--fo-main-color);//新CMS用（不要であれば削除）<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                          &amp;.btn_custom_tel {<br/>                            .button-cont {<br/>                              a {<br/>                                &amp;.size-s {<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>                &amp;.menu-trigger_row {<br/>                  width: 60px;<br/>                  position: absolute;<br/>                  top: 0;<br/>                  right: 0;<br/>                  margin: 0;<br/>                  padding: 0;<br/>                  padding: 0;<br/>                  @include breakpoint-min1200 {<br/>                    display: none;<br/>                  }<br/>                  .cta-column {<br/>                    margin: 0;<br/>                    padding: 0;<br/>                    .component {<br/>                      &amp;.richtext {<br/>                        &amp;.menu-trigger_btn {<br/>                          width: 60px;<br/>                          height: 51px;<br/>                          margin: 0;<br/>                          padding: 0;<br/>                          font-size: 0;<br/>                          // background-color: $main_color;//旧CMS用（不要であれば削除）<br/>                          background-color: var(--fo-main-color);//新CMS用（不要であれば削除）<br/>                          span {<br/>                            position: absolute;<br/>                            left: 15px;<br/>                            width: 30px;<br/>                            height: 3px;<br/>                            background-color: #fff;<br/>                            border-radius: 3px;<br/>                            transition: all .4s;<br/>                            &amp;:nth-of-type(1) {<br/>                              top: 15px;<br/>                            }<br/>                            &amp;:nth-of-type(2) {<br/>                              top: 24px;<br/>                            }<br/>                            &amp;:nth-of-type(3) {<br/>                              bottom: 15px;<br/>                            }<br/>                          }<br/>                          &amp;.active {<br/>                            span {<br/>                              &amp;:nth-of-type(1) {<br/>                                -webkit-transform: translateY(10px) rotate(-45deg);<br/>                                transform: translateY(10px) rotate(-45deg);<br/>                              }<br/>                              &amp;:nth-of-type(2) {<br/>                                opacity: 0;<br/>                              }<br/>                              &amp;:nth-of-type(3) {<br/>                                -webkit-transform: translateY(-8px) rotate(45deg);<br/>                                transform: translateY(-8px) rotate(45deg);<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- 擬似ナビ（1段） END -----*/<p><strong>※変数が不足している場合は、下記をご活用ください。</strong></p><a href=\"#\">CSSをコピーする</a><p><strong>2024-09-13更新（v1.0.0）</strong></p>\n// v1.0.0​​​​​<br/>&amp;.navi01_custom_sec {<br/>  //フォント<br/>  $font_family_awsm: \"FontAwesome\";<br/>  //ボックスシャドウ<br/>  $navigation_box_shadow_common: 0 3px 8px rgba(#000,.1); //ナビゲーション専用 <br/>  //ナビゲーションロゴ<br/>  $header_logo: 125px; //PCでの幅サイズ（固定）<br/>  $header_sp_logo: 50px; //SPでの高さサイズ（maxサイズ）<br/>  //グロナビ PC<br/>  $header_bg_color: var(--fo-background-color1); //ナビゲーション全体の背景色<br/>  $navigation_bg_color: $header_bg_color; //グロナビの背景色<br/>  $navigation_font_size: 14px; //グロナビのフォントサイズ（1〜3階層）<br/>  $navigation_font_weight: normal; //グロナビのフォントの太さ（1〜3階層）<br/>  $navigation_hover_opacity: 1; //グロナビをホバーした時の透視度<br/>  $navigation_bg2_color: $navigation_bg_color; //グロナビの背景色（2階層以下）<br/>  $navigation_text_color: #555; //グロナビのテキストカラー<br/>  $navigation_text2_color: $navigation_text_color; //グロナビのテキストカラー（2階層以下）<br/>  $navigation_hover_bg_color: #eee; //グロナビをホバーした時の背景色<br/>  $navigation_hover_bg2_color: #eee; //グロナビをホバーした時の背景色（2階層以下）<br/>  $navigation_hover_text_color: #555; //グロナビをホバーした時のテキストカラー<br/>  $navigation_hover_text2_color: #555; //グロナビをホバーした時のテキストカラー（2階層以下）<br/>  $navigation_arrow1_color: #aaa; //矢印カラー（1階層）<br/>  $navigation_arrow2_color: $navigation_arrow1_color; //矢印カラー（2階層）<br/>  //グロナビ ハンバーガーメニュー<br/>  $navigation_sp_font_size: 14px; //ハンバーガーメニュー（SP）時のテキストサイズ（1〜3階層）<br/>  $navigation_sp_font_weight: normal; //ハンバーガーメニュー（SP）時のテキストの太さ（1〜3階層）<br/>  $navigation_sp_text_color: #555; //ハンバーガーメニュー（SP）時のテキストカラー １階層<br/>  $navigation_sp_text2_color: #555; //ハンバーガーメニュー（SP）時のテキストカラー（2階層）<br/>  $navigation_sp_text3_color: #555; //ハンバーガーメニュー（SP）時のテキストカラー（3階層）<br/>  $navigation_sp_hover_text_color: #555; //ハンバーガーメニュー（SP）時のホバーした時の2階層のテキスト＆矢印のカラー<br/>  $navigation_sp_arrow1_color: #aaa; //ハンバーガーメニュー（SP） 矢印カラー（1階層）<br/>  $navigation_sp_arrow2_color: #aaa; //ハンバーガーメニュー（SP） 矢印カラー（2階層）<br/>  $navigation_sp_bg_color: #eee; //ハンバーガーメニュー（SP）時の背景色（1階層）<br/>  $navigation_sp_bg2_color: #ddd; //ハンバーガーメニュー（SP）時の背景色（２階層）<br/>  $navigation_sp_bg3_color: #ddd; //ハンバーガーメニュー（SP）時の背景色（3階層）<br/>  $navigation_sp_border-bottom: 1px dashed var(--fo-main-color); //ハンバーガーメニュー（SP）時のボーダー（hamburger_custom 使用時）<br/>}</section>\n\n<section class=\"content-element content-6\" data-designpart=\"section-tab-nab-v2\" data-designpart-id=\"6822d4806248c1056f815e0a\" style=\"background-color:#fbf9ef\"><h2>旧リッチテキストパーツ用<br/>JS・CSS・編集画面用CSS<br/></h2><p><strong>【旧リッチテキストパーツ】で組み込みが必要な場合にお使いください。</strong></p><ul><li><strong>JS</strong></li><li><strong>CSS</strong></li><li><strong>編集画面用CSS</strong></li><li><strong>変数が無い場合</strong></li></ul><a href=\"#\">JSをコピーする</a><p><strong>2025-08-14更新（v1.2.0）</strong></p>\n&lt;script&gt;<br/>  'use strict';<br/> <br/>  /* ---------------------------<br/>    擬似ナビ（1段） v1.2.0​​​​​<br/>  --------------------------- */<br/>  document.addEventListener('DOMContentLoaded', function() {<br/> /* 擬似ナビに .has-fixed-side を付与（固定サイドバーが存在する場合のみ） */<br/> const fixedSide = document.querySelector('.fixed-side');<br/> const navi_custom_sec = document.getElementsByClassName('js-navi_custom_sec')[0];<br/> if (fixedSide &amp;&amp; navi_custom_sec) {<br/>  navi_custom_sec.classList.add('has-fixed-side');<br/> }<br/><br/>    /* ちらつき防止 */<br/>    document.querySelectorAll('.js-navi_custom_sec')[0].style.display = 'block';<br/><br/>    /*--- PC or SP　判定 ---*/<br/>    function windowPCorSP() {<br/>      if (window.matchMedia('(min-width: 1200px)').matches) {<br/>        /* 画面幅が1200px以上のときの処理(PC) */<br/>        return true;<br/>      } else {<br/>        /* 画面幅が1199px以下のときの処理(SP) */<br/>        return false;<br/>      }<br/>    };<br/><br/>    /*------------- 初期化 (変数定義やクラス付与) START -------------*/<br/>    /* メインメニュー（Gナビ） */<br/>    const mainMenu = document.querySelectorAll('.js-menu_lists')[0];<br/><br/>    /* 1階層目 */<br/>    const level_01 = document.querySelectorAll('.js-menu_lists &gt; ul &gt; li');<br/>    /* クラス付与 */<br/>    level_01.forEach((el) =&gt; {<br/>      el.classList.add('js-level-01');<br/>    });<br/><br/>    /* 2階層目 */<br/>    const level_02 = document.querySelectorAll('.js-menu_lists &gt; ul &gt; li &gt; ul &gt; li');<br/>    /* クラス付与 */<br/>    level_02.forEach((el) =&gt; {<br/>      el.classList.add('js-level-02');<br/>    });<br/><br/>    /* 3階層目 */<br/>    const level_03 = document.querySelectorAll('.js-menu_lists &gt; ul &gt; li &gt; ul &gt; li &gt; ul &gt; li');<br/>    /* クラス付与 */<br/>    level_03.forEach((el) =&gt; {<br/>      el.classList.add('js-level-03');<br/>    });<br/><br/>    /* 1階層目トリガー */<br/>    for (let i = 0; i &lt; level_01.length; i++) {<br/>      let target;<br/>      if (level_01[i].querySelectorAll('.js-level-02').length &gt; 0) {<br/>        target = level_01[i];<br/>      };<br/><br/>      /* クラス付与 */<br/>      if ( target !== undefined) {<br/>        target.classList.add('js-level-01-trigger');<br/>        target.classList.remove('js-level-01');<br/>        /* aタグの中にspanを追加 */<br/>        let icon_element = document.createElement('span');<br/>        icon_element.classList.add('toggle_icon');<br/>        target.querySelector('a').appendChild(icon_element);<br/>      }<br/>    };<br/>    const level_01_trigger = document.querySelectorAll('.js-level-01-trigger');<br/><br/>    /* 2階層目 [ul] */<br/>    for (let i = 0; i &lt; level_02.length; i++) {<br/>      const level_01_cont = level_02[i].parentNode;<br/>      /* クラス付与 */<br/>      level_01_cont.classList.add('js-level-01-cont');<br/>      level_01_cont.style.display = 'none';<br/>    };<br/>    const level_01_cont = document.querySelectorAll('.js-level-01-cont');<br/><br/>    /* 2階層目トリガー */<br/>    for (let i = 0; i &lt; level_02.length; i++) {<br/>      let target;<br/>      if (level_02[i].querySelectorAll('.js-level-03').length &gt; 0) {<br/>        target = level_02[i];<br/>      };<br/><br/>      /* クラス付与 */<br/>      if ( target !== undefined) {<br/>        target.classList.add('js-level-02-trigger');<br/>        target.classList.remove('js-level-02');<br/>        /* aタグの中にspanを追加 */<br/>        let icon_element = document.createElement('span');<br/>        icon_element.classList.add('toggle_icon');<br/>        target.querySelector('a').appendChild(icon_element);<br/>      }<br/>    };<br/>    const level_02_trigger = document.querySelectorAll('.js-level-02-trigger');<br/><br/>    /* 3階層目 [ul] */<br/>    for (let i = 0; i &lt; level_03.length; i++) {<br/>      const level_02_cont = level_03[i].parentNode;<br/>      /* クラス付与 */<br/>      level_02_cont.classList.add('js-level-02-cont');<br/>      level_02_cont.style.display = 'none';<br/>    };<br/>    const level_02_cont = document.querySelectorAll('.js-level-02-cont');<br/><br/>    /*------------- 初期化 (変数定義やクラス付与) END -------------*/<br/><br/>    /*------------- モジュール 関数定義 START -------------*/<br/><br/>    /* モジュール (カプセル化) jQueryとかぶらないように */<br/>    const ferretModule = (() =&gt; {<br/><br/>      return {<br/>        /* slideUp */<br/>        slideUp: (el, duration = 300) =&gt; {<br/>          el.style.height = el.offsetHeight + 'px';<br/>          el.offsetHeight;<br/>          el.style.transitionProperty = 'height, margin, padding';<br/>          el.style.transitionDuration = duration + 'ms';<br/>          el.style.transitionTimingFunction = 'ease';<br/>          el.style.overflow = 'hidden';<br/>          el.style.height = 0;<br/>          el.style.paddingTop = 0;<br/>          el.style.paddingBottom = 0;<br/>          el.style.marginTop = 0;<br/>          el.style.marginBottom = 0;<br/>          setTimeout(() =&gt; {<br/>            el.style.display = 'none';<br/>            el.style.removeProperty('height');<br/>            el.style.removeProperty('padding-top');<br/>            el.style.removeProperty('padding-bottom');<br/>            el.style.removeProperty('margin-top');<br/>            el.style.removeProperty('margin-bottom');<br/>            el.style.removeProperty('overflow');<br/>            el.style.removeProperty('transition-duration');<br/>            el.style.removeProperty('transition-property');<br/>            el.style.removeProperty('transition-timing-function');<br/>          }, duration);<br/>        },<br/><br/>        /* slideDown */<br/>        slideDown: (el, duration = 300) =&gt; {<br/>          el.style.removeProperty('display');<br/>          let display = window.getComputedStyle(el).display;<br/>          if (display === 'none') {<br/>            display = 'block';<br/>          }<br/>          el.style.display = display;<br/>          let height = el.offsetHeight;<br/>          el.style.overflow = 'hidden';<br/>          el.style.height = 0;<br/>          el.style.paddingTop = 0;<br/>          el.style.paddingBottom = 0;<br/>          el.style.marginTop = 0;<br/>          el.style.marginBottom = 0;<br/>          el.offsetHeight;<br/>          el.style.transitionProperty = 'height, margin, padding';<br/>          el.style.transitionDuration = duration + 'ms';<br/>          el.style.transitionTimingFunction = 'ease';<br/>          el.style.height = height + 'px';<br/>          el.style.removeProperty('padding-top');<br/>          el.style.removeProperty('padding-bottom');<br/>          el.style.removeProperty('margin-top');<br/>          el.style.removeProperty('margin-bottom');<br/>          setTimeout(() =&gt; {<br/>            el.style.removeProperty('height');<br/>            el.style.removeProperty('overflow');<br/>            el.style.removeProperty('transition-duration');<br/>            el.style.removeProperty('transition-property');<br/>            el.style.removeProperty('transition-timing-function');<br/>          }, duration);<br/>        }<br/>      }<br/>    })();<br/><br/>    /*------------- モジュール 関数定義 END -------------*/<br/><br/>    /*------------- 擬似ナビゲーション メンビジ上に配置 START -------------*/<br/><br/>    const theme_fo_base = document.getElementsByClassName('theme-fo-base')[0];<br/>    const main_visual = document.getElementsByClassName('main-visual')[0];<br/><br/>    theme_fo_base.parentNode.insertBefore(navi_custom_sec, theme_fo_base);<br/><br/>    /*------------- 擬似ナビゲーション メンビジ上に配置 END -------------*/<br/><br/><br/>    /*------------- ドロップダウン ナビゲーション START -------------*/<br/><br/>    const initializationLevel = () =&gt; {<br/>      for (let i = 0; i &lt; level_01_cont.length; i++) {<br/>        level_01_cont[i].classList.remove('is-open');<br/>        level_01_cont[i].style.display = 'none';<br/>      }<br/>      for (let i = 0; i &lt; level_02_cont.length; i++) {<br/>        level_02_cont[i].classList.remove('is-open');<br/>        level_02_cont[i].style.display = 'none';<br/>      }<br/>    };<br/><br/>    const level02Open = (e) =&gt; {<br/>      let slideTarget = e.currentTarget.getElementsByClassName('js-level-01-cont')[0];<br/>      ferretModule.slideDown(slideTarget, 0);<br/>    };<br/><br/>    const level02Close = (e) =&gt; {<br/>      let slideTarget = e.currentTarget.getElementsByClassName('js-level-01-cont')[0];<br/>      ferretModule.slideUp(slideTarget, 200);<br/>    };<br/><br/>    const level03Open = (e) =&gt; {<br/>      let slideTarget = e.currentTarget.getElementsByClassName('js-level-02-cont')[0];<br/>      ferretModule.slideDown(slideTarget, 200);<br/>    };<br/><br/>    const level03Close = (e) =&gt; {<br/>      let slideTarget = e.currentTarget.getElementsByClassName('js-level-02-cont')[0];<br/>      ferretModule.slideUp(slideTarget, 200);<br/>    };<br/><br/>    const level02ToggleSp = (e) =&gt; {<br/>      e.preventDefault();<br/>      e.stopPropagation();<br/>      let clickTarget = e.currentTarget;<br/>      let trigger = clickTarget.closest('.js-level-01-trigger');<br/>      let targetList = trigger.querySelector('.js-level-01-cont');<br/><br/>      if (targetList.style.display !== 'block') {<br/>        clickTarget.classList.add('is-open');<br/>        targetList.classList.add('is-open');<br/>        targetList.style.display = 'block';<br/>      } else {<br/>        clickTarget.classList.remove('is-open');<br/>        targetList.classList.remove('is-open');<br/>        targetList.style.display = 'none';<br/>      }<br/>    };<br/><br/>    const level03ToggleSp = (e) =&gt; {<br/>      e.preventDefault();<br/>      e.stopPropagation();<br/>      let clickTarget = e.currentTarget;<br/>      let trigger = clickTarget.closest('.js-level-02-trigger');<br/>      let targetList = trigger.querySelector('.js-level-02-cont');<br/><br/>      if (targetList.style.display !== 'block') {<br/>        clickTarget.classList.add('is-open');<br/>        targetList.classList.add('is-open');<br/>        targetList.style.display = 'block';<br/>      } else {<br/>        clickTarget.classList.remove('is-open');<br/>        targetList.classList.remove('is-open');<br/>        targetList.style.display = 'none';<br/>      }<br/>    };<br/><br/>    const menuLevel23Open = () =&gt; {<br/>      if (windowPCorSP()) {<br/>        /*--- PCのときのイベント設定 ---*/<br/><br/>        /* リサイズでレスポンシブ時 */<br/>        for (let i = 0; i &lt; level_01_cont.length; i++) {<br/>          if (level_01_cont[i].classList.contains('is-open')) {<br/>            initializationLevel();<br/>          }<br/>        };<br/>        mainMenu.style.display = '';<br/><br/><br/>        if(menuTiggerBtn.classList.contains('active')) {<br/>          menuTiggerBtn.classList.remove('active');<br/>        };<br/><br/>        for (let i = 0; i &lt; level_01_trigger.length; i++) {<br/>          /* 2階層目OPEN ホバー ドロップダウン */<br/>          level_01_trigger[i].addEventListener('mouseenter', level02Open);<br/><br/>          /* 2階層目OPEN ホバーアウト ドロップアップ */<br/>          level_01_trigger[i].addEventListener('mouseleave', level02Close);<br/>        };<br/><br/>        /* 3階層目OPEN ホバー ドロップダウン */<br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          level_02_trigger[i].addEventListener('mouseenter', level03Open);<br/><br/>          /* 3階層目OPEN ホバーアウト ドロップアップ */<br/>          level_02_trigger[i].addEventListener('mouseleave', level03Close);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          let toggle_icon = level_02_trigger[i].querySelector('.toggle_icon');<br/>          /* 2階層目OPEN クリックトグル */<br/>          toggle_icon.removeEventListener('click', level02ToggleSp);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          let toggle_icon = level_02_trigger[i].querySelector('.toggle_icon');<br/>          /* 2階層目OPEN クリックトグル */<br/>          toggle_icon.removeEventListener('click', level03ToggleSp);<br/>        };<br/><br/>      } else {<br/>        /*--- SPのときのイベント設定 ---*/<br/>        menuTiggerBtn.style.display = '';<br/><br/>        if (!menuTiggerBtn.classList.contains('active')) {<br/>          mainMenu.style.display = 'none';<br/>        };<br/><br/>        for (let i = 0; i &lt; level_01_trigger.length; i++) {<br/>          /* 2階層目OPEN ホバー ドロップダウン */<br/>          level_01_trigger[i].removeEventListener('mouseenter', level02Open);<br/><br/>          /* 2階層目OPEN ホバーアウト ドロップアップ */<br/>          level_01_trigger[i].removeEventListener('mouseleave', level02Close);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          /* 3階層目OPEN ホバー ドロップダウン */<br/>          level_02_trigger[i].removeEventListener('mouseenter', level03Open);<br/><br/>          /* 3階層目OPEN ホバーアウト ドロップアップ */<br/>          level_02_trigger[i].removeEventListener('mouseleave', level03Close);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_01_trigger.length; i++) {<br/>          let toggle_icon = level_01_trigger[i].querySelector('.toggle_icon');<br/>          /* 2階層目OPEN クリックトグル */<br/>          toggle_icon.addEventListener('click', level02ToggleSp);<br/>        };<br/><br/>        for (let i = 0; i &lt; level_02_trigger.length; i++) {<br/>          let toggle_icon = level_02_trigger[i].querySelector('.toggle_icon');<br/>          /* 3階層目OPEN クリックトグル */<br/>          toggle_icon.addEventListener('click', level03ToggleSp);<br/>        };<br/>      };<br/>    };<br/><br/>    /*------------- ドロップダウン ナビゲーション END -------------*/<br/><br/>    /*------------- ハンバーガーメニュー START -------------*/<br/>    const menuTiggerBtn = document.querySelectorAll('.js-menu-trigger_btn')[0];<br/><br/>    menuTiggerBtn.innerHTML = ('\\<br/>      &lt;span class=\"modal_close_border\"&gt;&lt;/span&gt;\\<br/>      &lt;span class=\"modal_close_border\"&gt;&lt;/span&gt;\\<br/>      &lt;span class=\"modal_close_border\"&gt;&lt;/span&gt;\\<br/>    ');<br/><br/>    menuTiggerBtn.addEventListener('click', function() {<br/>      menuTiggerBtn.classList.toggle('active');<br/>      if (menuTiggerBtn.classList.contains('active')) {<br/>        mainMenu.style.display = '';<br/>      } else {<br/>        mainMenu.style.display = 'none';<br/>      }<br/>    });<br/><br/>    /* SP時ページ内アンカーリンクをクリックしたらメニューを閉じる */<br/>    const anchorLinks = mainMenu.querySelectorAll('a[href*=\"#\"]');<br/><br/>    anchorLinks.forEach(link =&gt; {<br/>      link.addEventListener('click', (e) =&gt; {<br/>        if (!windowPCorSP() &amp;&amp; window.getComputedStyle(menuTiggerBtn).display !== 'none') {<br/>          const currentUrlBase = window.location.href.split('#')[0];<br/>          const linkUrlBase = link.href.split('#')[0];<br/><br/>          if (currentUrlBase === linkUrlBase) {<br/>            menuTiggerBtn.classList.remove('active');<br/>            mainMenu.style.display = 'none';<br/>          }<br/>        }<br/>      });<br/>    });<br/><br/>    /*------------- ハンバーガーメニュー END -------------*/<br/><br/>    /*------------- PC or SPでGナビの表示非表示を切り替える START -------------*/<br/>    const mainMenuDisplay = () =&gt; {<br/>      if (windowPCorSP()) {<br/>        mainMenu.style.display = '';<br/>        menuTiggerBtn.classList.remove('active');<br/>        menuTiggerBtn.style.display = 'none';<br/>      } else {<br/>        mainMenu.style.display = 'none';<br/>        menuTiggerBtn.style.display = '';<br/>      }<br/>    };<br/>    /*------------- PC or SPでGナビの表示非表示を切り替える END -------------*/<br/><br/>    /*--- ウィンドウのリサイズ完了後の処理 ---*/<br/>    const windowResize = () =&gt; {<br/>      let timer = 0;<br/>      let delay = 200;<br/>      window.addEventListener('resize', () =&gt; {<br/>        clearTimeout(timer);<br/>        timer = setTimeout(() =&gt; {<br/>          menuLevel23Open();<br/>        }, delay);<br/>      }, false);<br/>    };<br/><br/>    menuLevel23Open();<br/>    mainMenuDisplay();<br/>    windowResize();<br/><br/>  });<br/>  /*--- ページ内遷移ずれる対策 ---*/<br/>  window.addEventListener('load', () =&gt; {<br/>    const headerSec = document.querySelector('.js-navi_custom_sec'); /* 擬似ナビ（1段）を取得 */<br/>    if (headerSec) {<br/>      const headerHeight = headerSec.offsetHeight; /* 擬似ナビ（1段）の高さを取得 */<br/>      /* 固定ナビの場合の処理 */<br/>      if (headerSec.classList.contains('fixed')) {<br/>        document.documentElement.style.setProperty('--navi-height', `${headerHeight}px`);<br/>      }<br/>    }<br/>  });<br/>  /*--- ページ内遷移ずれる対策 END ---*/<br/>  /* ---------------------------<br/>    擬似ナビ（1段） END<br/>  --------------------------- */<br/>&lt;/script&gt;<br/><br/><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p><p>//旧CMS用（不要であれば削除）<br/>//新CMS用（不要であれば削除）<br/>と2つ記述を用意している箇所がいくつかありますので必要に応じて削除orコメントアウトを外してください。<br/>※デフォルトでは新CMS用の記述が当たるようにしています。</p><a href=\"#\">CSSをコピーする</a><p><strong>2025-08-14更新（v1.1.0）</strong></p>\n/*----- 擬似ナビ（1段） START v1.1.0​​​​​-----*/<br/>/*----------------------------------<br/>    Mixins記述箇所に追加<br/>----------------------------------*/<br/>@mixin breakpoint-min1200 {<br/>  @media screen and (min-width: 1200px) {<br/>    @content;<br/>  }<br/>}<br/>@mixin breakpoint-max1200 {<br/>  @media screen and (max-width: 1199px) {<br/>    @content;<br/>  }<br/>}<br/>/*----------------------------------*/<br/>// メンビジ上に配置のとき<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;.js-navi_custom_sec {<br/>    display: none; //ちらつき防止<br/>    * {<br/>      box-sizing: border-box; //はみだし防止<br/>    }<br/>    //固定サイドバー対策<br/>    &amp;.has-fixed-side {<br/>      @media screen and (min-width: 1201px) {<br/>        width: calc(100% - 420px);<br/>      }<br/>    }<br/>  }<br/>  &amp;.navi01_custom_sec {<br/>    // font-family: $font_family;//旧CMS用（不要であれば削除）<br/>    font-family: var(--fo-text-font-family);//新CMS用（不要であれば削除）<br/>    width: 100%;<br/>    background: $header_bg_color;<br/>    box-shadow: $navigation_box_shadow_common;<br/>    box-sizing: border-box;<br/>    padding: 0;<br/>    // オプション 上部固定<br/>    &amp;.fixed {<br/>      position: sticky;<br/>      top: 0;<br/>      z-index: 1001;<br/>    }<br/>    .inner {<br/>      max-width: 100%;<br/>      padding: 0;<br/>      .row {<br/>        .col {<br/>          padding: 0;<br/>          .component {<br/>            margin: 0;<br/>            &amp;.cta {<br/>              .cta-row {<br/>                &amp;.navigation-cont_custom {<br/>                  display: flex;<br/>                  align-items: center;<br/>                  justify-content: space-between;<br/>                  flex-wrap: nowrap;<br/>                  max-width: 100%;<br/>                  padding: 0 20px;<br/>                  margin: 0 auto;<br/>                  @include breakpoint-max1200 {<br/>                    min-height: 51px;<br/>                    padding: 0;<br/>                  }<br/>                  .cta-column {<br/>                    display: block;<br/>                    margin: 0;<br/>                    padding: 0;<br/>                    &amp;.logo_col {<br/>                      width: auto !important;<br/>                      @include breakpoint-max1200 {<br/>                        width: 45% !important;<br/>                        padding: 0 0 0 10px;<br/>                      }<br/>                      .component {<br/>                        &amp;.image {<br/>                          a {<br/>                            display: inline-block;<br/>                          }<br/>                          img {<br/>                            @include breakpoint-pc {<br/>                              // width: $header_logo !important;<br/>                              max-height: 40px;<br/>                            }<br/>                            @include breakpoint-sp {<br/>                              max-height: $header_sp_logo;<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                    &amp;.menu_lists_col {<br/>                      width: auto !important;<br/>                      @include breakpoint-max1200 {<br/>                        background: $navigation_bg_color;<br/>                        box-shadow: $navigation_box_shadow_common;<br/>                        position: absolute;<br/>                        top: 100%;<br/>                        right: 0;<br/>                        left: 0;<br/>                        margin: auto;<br/>                        width: 100% !important;<br/>                        max-height: calc(100vh - 51px);<br/>                        overflow-y: auto;<br/>                        /*----<br/>                        //スクロールバー非表示<br/>                        -ms-overflow-style: none; //Edge<br/>                        scrollbar-width: none; //Firefox<br/>                        &amp;::-webkit-scrollbar {<br/>                          display: none;<br/>                        }<br/>                        ----*/<br/>                      }<br/>                      .component {<br/>                        &amp;.richtext {<br/>                          &amp;.menu_lists {<br/>                            //PC用<br/>                            @include breakpoint-min1200 {<br/>                              ul {<br/>                                max-width: 1140px;<br/>                                display: table;<br/>                                width: 100%;<br/>                                margin: 0 auto;<br/>                                text-align: center;<br/>                                list-style: none;<br/>                                li {<br/>                                  position: relative;<br/>                                  box-sizing: content-box;<br/>                                  min-width: 90px;<br/>                                  color: $navigation_text_color;<br/>                                  p {<br/>                                    margin: 0;<br/>                                  }<br/>                                  a {<br/>                                    display: block;<br/>                                    text-decoration: none;<br/>                                    font-size: $navigation_font_size;<br/>                                    font-weight: $navigation_font_weight;<br/>                                    line-height: 1.15;<br/>                                    color: $navigation_text_color;<br/>                                    padding: 20px 10px;<br/>                                    &amp;:hover {<br/>                                      opacity: 1;<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-01,<br/>                                .js-level-01-trigger {<br/>                                  display: table-cell;<br/>                                  color: $navigation_text_color;<br/>                                  &amp;:hover {<br/>                                    background-color: $navigation_hover_bg_color;<br/>                                    &gt; a,<br/>                                    &gt; strong a {<br/>                                      color: $navigation_hover_text_color;<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-01-trigger {<br/>                                  padding-right: 20px;<br/>                                  &amp;::after {<br/>                                    position: absolute;<br/>                                    right: 10px;<br/>                                    top: 50%;<br/>                                    font-family: $font_family_awsm;<br/>                                    content: \"\\f107\";<br/>                                    color: $navigation_arrow1_color;<br/>                                    margin-top: 0;<br/>                                    transform: translateY(-50%);<br/>                                    font-size: 20px;<br/>                                    line-height: 1;<br/>                                  }<br/>                                  &amp;:hover {<br/>                                    &amp;::after {<br/>                                      color: $navigation_hover_text_color;<br/>                                      transform: rotate(180deg) translateY(50%);<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-01-cont {<br/>                                  display: block;<br/>                                  position: absolute;<br/>                                  z-index: 1;<br/>                                  top: 100%;<br/>                                  left: 0;<br/>                                  background-color: $navigation_bg2_color;<br/>                                }<br/>                                .js-level-02,<br/>                                .js-level-02-trigger {<br/>                                  display: block;<br/>                                  a {<br/>                                    padding: 20px;<br/>                                    color: $navigation_text2_color;<br/>                                    &amp;:hover {<br/>                                      color: $navigation_hover_text2_color;<br/>                                      background-color: $navigation_hover_bg2_color;<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-02-trigger {<br/>                                  &amp;::after {<br/>                                    position: absolute;<br/>                                    right: 7px;<br/>                                    top: 50%;<br/>                                    font-family: $font_family_awsm;<br/>                                    content: \"\\f105\";<br/>                                    margin-top: 0;<br/>                                    color: $navigation_arrow2_color;<br/>                                    font-size: 20px;<br/>                                    transform: translateY(-50%);<br/>                                  }<br/>                                  &amp;:hover::after {<br/>                                    color: $navigation_hover_text_color;<br/>                                  }<br/>                                }<br/>                                .js-level-02-cont {<br/>                                  display: block;<br/>                                  position: absolute;<br/>                                  z-index: 1;<br/>                                  top: 0;<br/>                                  left: 100%;<br/>                                  background-color: $navigation_bg2_color;<br/>                                }<br/>                                .js-level-03 {<br/>                                  a {<br/>                                    padding: 20px;<br/>                                    color: $navigation_text2_color;<br/>                                    &amp;:hover {<br/>                                      color: $navigation_hover_text2_color;<br/>                                      background-color: $navigation_hover_bg2_color;<br/>                                    }<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                            //SP用<br/>                            @include breakpoint-max1200 {<br/>                              ul {<br/>                                list-style: none;<br/>                                margin: 0;<br/>                                li {<br/>                                  p {<br/>                                    margin: 0;<br/>                                  }<br/>                                  a {<br/>                                    display: block;<br/>                                    position: relative;<br/>                                    text-decoration: none;<br/>                                    font-size: $navigation_sp_font_size;<br/>                                    color: $navigation_sp_text_color;<br/>                                    &amp;:hover {<br/>                                      color: $navigation_sp_hover_text_color;<br/>                                      background: $navigation_sp_bg_color;<br/>                                      span.toggle_icon {<br/>                                        &amp;::before {<br/>                                          color: $navigation_sp_hover_text_color;<br/>                                        }<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-01 {<br/>                                  a {<br/>                                    padding: 20px 10px;<br/>                                  }<br/>                                }<br/>                                .js-level-02,<br/>                                .js-level-02-trigger,<br/>                                .js-level-03 {<br/>                                  a {<br/>                                    &amp;:hover {<br/>                                      background: $navigation_sp_bg3_color;<br/>                                      color: $navigation_sp_text3_color;<br/>                                      span.toggle_icon {<br/>                                        &amp;::before {<br/>                                          color: $navigation_sp_text3_color;<br/>                                        }<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                                .js-level-02 {<br/>                                  a {<br/>                                    padding: 20px 30px 20px calc(10px + 1em);<br/>                                  }<br/>                                }<br/>                                .js-level-03 {<br/>                                  a {<br/>                                    padding: 20px 30px 20px calc(10px + 2em);<br/>                                  }<br/>                                }<br/>                                .js-level-01-trigger {<br/>                                  &gt; a,<br/>                                  &gt; strong a {<br/>                                    padding: 20px 30px 20px 10px;<br/>                                  }<br/>                                }<br/>                                .js-level-02-trigger {<br/>                                  &gt; a,<br/>                                  &gt; strong a {<br/>                                    padding: 20px 30px 20px calc(10px + 1em);<br/>                                  }<br/>                                }<br/>                                .js-level-01-trigger,<br/>                                .js-level-02-trigger {<br/>                                  a {<br/>                                    span.toggle_icon {<br/>                                      &amp;::before {<br/>                                        content: \"\\f107\";<br/>                                        display: flex;<br/>                                        justify-content: center;<br/>                                        align-items: center;<br/>                                        font-family: $font_family_awsm;<br/>                                        font-size: 30px;<br/>                                        line-height: 1;<br/>                                        color: $navigation_sp_arrow1_color;<br/>                                        width: 30px;<br/>                                        height: 100%;<br/>                                        position: absolute;<br/>                                        top: 50%;<br/>                                        right: 0;<br/>                                        transform: translateY(-50%);<br/>                                      }<br/>                                      // 2階層目, 3階層目オープン時<br/>                                      &amp;.is-open {<br/>                                        &amp;::before {<br/>                                          content: \"\\f106\";<br/>                                        }<br/>                                      }<br/>                                    }<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                    &amp;.btn_col {<br/>                      width: auto !important;<br/>                      display: flex;<br/>                      flex-direction: row;<br/>                      flex: 0;<br/>                      @include breakpoint-max1200 {<br/>                        width: 55% !important;<br/>                        padding: 0 65px 0 0;<br/>                      }<br/>                      .component {<br/>                        &amp;.button {<br/>                          &amp;:not(:first-child) {<br/>                            margin-left: 10px;<br/>                            @include breakpoint-sp {<br/>                              margin-left: 0;<br/>                            }<br/>                          }<br/>                          .button-cont {<br/>                            a {<br/>                              &amp;.size-s {<br/>                                @include breakpoint-sp {<br/>                                  width: auto;<br/>                                  min-width: auto;<br/>                                  margin: 0;<br/>                                  padding: 5px 10px 5px 5px;<br/>                                  border: 0;<br/>                                  border-radius: 0;<br/>                                  font-size: 0 !important;<br/>                                  letter-spacing: 0;<br/>                                  background: none !important;<br/>                                  &amp;::before {<br/>                                    font-size: 22px;<br/>                                    margin: 0;<br/>                                    // color: $main_color;//旧CMS用（不要であれば削除）<br/>                                    color: var(--fo-main-color);//新CMS用（不要であれば削除）<br/>                                  }<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                          &amp;.btn_custom_tel {<br/>                            .button-cont {<br/>                              a {<br/>                                &amp;.size-s {<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>                &amp;.menu-trigger_row {<br/>                  width: 60px;<br/>                  position: absolute;<br/>                  top: 0;<br/>                  right: 0;<br/>                  margin: 0;<br/>                  padding: 0;<br/>                  padding: 0;<br/>                  @include breakpoint-min1200 {<br/>                    display: none;<br/>                  }<br/>                  .cta-column {<br/>                    margin: 0;<br/>                    padding: 0;<br/>                    .component {<br/>                      &amp;.richtext {<br/>                        &amp;.menu-trigger_btn {<br/>                          width: 60px;<br/>                          height: 51px;<br/>                          margin: 0;<br/>                          padding: 0;<br/>                          font-size: 0;<br/>                          // background-color: $main_color;//旧CMS用（不要であれば削除）<br/>                          background-color: var(--fo-main-color);//新CMS用（不要であれば削除）<br/>                          span {<br/>                            position: absolute;<br/>                            left: 15px;<br/>                            width: 30px;<br/>                            height: 3px;<br/>                            background-color: #fff;<br/>                            border-radius: 3px;<br/>                            transition: all .4s;<br/>                            &amp;:nth-of-type(1) {<br/>                              top: 15px;<br/>                            }<br/>                            &amp;:nth-of-type(2) {<br/>                              top: 24px;<br/>                            }<br/>                            &amp;:nth-of-type(3) {<br/>                              bottom: 15px;<br/>                            }<br/>                          }<br/>                          &amp;.active {<br/>                            span {<br/>                              &amp;:nth-of-type(1) {<br/>                                -webkit-transform: translateY(10px) rotate(-45deg);<br/>                                transform: translateY(10px) rotate(-45deg);<br/>                              }<br/>                              &amp;:nth-of-type(2) {<br/>                                opacity: 0;<br/>                              }<br/>                              &amp;:nth-of-type(3) {<br/>                                -webkit-transform: translateY(-8px) rotate(45deg);<br/>                                transform: translateY(-8px) rotate(45deg);<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- 擬似ナビ（1段） END -----*/<p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p><a href=\"#\">CSSをコピーする</a><p><strong>2024-09-13更新（v1.0.0）</strong></p>\n/*-- 擬似ナビ（1段） 編集画面用 1段 START v1.0.0​​​​​--*/<br/>  .theme-fo-base .wrapper .contents {<br/>    :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>      &amp;.js-navi_custom_sec {<br/>        display: block;<br/>      }<br/>      &amp;.navi01_custom_sec {<br/>        padding: 50px 0;<br/>        &amp;.fixed {<br/>          position: relative;<br/>          top: initial;<br/>          border: 1px solid blue;<br/>          &amp;::before {<br/>            content: \"疑似ナビゲーション上部固定中（クラス名：fixed）\";<br/>            background: blue;<br/>            color: #fff;<br/>            font-size: 13px;<br/>            position: absolute;<br/>            right: 0;<br/>            top: -24px;<br/>            padding: 0 5px;<br/>          }<br/>        }<br/>        .inner {<br/>          padding: 20px;<br/>          .row {<br/>            .col {<br/>              .component {<br/>                &amp;.cta {<br/>                  .cta-row {<br/>                    .cta-column {<br/>                      &amp;.menu_lists_col {<br/>                        .component {<br/>                          &amp;.richtext {<br/>                            &amp;.menu_lists {<br/>                              ul {<br/>                                li {<br/>                                  display: table-cell !important;<br/>                                    &gt; ul {<br/>                                      display: none !important;<br/>                                    }<br/>                                }<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                    &amp;.menu-trigger_row {<br/>                      display: block;<br/>                      width: 100%;<br/>                      border: 1px solid #000;<br/>                      position: relative;<br/>                      top: initial;<br/>                      right: initial;<br/>                      .cta-column {<br/>                        width: 100%;<br/>                      }<br/>                      &amp;::before {<br/>                        content: \"ハンバーガーメニュー（削除しないでください）\";<br/>                        background: #000;<br/>                        color: #fff;<br/>                        font-size: 13px;<br/>                        position: absolute;<br/>                        top: -24px;<br/>                        right: 0;<br/>                        padding: 0 5px;<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>/*-- 擬似ナビ（1段） 編集画面用 1段 END --*/<p><strong>※変数が不足している場合は、下記をご活用ください。</strong></p><a href=\"#\">CSSをコピーする</a><p><strong>2024-12-11更新（v1.0.0）</strong></p>\n// v1.0.0​​​​​<br/>&amp;.navi01_custom_sec {<br/>  //フォント<br/>  $font_family_awsm: \"FontAwesome\";<br/>  //ボックスシャドウ<br/>  $navigation_box_shadow_common: 0 3px 8px rgba(#000,.1); //ナビゲーション専用 <br/>  //ナビゲーションロゴ<br/>  $header_logo: 125px; //PCでの幅サイズ（固定）<br/>  $header_sp_logo: 50px; //SPでの高さサイズ（maxサイズ）<br/>  //グロナビ PC<br/>  $header_bg_color: var(--fo-background-color1); //ナビゲーション全体の背景色<br/>  $navigation_bg_color: $header_bg_color; //グロナビの背景色<br/>  $navigation_font_size: 14px; //グロナビのフォントサイズ（1〜3階層）<br/>  $navigation_font_weight: normal; //グロナビのフォントの太さ（1〜3階層）<br/>  $navigation_hover_opacity: 1; //グロナビをホバーした時の透視度<br/>  $navigation_bg2_color: $navigation_bg_color; //グロナビの背景色（2階層以下）<br/>  $navigation_text_color: #555; //グロナビのテキストカラー<br/>  $navigation_text2_color: $navigation_text_color; //グロナビのテキストカラー（2階層以下）<br/>  $navigation_hover_bg_color: #eee; //グロナビをホバーした時の背景色<br/>  $navigation_hover_bg2_color: #eee; //グロナビをホバーした時の背景色（2階層以下）<br/>  $navigation_hover_text_color: #555; //グロナビをホバーした時のテキストカラー<br/>  $navigation_hover_text2_color: #555; //グロナビをホバーした時のテキストカラー（2階層以下）<br/>  $navigation_arrow1_color: #aaa; //矢印カラー（1階層）<br/>  $navigation_arrow2_color: $navigation_arrow1_color; //矢印カラー（2階層）<br/>  //グロナビ ハンバーガーメニュー<br/>  $navigation_sp_font_size: 14px; //ハンバーガーメニュー（SP）時のテキストサイズ（1〜3階層）<br/>  $navigation_sp_font_weight: normal; //ハンバーガーメニュー（SP）時のテキストの太さ（1〜3階層）<br/>  $navigation_sp_text_color: #555; //ハンバーガーメニュー（SP）時のテキストカラー １階層<br/>  $navigation_sp_text2_color: #555; //ハンバーガーメニュー（SP）時のテキストカラー（2階層）<br/>  $navigation_sp_text3_color: #555; //ハンバーガーメニュー（SP）時のテキストカラー（3階層）<br/>  $navigation_sp_hover_text_color: #555; //ハンバーガーメニュー（SP）時のホバーした時の2階層のテキスト＆矢印のカラー<br/>  $navigation_sp_arrow1_color: #aaa; //ハンバーガーメニュー（SP） 矢印カラー（1階層）<br/>  $navigation_sp_arrow2_color: #aaa; //ハンバーガーメニュー（SP） 矢印カラー（2階層）<br/>  $navigation_sp_bg_color: #eee; //ハンバーガーメニュー（SP）時の背景色（1階層）<br/>  $navigation_sp_bg2_color: #ddd; //ハンバーガーメニュー（SP）時の背景色（２階層）<br/>  $navigation_sp_bg3_color: #ddd; //ハンバーガーメニュー（SP）時の背景色（3階層）<br/>  $navigation_sp_border-bottom: 1px dashed var(--fo-main-color); //ハンバーガーメニュー（SP）時のボーダー（hamburger_custom 使用時）<br/>}</section>\n\n<section class=\"content-element content-10\"></section>"
  },
  {
    "title": "メガメニュー",
    "url": "https://js-part.hmup.jp/js/mega-menu01",
    "html": "<section class=\"content-element content-1\">\n<table>\n<thead>\n<tr>\n<th>追加可能</th>\n<th>変更可能箇所</th>\n<th>NG</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p><strong>■ナビ部分</strong></p>\n<ul>\n<li>ボタン<br/>\n（〜2個まで）※1</li>\n<li>ナビ数<br/>\n（〜5個まで推奨）※1</li>\n<li>検索パーツ</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>ナビ部分とメニュー内の幅・背景色</li>\n<li>\n<p>メニュー内のスクロール有無</p>\n</li>\n<li>セクションに入る仕様範囲のものであれば追加可能<br/>\n（4カラム以上などは✕）</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>スムーズスクロールの<br/>\n    速度変更<br/>\n     </li>\n</ul>\n<p><strong>■メニューに追加NG</strong></p>\n<ul>\n<li>デザインパーツ※2</li>\n</ul>\n<p>（▼自動吐き出しパーツ）※3</p>\n<ul>\n<li>記事リストパーツ</li>\n<li>タグ記事リストパーツ</li>\n<li>タグ一覧パーツ</li>\n<li>カテゴリ一覧パーツ</li>\n<li>記事ランキングパーツ　etc..</li>\n</ul>\n</td>\n<td>×</td>\n<td>◯<br/>\n※4</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：それ以上は、レスポンシブ時に崩れる恐れがあります。<br/>\n※2：一部のデザインパーツ（ボタンやリッチテキストなど）は、CSSを別ページから読み込む構造になっています。そのため、メガメニューを表示するページではそのCSSが反映されず、これらのパーツは正しく表示できません。そのため、<strong>メガメニュー内ではデフォルトパーツのみ使用</strong>できます。<br/>\n※3：自動出力パーツ（記事リスト等）はメガメニュー内では使用できません。（別ページから読み込む構造のため）<br/>\n※4：メガメニュー格納用セクションをクリップボードで配置するイメージになります。<br/>\n   ※メガメニュー内のリンクの設定は「リッチテキストパーツ」「リンクリストパーツ」「ボタンパーツ」のみ使用可能。<br/>\n   ※リッチテキストは操作性が悪いので、頻繁に更新されるのに向きません。ご了承頂いた上で、要引継ぎをお願いします。<br/>\n   　<strong>文言・リンクの変更前にはクリップボードでバックアップを保存すること</strong>をオススメします。<br/>\n   ※<strong>リンク、文言の変更、文字色の変更はリッチテキスト内の文字行を１行ずつドラッグし編集を行うようにしてください。</strong><br/>\n   　複数の文字列をドラッグして選択した状態で編集を行うと、公開画面でメガメニューが崩れる恐れがあります。</p>\n<p><strong>※ページ内アンカーリンクの設置は禁止です。SP時にハンバーガーメニューが崩れます。</strong></p>\n<p> ※テキストパーツのHTMLモードを使用した文言の編集・修正はしないでください。コードの確認、不要なインラインスタイルを削除する、入り込んでしまった不要なデータコードをHTMLモードで削除することは可能です。</p>\n<p>※<strong>メニューリストを作成する際にプレーンテキストをコピペした場合、作成後のメニューリストのHTML構造が「ul &gt; li &gt; div &gt; aになっていることを確認してください。</strong>li &gt; p &gt; aの構造になっていた場合、リスト化を解除した上でもう一度リスト化し　li &gt; div &gt; aに構造が変更されていることを確認してください。 JSがうまくあたらない場合、divが生成されていない可能性があります。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-2\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fafafa\"><h2>内部リンク確認用</h2><ul><li><a href=\"#nav01\">内部リンク①</a></li><li><a href=\"#nav02\">内部リンク②</a></li><li><a href=\"#nav03\">内部リンク③</a></li></ul><ul><li><a href=\"https://js-part.hmup.jp/js/g-navi01#nav03\">外部ページ遷移（疑似ナビ）</a></li><li><a href=\"https://js-part.hmup.jp/js/move-to-hamburger-at-sp#categoryA\">外部ページ遷移（共通ナビ）</a></li></ul><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>\n<p>編集画面用CSSを適切な位置に記述。</p>\n</li>\n<li>JavaScriptを使用したいパーツのセクションの<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。</li>\n</ul>\n<p><strong>①メガメニューを表示させたいページでの設定</strong></p>\n<ol>\n<li>ページ一覧にて、[メガメニューを表示させたいページ]を作成。</li>\n<li>編集画面内の設定から、「ナビゲーションを表示する」のチェックを外す。</li>\n<li>JavaScriptをフッター等に入れる。（※<strong>②メガメニュー編集用ページでの設定</strong>の3の手順が終わってから）</li>\n<li>格納用の空セクションを用意し、クラス名「<strong>js-megaMenu_contents_sec</strong>」を追加。フッター前などに配置する。<br/>\n※このセクションがないとメガメニューが反映されません。</li>\n</ol>\n<p><br/>\n<strong>②メガメニュー編集用ページでの設定</strong></p>\n<ol>\n<li>ページ一覧にて、[メガメニューを表示させたいページ]の下の階層に、[メガメニュー編集用ページ]を新規作成。</li>\n<li>[サイト内検索の検索結果から除外する]と[NOINDEX]にチェックを入れる。</li>\n<li>任意のURLを設定。（例：mega-menu-parts）</li>\n<li><a href=\"#nav03\">コピーしたJavaScript</a>内の、【const megaMenuPartsPath = '/js/mega-menu01-parts';】の'URL部分'を上記で設定したURLに変更する。<br/>\n 例：URLがmega-menu-partsの場合 →【const megaMenuPartsPath = '/mega-menu-parts';】</li>\n<li>編集画面に入り、セクションを新規作成し、<br/>\n クラス名「<strong>js-megaMenu_custom_sec megaMenu_custom_sec fixed</strong>」を追加。<br/>\n ※ナビを固定したくない場合、クラス「<strong>fixed</strong>」は削除してください。</li>\n<li>上記セクション内で行（row）を新規作成し、クラス名「<strong>navigation-cont_row</strong>」を追加。</li>\n<li>上記行（row）を2分割する。<br/>\n 左のカラム（col）にクラス名「<strong>logo_col</strong>」を追加。<br/>\n 右のカラム（col）にクラス名「<strong>cont_col</strong>」を追加。<br/>\n ※ロゴ画像「<strong>logo_img</strong>（デフォルトで準備）」やボタンは必要があれば追加。\n <p>※別ページから読み込んでいるために一部デザインパーツのCSSが効かないので、<strong>デフォルトパーツのみ使用</strong>。</p>\n</li>\n<li>上記「<strong>cont_col</strong>」内にリンクリストを配置し、クラス名「<strong>nav_menu_list</strong>」を追加。<br/>\n →第2階層のリンクを設定。</li>\n<li>上記セクションのすぐ下に新規セクションを作成し、<br/>\n クラス名「<strong>js-megaMenu_down_list_sec megaMenu_down_list_sec</strong>」を追加。</li>\n<li>上記セクション内で、行（row）を新規作成し、クラス名「<strong>js-downMenu_reference_row</strong>」を追加。</li>\n<li>「<strong>js-downMenu_reference_row</strong>」内にリッチテキストを配置し、先程設定した第2階層のメニュー名と合わせる。<br/>\n （リッチテキストにはクラスの追加不要）※仕組みは<a href=\"#structure\">構造図</a>参照</li>\n<li>「<strong>js-downMenu_reference_row</strong>」の下に新規行（row）を作成し、デザインに合わせて通常通りパーツを置く。<br/>\n ※例として、デモでは「<strong>sub_menu_list_row</strong>」を準備。（詳細はCSS参照）必要に応じて活用してください。<br/>\n ※ボックスリンクを設置する場合、デザインパーツではなくデフォルトパーツを使用し、従来のクラス付与の方法（colに「<strong>box_link_col</strong>」、追加ボタンパーツに「<strong>btn_custom_boxlink</strong>」を付与）で設定をお願いします。<br/>\n※別ページから読み込んでいるために一部デザインパーツのCSSが効かないので、<strong>デフォルトパーツのみ使用</strong>。</li>\n<li>第2階層のメニューを表示させたい分だけセクションを用意し、8.〜11.と同じ流れで設定してください。</li>\n</ol>\n<p> </p>\n<p><strong>③検索パーツをメガメニュー内で使用する場合（追加作業）</strong></p>\n<ol>\n<li>[メガメニュー編集用ページ]の共通エリア設定＞共通ヘッダーを使用を「OFF」にする。</li>\n<li>[メガメニュー編集用ページ]の編集画面内で、ヘッダー（MV）・フッター・パンくずリストの表示を「ON」にする。<br/>\n※検索結果画面で表示されるレイアウトは[メガメニュー編集用ページ]のレイアウト設定に依存します。</li>\n<li>フッターにメガメニュー用のJSパーツが埋め込んであることを確認。</li>\n<li>メンビジを格納用セクションにするため、メンビジにクラス名「<strong>js-megaMenu_contents_sec</strong>」を追加。</li>\n<li>検索パーツのスタイルは適宜カスタムCSSで調整。</li>\n</ol>\n<ul>\n<li>​​​​​​新CMSの場合：別ページから読み込んでいるために一部デザインパーツのCSSが効かないので、<strong>デザパは使用禁止です。</strong><strong>デフォルトパーツのみ使用可能です</strong>。<br/>\n rowについても新規作成した方が確実にCSSの影響を受けないので安心かと思います。</li>\n</ul>\n<h2>注意点</h2><ul>\n<li>\n<p><strong>ページ内アンカーリンクの設置は禁止です。SP時にハンバーガーメニューが崩れます。</strong><br/>\n  </p>\n</li>\n<li>\n<p>テキストパーツのHTMLモードを使用した文言の編集・修正はしないでください。コードの確認、不要なインラインスタイルを削除する、入り込んでしまった不要なデータコードをHTMLモードで削除することは可能です。<br/>\n  </p>\n</li>\n<li>\n<p><strong>メニューリストを作成する際にプレーンテキストをコピペした場合、作成後のメニューリストのHTML構造が「ul &gt; li &gt; div &gt; aになっていることを確認してください。</strong>li &gt; p &gt; aの構造になっていた場合、リスト化を解除した上でもう一度リスト化し　li &gt; div &gt; aに構造が変更されていることを確認してください。 JSがうまくあたらない場合、divが生成されていない可能性があります。<br/>\n  </p>\n</li>\n<li>アップセル等でCSSが古い場合があるので、カスタムCSSに「<strong>scroll-behavior: smooth;</strong>」が適用されているか必ず確認して下さい。こちらのスタイルが当たっていないとスムーズスクロールが効きません。<br/>\n  </li>\n<li>SP編集画面で設定した画像はTAB時に反映されません。<br/>\n ※代替案として、【pcOnly/spOnly】で出し分けるなどで対応してください。<br/>\n  </li>\n<li>一部のデザインパーツ（ボタンやリッチテキストなど）は、CSSを別ページから読み込む構造になっています。そのため、メガメニューを表示するページではそのCSSが反映されず、これらのパーツは正しく表示できません。そのため、<strong>メガメニュー内ではデフォルトパーツのみ使用</strong>できます。\n<ol>\n</ol>\n</li>\n</ul>\n</section>\n\n<section class=\"content-element content-4 js-megaMenu_contents_sec\" data-designpart=\"section-empty\" data-designpart-id=\"642f669ce4dc09621d945b2d\"><p><strong>メガメニューを一時的に格納するセクション（消さないでください）</strong></p>\n</section>\n\n<section class=\"content-element content-5\" data-designpart=\"section-tab-nab-v2\" data-designpart-id=\"6822d4806248c1056f815e0a\"><h2>JS・CSS・編集画面用CSS<br/></h2><ul><li><strong>jQuery</strong></li><li><strong>JS</strong></li><li><strong>CSS</strong></li><li><strong>編集画面用CSS</strong></li></ul><p>JavaScript埋め込みパーツを設置し、CDNで読み込んだ最新バージョンのjQueryを反映させます。<br/>※jQueryコンフリクト回避 のため<br/><br/>複数のJSパーツを使用する場合は、こちらの①jQueryの読み込みは一度だけで大丈夫です。</p><a href=\"#\">JSをコピーする</a><p><strong>2024-01更新（v1.0.0）</strong></p>\n&lt;script<br/>  src=\"https://code.jquery.com/jquery-3.6.0.min.js\"<br/>  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"<br/>  crossorigin=\"anonymous\"<br/>&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  'use strict';<br/>  /*--- jQueryコンフリクト回避 v1.0.0---*/<br/>  jQuery.noConflict();<br/><br/>  /*--- この下にJavaScriptを記述していく---*/<br/>&lt;/script&gt;<br/><br/><a href=\"#\">JSをコピーする</a><p><strong>2025-08-15更新（v2.1.0）</strong></p>\n&lt;script&gt;<br/>  /* ---------------------------<br/>    メガメニュー v2.1.0​​​​​<br/>  --------------------------- */<br/>/*--- PC or SP　判定 ---*/<br/>function windowPCorSP() {<br/> if (window.matchMedia('(min-width: 770px)').matches) { <br/>  /* 画面幅が770px以上のときの処理(PC) */<br/>  return 'pc';<br/> } else { <br/>  /* 画面幅が769px以下のときの処理(SP) */<br/>  return 'sp';<br/> }<br/>};<br/> /*--- メガメニュー ---*/<br/>jQuery(function() { <br/>    /*---------------------------------<br/>      初期化 (変数定義やクラス付与) START<br/>    ---------------------------------*/<br/> /* メガメニューのパーツを配置しているURLのパスを指定する (先頭に「/」を入れてください) */<br/> const megaMenuPartsPath = '/js/mega-menu01-parts'; <br/> /* メガメニューを一時的に格納するセクション */<br/> const megaMenuTemporarilyContentsSec = jQuery('.js-megaMenu_contents_sec'); <br/> /* theme-fo-base */<br/> const themeFoBase = jQuery('#fo-base'); <br/> /* メインビジュアル（main-visual） */<br/> const mainVisual = jQuery('.main-visual'); <br/> /*--- 初期化 (変数定義やクラス付与) END ---*/ <br/> /*--- メガメニューを別ページから読み込んで初期機能設定 START ---*/<br/> megaMenuTemporarilyContentsSec.load(`${megaMenuPartsPath} .contents`,<br/>  function() { <br/>        /*---------------------------------<br/>            メガメニューPC時 START<br/>        ---------------------------------*/<br/>   /* ナビゲーションメガメニュー */<br/>   const megaMenuSec = jQuery('.js-megaMenu_custom_sec'); <br/>      /* 固定サイドバー */<br/>        const fixedSide = document.querySelector('.fixed-side');<br/>   /* メガダウンメニュー */<br/>   const megaDownMenuSec = jQuery('.js-megaMenu_down_list_sec'); <br/>   /* メガメニューナビゲーションリンク */<br/>   const nav_menu_link = jQuery('.js-megaMenu_custom_sec .nav_menu_list a'); <br/>   /* ダウンメニューか否か判定用テキスト */<br/>   const downMenu_reference_text = jQuery('.js-downMenu_reference_row p'); <br/>      /* サイドバーがあればクラスを追加 */<br/>      if (fixedSide &amp;&amp; megaMenuSec.length) {<br/>        megaMenuSec.addClass('has-fixed-side');<br/>      }<br/>   /* メガメニュー要素以外のセクションを駆除 */<br/>   jQuery('.js-megaMenu_contents_sec section').not(<br/>    '.js-megaMenu_custom_sec, .js-megaMenu_down_list_sec').css('display',<br/>    'none'); <br/>   /* メガメニューを「#fo-base」の上に配置 */<br/>   megaMenuTemporarilyContentsSec.insertBefore(themeFoBase); <br/>   /* メガメニューを囲んでいる不要なタグを削除 */<br/>   megaMenuSec.unwrap().unwrap(); <br/>   /* JSで「display: none;」を付与して、チラツキ防止用クラスを外す */<br/>   megaDownMenuSec.css('display', 'none'); <br/>   /*--- ダウンメニューか否か判定してクラスを付与 ----*/<br/>   nav_menu_link.each(function(index01, element01) {<br/>    downMenu_reference_text.each(function(index02, element02) {<br/>     if (jQuery(element01).text() === jQuery(element02).text()) { <br/>      /* idを生成 */<br/>      let id = index01 + 101;<br/>      let list = jQuery(element01).parent();<br/>      let downMenu = jQuery(element02).closest(<br/>       '.js-megaMenu_down_list_sec'); <br/>      /* ダウンメニューをリンクリスト内部に移動 */<br/>      downMenu.appendTo(list); <br/>      /* ダウンメニュー用のクラスを付与 */<br/>      list.addClass('downMenu'); <br/>      /* ダウンメニュー用のidをdata属性で付与 */<br/>      list.attr('data-mega-target', `${id}`); <br/>      downMenu.attr('data-mega-id', `${id}`);<br/>     }<br/>    });<br/>   }); <br/>   /* トグルクリック処理 */<br/>   jQuery('.main-megaMenu').on('click', '.toggle_icon', function(e) {<br/>    e.preventDefault();<br/>    const toggle = jQuery(this);<br/>    const li = toggle.closest('li');<br/>    const childUl = li.children('ul').first(); <br/>    /* トグルの開閉 */<br/>    if (childUl.length) {<br/>     childUl.slideToggle(200);<br/>     li.toggleClass('is-open');<br/>    }<br/>   }); <br/>   /* 判定用に使用したテキストを削除 */<br/>   jQuery('.js-downMenu_reference_row').css('display', 'none'); <br/>   /* ダウンメニューのリンクのみを取得 */<br/>   const downMenuLink = jQuery(<br/>    '.js-megaMenu_custom_sec .nav_menu_list .downMenu'); <br/>   /*ダウンメニューをホバーしたときにサブメガメニューを開く */<br/>   downMenuLink.hover(function() { <br/>    /*--- マウスカーソルが重なった時の処理 ---*/ <br/>    /* ホバーしているリンクにクラス付与 */<br/>    jQuery(this).addClass('is-opened');<br/>    let hoverLinkId = jQuery(this).attr('data-mega-target');<br/>    let downMenu = jQuery(`[data-mega-id=\"${hoverLinkId}\"]`);<br/>    downMenu.css('display', '');<br/>   }, function() { <br/>    /*--- マウスカーソルが離れた時の処理 ---*/<br/>    let hoverLinkId = jQuery(this).attr('data-mega-target');<br/>    let downMenu = jQuery(`[data-mega-id=\"${hoverLinkId}\"]`);<br/>    downMenu.css('display', 'none');<br/>    jQuery(this).removeClass('is-opened');<br/>   }); <br/>        /*------------- メガメニューPC時 END -------------*/<br/><br/>        /*---------------------------------<br/>            メガメニューSP時 START<br/>        ---------------------------------*/<br/>   /*--- 変数定義 ---*/ <br/>   /* ハンバーガーメニューボタン */<br/>   const megaMenuTriggerElement = jQuery('&lt;div class=\"megaMenu_trigger\"&gt;' +<br/>    '&lt;span&gt;&lt;/span&gt;' + '&lt;span&gt;&lt;/span&gt;' + '&lt;span&gt;&lt;/span&gt;' + '&lt;/div&gt;');<br/>   const mainMegaMenuElement = jQuery(<br/>    '&lt;nav class=\"main-megaMenu\"&gt;&lt;ul&gt;&lt;/ul&gt;&lt;/nav&gt;');<br/><br/>   function spMegaMenuSetUp() { <br/>    /* ulの構造登録：比較キー生成関数 */<br/>    function getStructureKey(ul) {<br/>     const items = [];<br/>     ul.find('&gt; li').each(function() {<br/>      const li = jQuery(this);<br/>      const anchor = li.find('&gt; p &gt; a, &gt; a, a').first();<br/>      const linkText = anchor.text().trim();<br/>      const href = anchor.attr('href') || '';<br/>      const childUl = li.children('ul');<br/>      let childKey = '';<br/>      if (childUl.length) {<br/>       childKey = getStructureKey(childUl);<br/>      }<br/>      items.push(`${linkText}::${href}${childKey ? ` ($ {<br/>        childKey<br/>       })<br/>       ` : ''}`);<br/>     });<br/>     return items.join('|');<br/>    } <br/>    /* ハンバーガメニューを挿入＆削除 */<br/>    if (windowPCorSP() === 'sp' &amp;&amp; !jQuery('.megaMenu_trigger').length) { <br/>     /*--- 画面幅SPのとき ---*/ <br/>     /* ハンバーガーメニューボタンとメインメニューを追加 */<br/>     megaMenuTriggerElement.appendTo('.js-megaMenu_custom_sec &gt; .inner').ready(<br/>      function() {<br/>       mainMegaMenuElement.insertAfter('.megaMenu_trigger');<br/>       const megaMenuTrigger = jQuery('.megaMenu_trigger');<br/>       const mainMegaMenu = jQuery('.main-megaMenu');<br/>       mainMegaMenu.css('display', 'none'); <br/>       /* メインメニューにメニュー項目を追加 */<br/>       nav_menu_link.each(function() {<br/>        const parentLi = jQuery(this).parent('li');<br/>        const newText = parentLi.text().trim();<br/>        const newDataTarget = parentLi.attr('data-mega-target');<br/>        const exists = jQuery('.main-megaMenu &gt; ul &gt; li').filter(function() {<br/>         const existingText = jQuery(this).text().trim();<br/>         const existingDataTarget = jQuery(this).attr(<br/>          'data-mega-target');<br/>         return existingText === newText &amp;&amp; existingDataTarget ===<br/>          newDataTarget;<br/>        }).length &gt; 0;<br/>        if (!exists) {<br/>         const clonedLi = parentLi.clone(true, true);<br/>         clonedLi.appendTo('.main-megaMenu &gt; ul');<br/>        }<br/>       }); <br/>       /* メニューの下層（プルダウン）要素を追加する */ <br/>       /* 1階層目のメニューを取得 */<br/>       const level01 = jQuery('.main-megaMenu &gt; ul &gt; li');<br/>       level01.addClass('js-level-01');<br/>       level01.each(function(index01, element01) {<br/>        let id = jQuery(element01).attr('data-mega-target');<br/>        let section = jQuery(<br/>         `.main-megaMenu .js-megaMenu_down_list_sec[data-mega-id=\"${id}\"]`<br/>        ); <br/>        /* ボタンパーツの場合 */<br/>        let buttonLink = section.find('.button a').clone();<br/>        let buttonLinkList = buttonLink.removeClass().addClass(<br/>         'wrap-item');<br/>        if (buttonLink.length) {<br/>         buttonLinkList.appendTo(jQuery(element01));<br/>        } <br/>        /* リッチテキストもしくはリンクリストの場合 */ <br/>        /*--- ulをグループID＋構造キーで重複チェックして追加 ---*/<br/>        const addedStructureKeys = new Set(); <br/>        /* 重複防止用キー */<br/>        section.find('.component.richtext, .component.list').each(<br/>         function(groupIndex) {<br/>          const comp = jQuery(this);<br/>          const ul = comp.find('ul').first();<br/>          if (!ul.length) return;<br/>          const groupID = `${id}-${groupIndex}`;<br/>          const structureKey = getStructureKey(ul);<br/>          if (!addedStructureKeys.has(structureKey)) {<br/>           const clonedUl = ul.clone(true, true);<br/>           clonedUl.attr('data-group-id', groupID);<br/>           clonedUl.appendTo(jQuery(element01));<br/>           addedStructureKeys.add(structureKey);<br/>          }<br/>         });<br/>        section.remove(); <br/>        /* 各ループ内で削除処理 */<br/>       });<br/>       jQuery('.main-megaMenu .js-megaMenu_down_list_sec').css('display',<br/>        'none');<br/>       jQuery('.wrap-item').wrap('&lt;li class=\"js-level-02\"&gt;');<br/>       jQuery('.wrap-item').removeAttr('class');<br/>       level01.each(function(index, element) {<br/>        let target = jQuery(element).find('.js-level-02');<br/>        target.wrapAll('&lt;ul class=\"js-level-01-cont\"&gt;');<br/>       }); <br/>       /* 1階層目 */<br/>       const level01List = jQuery('.main-megaMenu &gt; ul &gt; li');<br/>       const level02List = jQuery('.main-megaMenu &gt; ul &gt; li &gt; ul &gt; li');<br/>       const level03List = jQuery(<br/>        '.main-megaMenu &gt; ul &gt; li &gt; ul &gt; li &gt; ul &gt; li');<br/>       const level04List = jQuery(<br/>        '.main-megaMenu &gt; ul &gt; li &gt; ul &gt; li &gt; ul &gt; li &gt; ul &gt; li');<br/>       level01List.addClass('js-level-01');<br/>       level02List.addClass('js-level-02');<br/>       level03List.addClass('js-level-03');<br/>       level04List.addClass('js-level-04');<br/>       level02List.closest('ul').addClass('js-level-01-cont');<br/>       level03List.closest('ul').addClass('js-level-02-cont');<br/>       level04List.closest('ul').addClass('js-level-03-cont'); <br/>       /* トグルアイコンを追加 */<br/>       jQuery('.main-megaMenu li').each(function() {<br/>        const li = jQuery(this);<br/>        const childUl = li.children('ul');<br/>        if (childUl.length) { <br/>         /* li の直下のaまたはp、aまたは&lt;strong&gt;&lt;a&gt;を探す */<br/>         let anchor = li.children('a, p &gt; a, strong &gt; a').first(); <br/>         /* 見つからない場合、liの中のaを最初に取得 */<br/>         if (!anchor.length) {<br/>          anchor = li.find('a').first();<br/>         } <br/>         /* toggle_iconが含まれていなければ追加 */<br/>         if (anchor.length &amp;&amp; anchor.find('.toggle_icon').length === 0) {<br/>          anchor.append('&lt;span class=\"toggle_icon\"&gt;&lt;/span&gt;');<br/>         }<br/>        }<br/>       }); <br/>       jQuery('.main-megaMenu .downMenu &gt; a').each(function() {<br/>        if (jQuery(this).find('.toggle_icon').length === 0) {<br/>         jQuery(this).append('&lt;span class=\"toggle_icon\"&gt;&lt;/span&gt;');<br/>        }<br/>       }); <br/>       /* ハンバーガーメニューにクリックイベントを付与 */<br/>       megaMenuTrigger.on('click', function() {<br/>        megaMenuTrigger.toggleClass('is-active');<br/>        mainMegaMenu.toggleClass('is-active');<br/>        mainMegaMenu.toggle();<br/>        jQuery('html').toggleClass('is-locked');<br/>        megaMenuSec.toggleClass('is-open');<br/>       }); <br/>       /* トグル初期化用：すべて非表示にする */<br/>       jQuery('.main-megaMenu li ul').css('display', 'none');<br/>      });<br/>    } else if (windowPCorSP() === 'pc') { <br/>     /*--- 画面幅PCのとき ---*/ <br/>     /* ハンバーガメニューボタンとメインメニューを削除 */<br/>     jQuery('.megaMenu_trigger').removeClass('is-active');<br/>     jQuery('.main-megaMenu').removeClass('is-active');<br/>     jQuery('.megaMenu_trigger').css('display', 'none');<br/>     jQuery('.main-megaMenu ul li').css('display', 'none');<br/>     jQuery('.main-megaMenu').css('display', 'none');<br/>     jQuery('.downMenu a .toggle_icon').css('display', 'none'); <br/>     /* ハンバーガメニューが開いてるときのクラス名を削除 */<br/>     jQuery('html').removeClass('is-locked');<br/>     jQuery('is-open').removeClass('is-open');<br/>    }<br/>   }; <br/>      /*------------- メガメニューSP時 END -------------*/<br/><br/>      /*--- ウィンドウのリサイズ完了後の処理 ---*/<br/>   const windowResize = () =&gt; {<br/>    let timer = 0;<br/>    let delay = 100;<br/>    window.addEventListener('resize', () =&gt; {<br/>     clearTimeout(timer);<br/>     timer = setTimeout(() =&gt; {<br/>      spMegaMenuSetUp();<br/>     }, delay);<br/>    }, false);<br/>   };<br/>   spMegaMenuSetUp();<br/>   windowResize();<br/>  }); <br/>  /*------------- メガメニューを別ページから読み込んで初期機能設定 END -------------*/<br/>}); <br/>/* SPメニューのトグル処理（再定義） */<br/>jQuery(document).off('click', '.main-megaMenu .toggle_icon').on('click',<br/> '.main-megaMenu .toggle_icon',<br/> function(e) {<br/>  e.preventDefault();<br/>  const li = jQuery(this).closest('li');<br/>  const targetUl = li.children('ul');<br/>  if (targetUl.length) {<br/>   targetUl.stop(true, true).slideToggle(200);<br/>   li.toggleClass('is-open');<br/>   jQuery(this).toggleClass('is-open');<br/>  }<br/> }); <br/>/*--- ページ内遷移ずれる対策 ---*/<br/>window.addEventListener('load', () =&gt; {<br/> setTimeout(() =&gt; {<br/>  const headerSec = document.querySelector('.js-megaMenu_custom_sec'); <br/>  /* メガメニューを取得 */<br/>  if (headerSec) {<br/>   const headerHeight = headerSec.offsetHeight; <br/>   /* メガメニューの高さを取得 */ <br/>   /* 固定ナビの場合の処理 */<br/>   if (headerSec.classList.contains('fixed')) {<br/>    document.documentElement.style.setProperty('--navi-height',<br/>     `${headerHeight}px`);<br/>   }<br/>  }<br/> }, 300);<br/>}); <br/>  /*--- ページ内遷移ずれる対策 END ---*/<br/>  /* ---------------------------<br/>    メガメニュー END<br/>  --------------------------- */<br/>&lt;/script&gt;<br/><br/><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p><p>※新旧どちらにも対応できるようにデフォルトでは固定値で設定しているため、必要に応じて変数を設定してください。</p><a href=\"#\">CSSをコピーする</a><p><strong>2025-08-15更新（v2.1.0）</strong></p>\n/*----- メガメニュー（1段） START v2.1.0 -----*/<br/>/* --------------------------------<br/>    variables（変数）<br/>----------------------------------- */<br/>$mega-navigation_bg_color: #fff; //メガメニューの背景色<br/>$mega-navigation_font_size: 14px; //メガメニューのフォントサイズ（1〜3階層）<br/>$mega-navigation_font_weight: bold; //メガメニューのフォントの太さ（1〜3階層） normal or bold<br/>$mega-navigation_hover_opacity: 1; //メガメニューをホバーした時の透視度<br/>$mega-navigation_bg2_color: #ffad2f; //メガメニューの背景色（2階層以下）<br/>$mega-navigation_text_color: #2d2d2d; //メガメニューのテキストカラー<br/>$mega-navigation_hover_text_color: #ffad2f; //メガメニューをホバーした時のテキストカラー<br/>$mega-navigation_text2_color: #fff; //メガメニューのテキストカラー（2階層以下）<br/><br/>//メガメニュー（1段） ハンバーガーメニュー<br/>$mega-navigation_sp_font_size: 14px; //メガメニュー（SP）時のテキストサイズ（1〜3階層）<br/>$mega-navigation_sp_font_weight: bold; //メガメニュー（SP）時のテキストの太さ（1〜3階層） normal or bold<br/>$mega-navigation_sp_text_color: $mega-navigation_text2_color; //メガメニュー（SP）時のテキストカラー １階層<br/>$mega-navigation_sp_text2_color: $mega-navigation_sp_text_color; //メガメニュー（SP）時のテキストカラー（2階層）<br/>$mega-navigation_sp_text3_color: $mega-navigation_sp_text_color; //メガメニュー（SP）時のテキストカラー（3階層）<br/>$mega-navigation_sp_hover_text_color: #ffad2f; //メガメニュー（SP）時のホバーした時の2階層のテキスト＆矢印のカラー<br/>$mega-navigation_sp_arrow1_color: $mega-navigation_sp_text_color; //メガメニュー（SP） 矢印カラー（1階層）<br/>$mega-navigation_sp_arrow2_color: $mega-navigation_sp_text2_color; //メガメニュー（SP） 矢印カラー（2階層）<br/>$mega-navigation_sp_bg_color: #fff; //メガメニュー（SP）時の背景色（1階層）<br/>$mega-navigation_sp_bg2_color: $mega-navigation_bg_color; //メガメニュー（SP）時の背景色（２階層）<br/>$mega-navigation_sp_bg3_color: #eee; //メガメニュー（SP）時の背景色（3階層）<br/>$mega-navigation_sp_border-bottom: 1px dashed #ffad2f; //メガメニュー（SP）時のボーダー（hamburger_custom 使用時）<br/>/*------------- variables（変数）END -------------*/<br/><br/>//初期読み込み時に格納セクションが一瞬見えてしまう（チラつき）防止<br/>.js-megaMenu_contents_sec {<br/>  display: none !important;<br/>}<br/>//固定サイドバー対策<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;.js-megaMenu_custom_sec {<br/>    &amp;.has-fixed-side {<br/>      @media screen and (min-width: 1201px) {<br/>        width: calc(100% - 420px);<br/>      }<br/>    }<br/>  }<br/>}<br/>/* SP時 iOSのアドレスバーズレ防止 */<br/>html {<br/>  &amp;.is-locked {<br/>    overflow: hidden;<br/>    -ms-touch-action: none;<br/>    touch-action: none;<br/>    &amp;::before {<br/>      content: '';<br/>      position: fixed;<br/>      z-index: 5;<br/>      top: 0;<br/>      left: 0;<br/>      width: 100vw;<br/>      height: 100vh;<br/>      background-color: #ffad2f;<br/>    }<br/>  }<br/>}<br/><br/>/*-- メガメニュー（1段） 共通設定 --*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;:is(<br/>    .megaMenu_custom_sec,<br/>    .megaMenu_down_list_sec,<br/>  ) * {<br/>    box-sizing: border-box;<br/>  }<br/>}<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;:where(<br/>    .megaMenu_custom_sec,<br/>    .megaMenu_down_list_sec<br/>   ) {<br/>    width: 100%;<br/>    font-family: 'Noto Sans JP', sans-serif;//適宜変更<br/>    line-height: 1.5;//適宜変更<br/>    letter-spacing: .04em;//適宜変更<br/>    .inner {<br/>      width: 100% !important;<br/>      max-width: 100% !important;<br/>      margin: auto;<br/>      .row {<br/>        .col {<br/>          .component {<br/>            margin: 10px 0;<br/>            a {<br/>              text-decoration: none;<br/>              &amp;:hover {<br/>                opacity: $hover_opacity;<br/>              }<br/>            }<br/>            // CTA共通<br/>            &amp;.cta {<br/>              margin: 0;<br/>              .cta-row {<br/>                display: table;<br/>                table-layout: fixed;<br/>                width: 100%;<br/>                margin: 0;<br/>                @include breakpoint-sp {<br/>                  display: block;<br/>                }<br/>                &amp; + .cta-row {<br/>                  @include breakpoint-pc {<br/>                    padding-top: 10px;<br/>                  }<br/>                }<br/>                .cta-column {<br/>                  display: table-cell;<br/>                  vertical-align: top;<br/>                  margin: 0;<br/>                  @include breakpoint-sp {<br/>                    display: block;<br/>                    width: 100% !important;<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- メガメニュー（1段） 共通設定 END--*/<br/><br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  /*-- メガメニュー（1段） ナビ部分 --*/<br/>  &amp;.megaMenu_custom_sec {<br/>    background: $mega-navigation_bg_color;<br/>    box-shadow: $navigation_box_shadow_common;<br/>    position: relative;<br/>    z-index: 10;<br/>    padding: 0;<br/>    // オプション ナビゲーション上部固定のとき<br/>    &amp;.fixed {<br/>      position: sticky;<br/>      z-index: 1001;<br/>      top: 0;<br/>    }<br/>    &amp;.is-open {<br/>      @include breakpoint-sp {<br/>        box-shadow: none;<br/>      }<br/>    }<br/>    .inner {<br/>      .row {<br/>        &amp;.navigation-cont_row {<br/>          display: flex;<br/>          justify-content: space-between;<br/>          align-items: center;<br/>          padding: 5px 20px;<br/>          @include breakpoint-sp {<br/>            min-height: 51px;<br/>            padding: 0;<br/>          }<br/>          .col {<br/>            padding: 0;<br/>            &amp;.logo_col {<br/>              display: flex !important;<br/>              align-items: center;<br/>              justify-content: flex-start;<br/>              width: auto !important;<br/>              @include breakpoint-sp {<br/>                padding: 0 0 0 10px;<br/>              }<br/>              .component {<br/>                margin: 0;<br/>                &amp;.image {<br/>                  &amp;.logo_img {<br/>                    max-width: $header_logo;<br/>                    img {<br/>                      @include breakpoint-pc {<br/>                        max-height: 56px;//ナビhover時の上矢印▲の位置ズレ対策<br/>                      }<br/>                      @include breakpoint-sp {<br/>                        max-height: $header_sp_logo;<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>            &amp;.cont_col {<br/>              display: flex !important;<br/>              align-items: center;<br/>              justify-content: flex-end;<br/>              width: auto !important;<br/>              @include breakpoint-sp {<br/>                padding: 0 60px 0 0;<br/>              }<br/>              .component {<br/>                margin: 0;<br/>                &amp;.list {<br/>                  &amp;.nav_menu_list {<br/>                    height: 100%;<br/>                    @include breakpoint-sp {<br/>                      display: none !important;<br/>                    }<br/>                    &gt; ul {<br/>                      display: flex;<br/>                      height: 100%;<br/>                      &gt; li {<br/>                        display: block;<br/>                        margin: 0;<br/>                        padding: 0;<br/>                        font-size: $mega-navigation_font_size;<br/>                        color: $mega-navigation_text_color;<br/>                        &amp;.downMenu {<br/>                          &gt; a {<br/>                            position: relative;<br/>                            &amp;::after {<br/>                              content: \"\\f0d7\";<br/>                              font-family: $font_family_awsm6;<br/>                              margin-left: 5px;<br/>                              font-size: 16px;<br/>                              font-weight: 900;<br/>                              line-height: 1;<br/>                              color: $mega-navigation_text_color;<br/>                            }<br/>                          }<br/>                          &amp;.is-opened {<br/>                            &gt; a {<br/>                              &amp;::before {<br/>                                content: '';<br/>                                position: absolute;<br/>                                left: calc(50% - 3px);<br/>                                bottom: -5px;<br/>                                width: 0;<br/>                                height: 0;<br/>                                border-style: solid;<br/>                                border-width: 0 15px 15px 15px;<br/>                                border-color: transparent transparent #ffad2f transparent;<br/>                                transform: translateX(-50%);<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                        &gt; a {<br/>                          display: flex;<br/>                          align-items: center;<br/>                          height: 100%;<br/>                          padding: 20px 10px;<br/>                          text-decoration: none;<br/>                          font-weight: $mega-navigation_font_weight;<br/>                          line-height: 1.2;<br/>                          color: $mega-navigation_text_color;<br/>                          &amp;:hover {<br/>                            color: $mega-navigation_hover_text_color;<br/>                            opacity: $mega-navigation_hover_opacity;<br/>                            &amp;::before,<br/>                            &amp;::after {<br/>                              color: $mega-navigation_hover_text_color;<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>                &amp;.button {<br/>                  margin-left: 10px;<br/>                  @include breakpoint-sp {<br/>                    margin: 0;<br/>                  }<br/>                  .button-cont {<br/>                    a {<br/>                      &amp;:is(.size-s, .size-m, .size-l) {<br/>                        @include breakpoint-msp {<br/>                          min-width: initial;<br/>                          background: none;<br/>                          border: none;<br/>                          border-radius: 0;<br/>                          font-size: 0;<br/>                          padding: 5px;<br/>                        }<br/>                        &amp;::before {<br/>                          @include breakpoint-msp {<br/>                            font-size: 22px;<br/>                            color: #ffad2f;<br/>                            margin: 0;<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>      // ハンバーガーメニュー<br/>      .megaMenu_trigger {<br/>        cursor: pointer;<br/>        width: 60px;<br/>        height: 51px;<br/>        position: absolute;<br/>        right: 0;<br/>        top: 0;<br/>        background: #ffad2f;<br/>        span {<br/>          display: inline-block;<br/>          width: 30px;<br/>          height: 3px;<br/>          border-radius: 3px;<br/>          background: #fff;<br/>          position: absolute;<br/>          left: 50%;<br/>          transform: translateX(-50%);<br/>          transition: all .4s;<br/>          &amp;:nth-child(1) {<br/>            top: 15px;<br/>          }<br/>          &amp;:nth-child(2) {<br/>            top: 24px;<br/>          }<br/>          &amp;:nth-child(3) {<br/>            bottom: 15px;<br/>          }<br/>        }<br/>        /* ハンバーガメニュー オープン時 */<br/>        &amp;.is-active {<br/>          span {<br/>            &amp;:nth-child(1) {<br/>              -webkit-transform: translateY(10px) translateX(-50%) rotate(-45deg);<br/>              transform: translateY(10px) translateX(-50%) rotate(-45deg);<br/>            }<br/>            &amp;:nth-child(2) {<br/>              opacity: 0;<br/>            }<br/>            &amp;:nth-child(3) {<br/>              -webkit-transform: translateY(-8px) translateX(-50%) rotate(45deg);<br/>              transform: translateY(-8px) translateX(-50%) rotate(45deg);<br/>            }<br/>          }<br/>        }<br/>      }<br/>      // メインメガメニュー（1段） PC時 {<br/>      @include breakpoint-pc {<br/>        .main-megaMenu {<br/>          display: none;<br/>        }<br/>      }<br/>      // メインメガメニュー（1段） SP時<br/>      @include breakpoint-sp {<br/>        .main-megaMenu {<br/>          height: calc(100vh + 100px);<br/>          overflow: auto;<br/>          font-family: 'Noto Sans JP', sans-serif;//適宜変更<br/>          background: #ffad2f;<br/>          padding: 20px 0 250px;<br/>          ul {<br/>            li {<br/>              a {<br/>                display: block;<br/>                position: relative;<br/>                padding: 20px;<br/>                text-decoration: none;<br/>                font-size: $mega-navigation_sp_font_size;<br/>                font-weight: $mega-navigation_sp_font_weight;<br/>                line-height: 1.2;<br/>                color: $mega-navigation_sp_text_color;<br/>                span {<br/>                  font-weight: inherit;<br/>                }<br/>              }<br/>              /* 2階層目トリガー */<br/>              &amp;.downMenu {<br/>                a {<br/>                  padding: 20px 45px 20px 20px;<br/>                  .toggle_icon {<br/>                    display: flex;<br/>                    align-items: center;<br/>                    justify-content: center;<br/>                    position: absolute;<br/>                    top: 50%;<br/>                    right: 0;<br/>                    width: 50px;<br/>                    height: 45px;<br/>                    transform: translateY(-50%);<br/>                    &amp;::before,<br/>                    &amp;::after {<br/>                      background-color: $mega-navigation_sp_arrow1_color;<br/>                    }<br/>                    &amp;::before {<br/>                      content: '';<br/>                      width: 2px;<br/>                      height: 18px;<br/>                      transform: rotate(0);<br/>                      -webkit-transform: rotate(0);<br/>                      z-index: 1;<br/>                      transition: all .5s ease;<br/>                    }<br/>                    &amp;::after {<br/>                      content: '';<br/>                      position: relative;<br/>                      right: 2px;<br/>                      width: 2px;<br/>                      height: 18px;<br/>                      transform: rotate(90deg);<br/>                      -webkit-transform: rotate(90deg);<br/>                      transition: all .5s ease;<br/>                    }<br/>                    &amp;.is-open {<br/>                      &amp;::before {<br/>                        transform: rotate(90deg);<br/>                        -webkit-transform: rotate(90deg);<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>              ul {<br/>                &amp;.js-level-01-cont {<br/>                  position: relative;<br/>                  &amp;:first-of-type {<br/>                    &amp;::before {<br/>                      content: '';<br/>                      position: absolute;<br/>                      left: 50%;<br/>                      top: 0;<br/>                      width: calc(100% - 33px);<br/>                      height: 0.1rem;<br/>                      transform: translateX(-50%);<br/>                      background: #fff;<br/>                    }<br/>                  }<br/>                }<br/>                &amp;:first-of-type {<br/>                  padding: 5px 0 0;<br/>                }<br/>                &amp;:last-of-type {<br/>                  padding: 0 0 5px;<br/>                }<br/>                .js-level-02 {<br/>                  a {<br/>                    padding: 15px 30px 15px calc(20px + 1em);<br/>                  }<br/>                  .js-level-03 {<br/>                    a {<br/>                      padding: 15px 30px 15px calc(20px + 2em);<br/>                    }<br/>                    .js-level-04 {<br/>                      a {<br/>                        padding: 15px 30px 15px calc(20px + 3em);<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>  /*-- メガメニュー（1段） メニュー内 --*/<br/>  &amp;.megaMenu_down_list_sec {<br/>    background: $mega-navigation_bg2_color;<br/>    color: $mega-navigation_text2_color;<br/>    position: absolute;<br/>    top: 100%;<br/>    left: 0;<br/>    z-index: 1;<br/>    padding: 20px 0;<br/>    .inner {<br/>      padding: 20px;<br/>      .row {<br/>        // 以下、メニュー内のデザインに合わせて適宜変更（不要であれば削除）<br/>        &amp;.sub_menu_list_row {<br/>          display: flex;<br/>          gap: 20px;<br/>          &amp; + .sub_menu_list_row {<br/>            margin-top: 30px;<br/>          }<br/>          .col {<br/>            padding: 0;<br/>            .component {<br/>              &amp;.richtext {<br/>                // メニュー内タイトル部分<br/>                &amp;.sub_menu_title_text {<br/>                  margin-bottom: 10px;<br/>                }<br/>                // [お知らせ]リスト<br/>                &amp;.megaMenu_list01 {<br/>                  ul {<br/>                    display: flex;<br/>                    flex-direction: column;<br/>                    margin: 0;<br/>                    li {<br/>                      display: block;<br/>                      margin: 0;<br/>                      padding: 0;<br/>                      font-size: 16px;<br/>                      a {<br/>                        display: block;<br/>                        padding: 10px 0;<br/>                        border-bottom: 1px solid #fff;<br/>                        text-decoration: none;<br/>                        color: #fff;<br/>                        &amp;:hover {<br/>                          opacity: $hover_opacity;<br/>                        }<br/>                      }<br/>                      ul {<br/>                        margin: 0 0 0 10px !important;<br/>                        li {<br/>                          font-size: 14px;<br/>                          a {<br/>                            border: none;<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                  /* 1階層目 */<br/>                  &gt; ul {<br/>                    margin: 0;<br/>                    &gt; li {<br/>                      &amp; + li {<br/>                        margin-top: 10px;<br/>                      }<br/>                      /* 2階層目 */<br/>                      &gt; ul {<br/>                        padding: 5px 0;<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>              &amp;.list {<br/>                // [お知らせ]リスト<br/>                &amp;.megaMenu_list02 {<br/>                  ul {<br/>                    display: flex;<br/>                    flex-direction: column;<br/>                    li {<br/>                      display: block;<br/>                      margin: 0;<br/>                      padding: 0;<br/>                      font-size: 16px;<br/>                      a {<br/>                        display: block;<br/>                        padding: 10px 0;<br/>                        text-decoration: none;<br/>                        font-weight: bold;<br/>                        color: #fff;<br/>                        &amp;:hover {<br/>                          opacity: $hover_opacity;<br/>                          background: none;<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>        .col {<br/>          // ボックスリンク用<br/>          &amp;.box_link_col {<br/>            position: relative;<br/>            &amp;:hover {<br/>              opacity: $hover_opacity;<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- メガメニュー（1段） END -----*/<p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p><a href=\"#\">CSSをコピーする</a><p><strong>2024-01-11更新（v1.0.0）</strong></p>\n/*-- メガメニュー（1段） 編集画面用 START v1.0.0​​​​​--*/<br/>  //初期読み込み時に格納セクションが一瞬見えてしまう（チラつき）防止<br/>  .js-megaMenu_contents_sec {<br/>    display: block !important;<br/>    border: 1px solid #f00;<br/>    &amp;::before {<br/>      content: \"メガメニュー格納セクション\";<br/>      position: absolute;<br/>      color: #fff;<br/>      background: #f00;<br/>      padding: 5px 5px;<br/>      right: 0;<br/>      top: -24px;<br/>      font-size: 14px;<br/>      line-height: 1;<br/>    }<br/>  }<br/>  .theme-fo-base .wrapper .contents {<br/>    :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>      &amp;.megaMenu_custom_sec {<br/>        padding: 20px 0 !important;<br/>        .inner {<br/>          max-width: 1100px !important;<br/>          padding: 0 20px !important;<br/>          .row {<br/>            &amp;.navigation-cont_row {<br/>              .col {<br/>                &amp;.logo_col {<br/>                  width: 20% !important;<br/>                }<br/>                &amp;.cont_col {<br/>                  width: 80% !important;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>        &amp;.fixed {<br/>          position: relative;<br/>          top: initial;<br/>          border: 1px solid blue;<br/>          &amp;::before {<br/>            content: \"メガメニュー上部固定中（クラス名：fixed） ※固定を外したい場合はこのクラスを外す。\";<br/>            position: absolute;<br/>            color: #fff;<br/>            background: blue;<br/>            padding: 0 5px;<br/>            right: 0;<br/>            top: -24px;<br/>          }<br/>        }<br/>      }<br/>      &amp;.megaMenu_down_list_sec {<br/>        position: relative;<br/>        top: initial;<br/>        left: initial;<br/>        .inner {<br/>          .row {<br/>            // メガメニューでドロップダウンメニューがついているリンクかどうか判定するためのrow<br/>            &amp;.js-downMenu_reference_row {<br/>              border: 1px solid red;<br/>              background: #000;<br/>              &amp;::before {<br/>                content: \"ナビゲーションのメニュー名と同じものを入れてください。（どのメニューに対応するか判定用。公開画面では非表示の行になります。）\";<br/>                position: absolute;<br/>                color: #fff;<br/>                background: red;<br/>                padding: 5px 5px;<br/>                right: 0;<br/>                top: -24px;<br/>                font-size: 14px;<br/>                line-height: 1;<br/>              }<br/>              .col {<br/>                padding: 10px 20px;<br/>                .component {<br/>                  color: #fff;<br/>                  &amp;.heading {<br/>                    :is(h2, h3) {<br/>                      margin: 0;<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>/*-- メガメニュー（1段） 編集画面用 END --*/</section>\n\n<section class=\"content-element content-6\" data-designpart=\"section-tab-nab-v2\" data-designpart-id=\"6822d4806248c1056f815e0a\" style=\"background-color:#fbf9ef\"><h2>旧リッチテキストパーツ用<br/>JS・CSS・編集画面用CSS<br/></h2><p><strong>【旧リッチテキストパーツ】で組み込みが必要な場合にお使いください。</strong></p><ul><li><strong>jQuery</strong></li><li><strong>JS</strong></li><li><strong>CSS</strong></li><li><strong>編集画面用CSS</strong></li></ul><p>JavaScript埋め込みパーツを設置し、CDNで読み込んだ最新バージョンのjQueryを反映させます。<br/>※jQueryコンフリクト回避 のため<br/><br/>複数のJSパーツを使用する場合は、こちらの①jQueryの読み込みは一度だけで大丈夫です。</p><a href=\"#\">JSをコピーする</a><p><strong>2024-01更新（v1.0.0）</strong></p>\n&lt;script<br/>  src=\"https://code.jquery.com/jquery-3.6.0.min.js\"<br/>  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"<br/>  crossorigin=\"anonymous\"<br/>&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  'use strict';<br/>  /*--- jQueryコンフリクト回避 v1.0.0---*/<br/>  jQuery.noConflict();<br/><br/>  /*--- この下にJavaScriptを記述していく---*/<br/>&lt;/script&gt;<br/><br/><p>jQueryの下に新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p><a href=\"#\">JSをコピーする</a><p><strong>2025-08-15更新（v1.1.0）</strong></p>\n&lt;script&gt;<br/>  /* ---------------------------<br/>    メガメニュー（1段）v1.1.0​​​​​<br/>  --------------------------- */<br/>  /*--- PC or SP　判定 ---*/<br/>  function windowPCorSP() {<br/>    if (window.matchMedia('(min-width: 770px)').matches) {<br/>      /* 画面幅が770px以上のときの処理(PC) */<br/>      return 'pc';<br/>    } else {<br/>      /* 画面幅が769px以下のときの処理(SP) */<br/>      return 'sp';<br/>    }<br/>  };<br/><br/>  /*--- メガメニュー（1段） ---*/<br/>  jQuery(function () {<br/>    /*---------------------------------<br/>      初期化 (変数定義やクラス付与) START<br/>    ---------------------------------*/<br/>    /* メガメニューのパーツを配置しているURLのパスを指定する (先頭に「/」を入れてください) */<br/>    const megaMenuPartsPath = '/js/mega-menu01-parts';<br/>    /* メガメニューを一時的に格納するセクション */<br/>    const megaMenuTemporarilyContentsSec = jQuery('.js-megaMenu_contents_sec');<br/>    /* theme-fo-base */<br/>    const themeFoBase = jQuery('#fo-base');<br/>    /* メインビジュアル（main-visual） */<br/>    const mainVisual = jQuery('.main-visual');<br/>    /*------------- 初期化 (変数定義やクラス付与) END -------------*/<br/><br/>    /*------------- メガメニューを別ページから読み込んで初期機能設定 START -------------*/<br/>    megaMenuTemporarilyContentsSec.load(`${megaMenuPartsPath} .contents`, function() {<br/><br/>      /*---------------------------------<br/>        メガメニューPC時 START<br/>      ---------------------------------*/<br/>      /* ナビゲーションメガメニュー */<br/>      const megaMenuSec = jQuery('.js-megaMenu_custom_sec');<br/>      /* 固定サイドバー */<br/>      const fixedSide = document.querySelector('.fixed-side');<br/>      /* メガダウンメニュー */<br/>      const megaDownMenuSec = jQuery('.js-megaMenu_down_list_sec');<br/>      /* メガメニューナビゲーションリンク */<br/>      const nav_menu_link = jQuery('.js-megaMenu_custom_sec .nav_menu_list a');<br/>      /* ダウンメニューか否か判定用テキスト */<br/>      const downMenu_reference_text = jQuery('.js-downMenu_reference_row p');<br/>      /* サイドバーがあればクラスを追加 */<br/>      if (fixedSide &amp;&amp; megaMenuSec.length) {<br/>        megaMenuSec.addClass('has-fixed-side');<br/>      }<br/>      /* メガメニュー要素以外のセクションを駆除 */<br/>      jQuery('.js-megaMenu_contents_sec section').not('.js-megaMenu_custom_sec, .js-megaMenu_down_list_sec').css('display','none');<br/>      /* メガメニューを「#fo-base」の上に配置 */<br/>      megaMenuTemporarilyContentsSec.insertBefore(themeFoBase);<br/>      /* メガメニューを囲んでいる不要なタグを削除 */<br/>      megaMenuSec.unwrap().unwrap();<br/>      /* JSで「display: none;」を付与して、チラツキ防止用クラスを外す */<br/>      megaDownMenuSec.css('display', 'none');<br/><br/>      /*--- ダウンメニューか否か判定してクラスを付与 ----*/<br/>      nav_menu_link.each(function(index01, element01) {<br/>        downMenu_reference_text.each(function(index02, element02) {<br/>          if ( jQuery(element01).text() === jQuery(element02).text() ) {<br/>            /* idを生成 */<br/>            let id = index01 + 101;<br/>            let list = jQuery(element01).parent();<br/>            let downMenu = jQuery(element02).closest('.js-megaMenu_down_list_sec');<br/><br/>            /* ダウンメニューをリンクリスト内部に移動 */<br/>            downMenu.appendTo(list);<br/><br/>            /* ダウンメニュー用のクラスを付与 */<br/>            list.addClass('downMenu');<br/>            /* ダウンメニュー用のidをdata属性で付与 */<br/>            list.attr('data-mega-target', `${id}`);<br/>            /* ダウンメニュー用のidをdata属性で付与 */<br/>            downMenu.attr('data-mega-id', `${id}`);<br/>          }<br/>        });<br/>      });<br/><br/>      /* 判定用に使用したテキストを削除 */<br/>      jQuery('.js-downMenu_reference_row').css('display','none');<br/><br/>      /* ダウンメニューのリンクのみを取得 */<br/>      const downMenuLink = jQuery('.js-megaMenu_custom_sec .nav_menu_list .downMenu');<br/><br/>      /*ダウンメニューをホバーしたときにサブメガメニューを開く */<br/>      downMenuLink.hover(<br/>        function() {<br/>          /*--- マウスカーソルが重なった時の処理 ---*/<br/>          /* ホバーしているリンクにクラス付与 */<br/>          jQuery(this).addClass('is-opened');<br/>          let hoverLinkId = jQuery(this).attr('data-mega-target');<br/>          let downMenu = jQuery(`[data-mega-id=\"${hoverLinkId}\"]`);<br/>          downMenu.css('display', '');<br/>        },<br/>        function() {<br/>          /*--- マウスカーソルが離れた時の処理 ---*/<br/>          let hoverLinkId = jQuery(this).attr('data-mega-target');<br/>          let downMenu = jQuery(`[data-mega-id=\"${hoverLinkId}\"]`);<br/>          downMenu.css('display', 'none');<br/>          jQuery(this).removeClass('is-opened');<br/>        }<br/>      );<br/>      /*------------- メガメニューPC時 END -------------*/<br/><br/>      /*---------------------------------<br/>        メガメニューSP時 START<br/>      ---------------------------------*/<br/>      /*--- 変数定義 ---*/<br/>      /* ハンバーガーメニューボタン */<br/>      const megaMenuTriggerElement = jQuery('&lt;div class=\"megaMenu_trigger\"&gt;' +<br/>        '&lt;span&gt;&lt;/span&gt;' +<br/>        '&lt;span&gt;&lt;/span&gt;' +<br/>        '&lt;span&gt;&lt;/span&gt;' +<br/>        '&lt;/div&gt;');<br/>      const mainMegaMenuElement = jQuery('&lt;nav class=\"main-megaMenu\"&gt;&lt;ul&gt;&lt;/ul&gt;&lt;/nav&gt;');<br/><br/>      function spMegaMenuSetUp() {<br/><br/>        /* ハンバーガメニューを挿入＆削除 */<br/>        if ( windowPCorSP() === 'sp' &amp;&amp; !jQuery('.megaMenu_trigger').length ) {<br/>          /*--- 画面幅SPのとき ---*/<br/><br/>          /* ハンバーガメニューボタンとメインメニューを追加 */<br/>          megaMenuTriggerElement.appendTo('.js-megaMenu_custom_sec &gt; .inner').ready(function () {<br/><br/>            mainMegaMenuElement.insertAfter('.megaMenu_trigger');<br/><br/>            const megaMenuTrigger = jQuery('.megaMenu_trigger');<br/>            const mainMegaMenu = jQuery('.main-megaMenu');<br/><br/>            mainMegaMenu.css('display', 'none');<br/>            /* メインメニューにメニュー要素を追加 */<br/>            nav_menu_link.parent().clone().appendTo('.main-megaMenu &gt; ul');<br/><br/>            /* メニューの下層（プルダウン）要素を追加する */<br/>            /* 1階層目のメニューを取得 */<br/>            const level01 = jQuery('.main-megaMenu &gt; ul &gt; li');<br/>            level01.addClass('js-level-01');<br/><br/>            level01.each(function(index01, element01) {<br/>              let id = jQuery(element01).attr('data-mega-target');<br/>              let section = jQuery(`.main-megaMenu .js-megaMenu_down_list_sec[data-mega-id=\"${id}\"]`);<br/><br/>              /* ボタンパーツの場合 */<br/>              let buttonLink = section.find('.button a').clone();<br/>              let buttonLinkList = buttonLink.removeClass().addClass('wrap-item');<br/>              if ( buttonLink.length ) {<br/>                buttonLinkList.appendTo(jQuery(element01));<br/>              }<br/><br/>              /* リッチテキストもしくはリンクリストの場合 */<br/>              let listLink = section.find('.richtext &gt; ul, .list &gt; ul');<br/>              let listLinkList = listLink.closest('.component').children('ul');<br/>              if ( listLinkList.length ) {<br/>                listLinkList.appendTo(jQuery(element01));<br/>              }<br/><br/>              section.css('display','none');<br/>            });<br/><br/>            jQuery('.main-megaMenu .js-megaMenu_down_list_sec').css('display', 'none');<br/>            jQuery('.wrap-item').wrap('&lt;li class=\"js-level-02\"&gt;');<br/>            jQuery('.wrap-item').removeAttr('class');<br/><br/>            level01.each(function(index, element) {<br/>              let target = jQuery(element).find('.js-level-02');<br/>              target.wrapAll('&lt;ul class=\"js-level-01-cont\"&gt;');<br/>            });<br/><br/>            /* 1階層目 */<br/>            const level01List = jQuery('.main-megaMenu &gt; ul &gt; li');<br/>            const level02List = jQuery('.main-megaMenu &gt; ul &gt; li &gt; ul &gt; li');<br/>            const level03List = jQuery('.main-megaMenu &gt; ul &gt; li &gt; ul &gt; li &gt; ul &gt; li');<br/>            const level04List = jQuery('.main-megaMenu &gt; ul &gt; li &gt; ul &gt; li &gt; ul &gt; li &gt; ul &gt; li');<br/><br/>            level01List.addClass('js-level-01');<br/>            level02List.addClass('js-level-02');<br/>            level03List.addClass('js-level-03');<br/>            level04List.addClass('js-level-04');<br/><br/>            level02List.closest('ul').addClass('js-level-01-cont');<br/>            level03List.closest('ul').addClass('js-level-02-cont');<br/>            level04List.closest('ul').addClass('js-level-03-cont');<br/><br/>            const downMenu = jQuery('.downMenu a');<br/>            const toggleIconElement = jQuery('&lt;span class=\"toggle_icon\"&gt;&lt;/span&gt;');<br/>            jQuery('.main-megaMenu &gt; ul &gt; li ul').css('display', 'none');<br/><br/>            let toggle_icon_link = [];<br/><br/>            jQuery('.main-megaMenu &gt; ul li ul').prevAll().each(function(index, element) {<br/>              if ( element.tagName.toLowerCase() === 'a' ) {<br/>                toggle_icon_link.push(jQuery(element));<br/>                return<br/>              } else if ( element.tagName.toLowerCase() === 'strong' ) {<br/>                toggle_icon_link.push(jQuery(element).find('a'));<br/>              }<br/>            });<br/>            toggleIconElement.appendTo(toggle_icon_link);<br/><br/>            jQuery('.downMenu a .toggle_icon').on('click', function(e) {<br/>              e.preventDefault();<br/>              e.stopPropagation();<br/>              let list = jQuery(this).closest('li');<br/>              let openTarget = list.children('ul');<br/>              jQuery(this).toggleClass('is-open');<br/>              openTarget.toggleClass('is-open');<br/>              openTarget.stop(true, true).slideToggle(300);<br/>            });<br/><br/>            /* ハンバーガメニュークリックイベント */<br/>            megaMenuTrigger.on('click', function() {<br/>              megaMenuTrigger.toggleClass('is-active');<br/>              mainMegaMenu.toggleClass('is-active');<br/>              mainMegaMenu.toggle();<br/>              jQuery('html').toggleClass('is-locked');<br/>              megaMenuSec.toggleClass('is-open');<br/>            });<br/><br/>          });<br/><br/>        } else if ( windowPCorSP() === 'pc' ) {<br/>          /*--- 画面幅PCのとき ---*/<br/>          /* ハンバーガメニューボタンとメインメニューを削除 */<br/>          jQuery('.megaMenu_trigger').removeClass('is-active');<br/>          jQuery('.main-megaMenu').removeClass('is-active');<br/>          jQuery('.megaMenu_trigger').css('display','none');<br/>          jQuery('.main-megaMenu ul li').css('display','none');<br/>          jQuery('.main-megaMenu').css('display','none');<br/>          jQuery('.downMenu a .toggle_icon').css('display','none');<br/><br/>          /* ハンバーガメニューが開いてるときのクラス名を削除 */<br/>          jQuery('html').removeClass('is-locked');<br/>          jQuery('is-open').removeClass('is-open');<br/>        }<br/>      };<br/><br/>      /*------------- メガメニューSP時 END -------------*/<br/><br/>      /*--- ウィンドウのリサイズ完了後の処理 ---*/<br/>      const windowResize = () =&gt; {<br/>        let timer = 0;<br/>        let delay = 100;<br/>        window.addEventListener('resize', () =&gt; {<br/>          clearTimeout(timer);<br/>          timer = setTimeout(() =&gt; {<br/>            spMegaMenuSetUp();<br/>          }, delay);<br/>        }, false);<br/>      };<br/><br/>      spMegaMenuSetUp();<br/>      windowResize();<br/><br/>    });<br/><br/>    /*------------- メガメニューを別ページから読み込んで初期機能設定 END -------------*/<br/>  });<br/> <br/>  /*--- ページ内遷移ずれる対策 ---*/<br/>   window.addEventListener('load', () =&gt; {<br/>     setTimeout(() =&gt; {<br/>       const headerSec = document.querySelector('.js-megaMenu_custom_sec'); /* メガメニューを取得 */<br/>       if (headerSec) {<br/>         const headerHeight = headerSec.offsetHeight; /* メガメニューの高さを取得 */<br/>         /* 固定ナビの場合の処理 */<br/>         if (headerSec.classList.contains('fixed')) {<br/>          document.documentElement.style.setProperty('--navi-height', `${headerHeight}px`);<br/>         }<br/>        }<br/>      }, 300);<br/>    });<br/>  /*--- ページ内遷移ずれる対策 END ---*/<br/>  /* ---------------------------<br/>    メガメニュー（1段） END<br/>  --------------------------- */<br/>&lt;/script&gt;<br/><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p><p>//旧CMS用（不要であれば削除）<br/>//新CMS用（不要であれば削除）<br/>と2つ記述を用意している箇所がいくつかありますので必要に応じて削除orコメントアウトを外してください。<br/>※デフォルトでは新CMS用の記述が当たるようにしています。</p><a href=\"#\">CSSをコピーする</a><p><strong>2025-08-15更新（v1.1.0)</strong></p>\n/*----- メガメニュー（1段） START v1.1.0​​​​​-----*/<br/>/* --------------------------------<br/>    variables（変数）<br/>----------------------------------- */<br/>$mega-navigation_bg_color: #fff; //メガメニューの背景色<br/>$mega-navigation_font_size: 14px; //メガメニューのフォントサイズ（1〜3階層）<br/>$mega-navigation_font_weight: bold; //メガメニューのフォントの太さ（1〜3階層） normal or bold<br/>$mega-navigation_hover_opacity: 1; //メガメニューをホバーした時の透視度<br/>$mega-navigation_bg2_color: #ffad2f; //メガメニューの背景色（2階層以下）<br/>$mega-navigation_text_color: #2d2d2d; //メガメニューのテキストカラー<br/>$mega-navigation_hover_text_color: #ffad2f; //メガメニューをホバーした時のテキストカラー<br/>$mega-navigation_text2_color: #fff; //メガメニューのテキストカラー（2階層以下）<br/><br/>//メガメニュー（1段） ハンバーガーメニュー<br/>$mega-navigation_sp_font_size: 14px; //メガメニュー（SP）時のテキストサイズ（1〜3階層）<br/>$mega-navigation_sp_font_weight: bold; //メガメニュー（SP）時のテキストの太さ（1〜3階層） normal or bold<br/>$mega-navigation_sp_text_color: $mega-navigation_text2_color; //メガメニュー（SP）時のテキストカラー １階層<br/>$mega-navigation_sp_text2_color: $mega-navigation_sp_text_color; //メガメニュー（SP）時のテキストカラー（2階層）<br/>$mega-navigation_sp_text3_color: $mega-navigation_sp_text_color; //メガメニュー（SP）時のテキストカラー（3階層）<br/>$mega-navigation_sp_hover_text_color: #ffad2f; //メガメニュー（SP）時のホバーした時の2階層のテキスト＆矢印のカラー<br/>$mega-navigation_sp_arrow1_color: $mega-navigation_sp_text_color; //メガメニュー（SP） 矢印カラー（1階層）<br/>$mega-navigation_sp_arrow2_color: $mega-navigation_sp_text2_color; //メガメニュー（SP） 矢印カラー（2階層）<br/>$mega-navigation_sp_bg_color: #fff; //メガメニュー（SP）時の背景色（1階層）<br/>$mega-navigation_sp_bg2_color: $mega-navigation_bg_color; //メガメニュー（SP）時の背景色（２階層）<br/>$mega-navigation_sp_bg3_color: #eee; //メガメニュー（SP）時の背景色（3階層）<br/>$mega-navigation_sp_border-bottom: 1px dashed #ffad2f; //メガメニュー（SP）時のボーダー（hamburger_custom 使用時）<br/>/*------------- variables（変数）END -------------*/<br/><br/>//初期読み込み時に格納セクションが一瞬見えてしまう（チラつき）防止<br/>.js-megaMenu_contents_sec {<br/>  display: none !important;<br/>}<br/>//固定サイドバー対策<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;.js-megaMenu_custom_sec {<br/>    &amp;.has-fixed-side {<br/>      @media screen and (min-width: 1201px) {<br/>        width: calc(100% - 420px);<br/>      }<br/>    }<br/>  }<br/>}<br/>/* SP時 iOSのアドレスバーズレ防止 */<br/>html {<br/>  &amp;.is-locked {<br/>    overflow: hidden;<br/>    -ms-touch-action: none;<br/>    touch-action: none;<br/>    &amp;::before {<br/>      content: '';<br/>      position: fixed;<br/>      z-index: 5;<br/>      top: 0;<br/>      left: 0;<br/>      width: 100vw;<br/>      height: 100vh;<br/>      background-color: #ffad2f;<br/>    }<br/>  }<br/>}<br/><br/>/*-- メガメニュー（1段） 共通設定 --*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;:is(<br/>    .megaMenu_custom_sec,<br/>    .megaMenu_down_list_sec,<br/>  ) * {<br/>    box-sizing: border-box;<br/>  }<br/>}<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;:where(<br/>    .megaMenu_custom_sec,<br/>    .megaMenu_down_list_sec<br/>   ) {<br/>    width: 100%;<br/>    font-family: 'Noto Sans JP', sans-serif;//適宜変更<br/>    line-height: 1.5;//適宜変更<br/>    letter-spacing: .04em;//適宜変更<br/>    .inner {<br/>      width: 100% !important;<br/>      max-width: 100% !important;<br/>      margin: auto;<br/>      .row {<br/>        .col {<br/>          .component {<br/>            margin: 10px 0;<br/>            a {<br/>              text-decoration: none;<br/>              &amp;:hover {<br/>                opacity: $hover_opacity;<br/>              }<br/>            }<br/>            // CTA共通<br/>            &amp;.cta {<br/>              margin: 0;<br/>              .cta-row {<br/>                display: table;<br/>                table-layout: fixed;<br/>                width: 100%;<br/>                margin: 0;<br/>                @include breakpoint-sp {<br/>                  display: block;<br/>                }<br/>                &amp; + .cta-row {<br/>                  @include breakpoint-pc {<br/>                    padding-top: 10px;<br/>                  }<br/>                }<br/>                .cta-column {<br/>                  display: table-cell;<br/>                  vertical-align: top;<br/>                  margin: 0;<br/>                  @include breakpoint-sp {<br/>                    display: block;<br/>                    width: 100% !important;<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- メガメニュー（1段） 共通設定 END--*/<br/><br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  /*-- メガメニュー（1段） ナビ部分 --*/<br/>  &amp;.megaMenu_custom_sec {<br/>    background: $mega-navigation_bg_color;<br/>    box-shadow: $navigation_box_shadow_common;<br/>    position: relative;<br/>    z-index: 10;<br/>    padding: 0;<br/>    // オプション ナビゲーション上部固定のとき<br/>    &amp;.fixed {<br/>      position: sticky;<br/>      z-index: 1001;<br/>      top: 0;<br/>    }<br/>    &amp;.is-open {<br/>      @include breakpoint-sp {<br/>        box-shadow: none;<br/>      }<br/>    }<br/>    .inner {<br/>      .row {<br/>        &amp;.navigation-cont_row {<br/>          display: flex;<br/>          justify-content: space-between;<br/>          align-items: center;<br/>          padding: 5px 20px;<br/>          @include breakpoint-sp {<br/>            min-height: 51px;<br/>            padding: 0;<br/>          }<br/>          .col {<br/>            padding: 0;<br/>            &amp;.logo_col {<br/>              display: flex !important;<br/>              align-items: center;<br/>              justify-content: flex-start;<br/>              width: auto !important;<br/>              @include breakpoint-sp {<br/>                padding: 0 0 0 10px;<br/>              }<br/>              .component {<br/>                margin: 0;<br/>                &amp;.image {<br/>                  &amp;.logo_img {<br/>                    max-width: $header_logo;<br/>                    img {<br/>                      @include breakpoint-pc {<br/>                        max-height: 56px;//ナビhover時の上矢印▲の位置ズレ対策<br/>                      }<br/>                      @include breakpoint-sp {<br/>                        max-height: $header_sp_logo;<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>            &amp;.cont_col {<br/>              display: flex !important;<br/>              align-items: center;<br/>              justify-content: flex-end;<br/>              width: auto !important;<br/>              @include breakpoint-sp {<br/>                padding: 0 60px 0 0;<br/>              }<br/>              .component {<br/>                margin: 0;<br/>                &amp;.list {<br/>                  &amp;.nav_menu_list {<br/>                    height: 100%;<br/>                    @include breakpoint-sp {<br/>                      display: none !important;<br/>                    }<br/>                    &gt; ul {<br/>                      display: flex;<br/>                      height: 100%;<br/>                      &gt; li {<br/>                        display: block;<br/>                        margin: 0;<br/>                        padding: 0;<br/>                        font-size: $mega-navigation_font_size;<br/>                        color: $mega-navigation_text_color;<br/>                        &amp;.downMenu {<br/>                          &gt; a {<br/>                            position: relative;<br/>                            &amp;::after {<br/>                              content: \"\\f0d7\";<br/>                              font-family: $font_family_awsm6;<br/>                              margin-left: 5px;<br/>                              font-size: 16px;<br/>                              font-weight: 900;<br/>                              line-height: 1;<br/>                              color: $mega-navigation_text_color;<br/>                            }<br/>                          }<br/>                          &amp;.is-opened {<br/>                            &gt; a {<br/>                              &amp;::before {<br/>                                content: '';<br/>                                position: absolute;<br/>                                left: calc(50% - 3px);<br/>                                bottom: -5px;<br/>                                width: 0;<br/>                                height: 0;<br/>                                border-style: solid;<br/>                                border-width: 0 15px 15px 15px;<br/>                                border-color: transparent transparent #ffad2f transparent;<br/>                                transform: translateX(-50%);<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                        &gt; a {<br/>                          display: flex;<br/>                          align-items: center;<br/>                          height: 100%;<br/>                          padding: 20px 10px;<br/>                          text-decoration: none;<br/>                          font-weight: $mega-navigation_font_weight;<br/>                          line-height: 1.2;<br/>                          color: $mega-navigation_text_color;<br/>                          &amp;:hover {<br/>                            color: $mega-navigation_hover_text_color;<br/>                            opacity: $mega-navigation_hover_opacity;<br/>                            &amp;::before,<br/>                            &amp;::after {<br/>                              color: $mega-navigation_hover_text_color;<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>                &amp;.button {<br/>                  margin-left: 10px;<br/>                  @include breakpoint-sp {<br/>                    margin: 0;<br/>                  }<br/>                  .button-cont {<br/>                    a {<br/>                      &amp;:is(.size-s, .size-m, .size-l) {<br/>                        @include breakpoint-msp {<br/>                          min-width: initial;<br/>                          background: none;<br/>                          border: none;<br/>                          border-radius: 0;<br/>                          font-size: 0;<br/>                          padding: 5px;<br/>                        }<br/>                        &amp;::before {<br/>                          @include breakpoint-msp {<br/>                            font-size: 22px;<br/>                            color: #ffad2f;<br/>                            margin: 0;<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>      // ハンバーガーメニュー<br/>      .megaMenu_trigger {<br/>        cursor: pointer;<br/>        width: 60px;<br/>        height: 51px;<br/>        position: absolute;<br/>        right: 0;<br/>        top: 0;<br/>        background: #ffad2f;<br/>        span {<br/>          display: inline-block;<br/>          width: 30px;<br/>          height: 3px;<br/>          border-radius: 3px;<br/>          background: #fff;<br/>          position: absolute;<br/>          left: 50%;<br/>          transform: translateX(-50%);<br/>          transition: all .4s;<br/>          &amp;:nth-child(1) {<br/>            top: 15px;<br/>          }<br/>          &amp;:nth-child(2) {<br/>            top: 24px;<br/>          }<br/>          &amp;:nth-child(3) {<br/>            bottom: 15px;<br/>          }<br/>        }<br/>        /* ハンバーガメニュー オープン時 */<br/>        &amp;.is-active {<br/>          span {<br/>            &amp;:nth-child(1) {<br/>              -webkit-transform: translateY(10px) translateX(-50%) rotate(-45deg);<br/>              transform: translateY(10px) translateX(-50%) rotate(-45deg);<br/>            }<br/>            &amp;:nth-child(2) {<br/>              opacity: 0;<br/>            }<br/>            &amp;:nth-child(3) {<br/>              -webkit-transform: translateY(-8px) translateX(-50%) rotate(45deg);<br/>              transform: translateY(-8px) translateX(-50%) rotate(45deg);<br/>            }<br/>          }<br/>        }<br/>      }<br/>      // メインメガメニュー（1段） PC時 {<br/>      @include breakpoint-pc {<br/>        .main-megaMenu {<br/>          display: none;<br/>        }<br/>      }<br/>      // メインメガメニュー（1段） SP時<br/>      @include breakpoint-sp {<br/>        .main-megaMenu {<br/>          height: calc(100vh + 100px);<br/>          overflow: auto;<br/>          font-family: 'Noto Sans JP', sans-serif;//適宜変更<br/>          background: #ffad2f;<br/>          padding: 20px 0 250px;<br/>          ul {<br/>            li {<br/>              a {<br/>                display: block;<br/>                position: relative;<br/>                padding: 20px;<br/>                text-decoration: none;<br/>                font-size: $mega-navigation_sp_font_size;<br/>                font-weight: $mega-navigation_sp_font_weight;<br/>                line-height: 1.2;<br/>                color: $mega-navigation_sp_text_color;<br/>                span {<br/>                  font-weight: inherit;<br/>                }<br/>              }<br/>              /* 2階層目トリガー */<br/>              &amp;.downMenu {<br/>                a {<br/>                  padding: 20px 45px 20px 20px;<br/>                  .toggle_icon {<br/>                    display: flex;<br/>                    align-items: center;<br/>                    justify-content: center;<br/>                    position: absolute;<br/>                    top: 50%;<br/>                    right: 0;<br/>                    width: 50px;<br/>                    height: 45px;<br/>                    transform: translateY(-50%);<br/>                    &amp;::before,<br/>                    &amp;::after {<br/>                      background-color: $mega-navigation_sp_arrow1_color;<br/>                    }<br/>                    &amp;::before {<br/>                      content: '';<br/>                      width: 2px;<br/>                      height: 18px;<br/>                      transform: rotate(0);<br/>                      -webkit-transform: rotate(0);<br/>                      z-index: 1;<br/>                      transition: all .5s ease;<br/>                    }<br/>                    &amp;::after {<br/>                      content: '';<br/>                      position: relative;<br/>                      right: 2px;<br/>                      width: 2px;<br/>                      height: 18px;<br/>                      transform: rotate(90deg);<br/>                      -webkit-transform: rotate(90deg);<br/>                      transition: all .5s ease;<br/>                    }<br/>                    &amp;.is-open {<br/>                      &amp;::before {<br/>                        transform: rotate(90deg);<br/>                        -webkit-transform: rotate(90deg);<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>              ul {<br/>                &amp;.js-level-01-cont {<br/>                  position: relative;<br/>                  &amp;:first-of-type {<br/>                    &amp;::before {<br/>                      content: '';<br/>                      position: absolute;<br/>                      left: 50%;<br/>                      top: 0;<br/>                      width: calc(100% - 33px);<br/>                      height: 0.1rem;<br/>                      transform: translateX(-50%);<br/>                      background: #fff;<br/>                    }<br/>                  }<br/>                }<br/>                &amp;:first-of-type {<br/>                  padding: 5px 0 0;<br/>                }<br/>                &amp;:last-of-type {<br/>                  padding: 0 0 5px;<br/>                }<br/>                .js-level-02 {<br/>                  a {<br/>                    padding: 15px 30px 15px calc(20px + 1em);<br/>                  }<br/>                  .js-level-03 {<br/>                    a {<br/>                      padding: 15px 30px 15px calc(20px + 2em);<br/>                    }<br/>                    .js-level-04 {<br/>                      a {<br/>                        padding: 15px 30px 15px calc(20px + 3em);<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>  /*-- メガメニュー（1段） メニュー内 --*/<br/>  &amp;.megaMenu_down_list_sec {<br/>    background: $mega-navigation_bg2_color;<br/>    color: $mega-navigation_text2_color;<br/>    position: absolute;<br/>    top: 100%;<br/>    left: 0;<br/>    z-index: 1;<br/>    padding: 20px 0;<br/>    .inner {<br/>      padding: 20px;<br/>      .row {<br/>        // 以下、メニュー内のデザインに合わせて適宜変更（不要であれば削除）<br/>        &amp;.sub_menu_list_row {<br/>          display: flex;<br/>          gap: 20px;<br/>          &amp; + .sub_menu_list_row {<br/>            margin-top: 30px;<br/>          }<br/>          .col {<br/>            padding: 0;<br/>            .component {<br/>              &amp;.richtext {<br/>                // メニュー内タイトル部分<br/>                &amp;.sub_menu_title_text {<br/>                  margin-bottom: 10px;<br/>                }<br/>                // [お知らせ]リスト<br/>                &amp;.megaMenu_list01 {<br/>                  ul {<br/>                    display: flex;<br/>                    flex-direction: column;<br/>                    li {<br/>                      display: block;<br/>                      margin: 0;<br/>                      padding: 0;<br/>                      font-size: 16px;<br/>                      a {<br/>                        display: block;<br/>                        padding: 10px 0;<br/>                        border-bottom: 1px solid #fff;<br/>                        text-decoration: none;<br/>                        color: #fff;<br/>                        &amp;:hover {<br/>                          opacity: $hover_opacity;<br/>                        }<br/>                      }<br/>                      ul {<br/>                        margin: 0 0 0 10px !important;<br/>                        li {<br/>                          font-size: 14px;<br/>                          a {<br/>                            border: none;<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                  /* 1階層目 */<br/>                  &gt; ul {<br/>                    margin: 0;<br/>                    &gt; li {<br/>                      &amp; + li {<br/>                        margin-top: 10px;<br/>                      }<br/>                      /* 2階層目 */<br/>                      &gt; ul {<br/>                        padding: 5px 0;<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>              &amp;.list {<br/>                // [お知らせ]リスト<br/>                &amp;.megaMenu_list02 {<br/>                  ul {<br/>                    display: flex;<br/>                    flex-direction: column;<br/>                    li {<br/>                      display: block;<br/>                      margin: 0;<br/>                      padding: 0;<br/>                      font-size: 16px;<br/>                      a {<br/>                        display: block;<br/>                        padding: 10px 0;<br/>                        text-decoration: none;<br/>                        font-weight: bold;<br/>                        color: #fff;<br/>                        &amp;:hover {<br/>                          opacity: $hover_opacity;<br/>                          background: none;<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>        .col {<br/>          // ボックスリンク用<br/>          &amp;.box_link_col {<br/>            position: relative;<br/>            &amp;:hover {<br/>              opacity: $hover_opacity;<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- メガメニュー（1段） END -----*/<p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p><a href=\"#\">CSSをコピーする</a><p><strong>2024-09-13更新（v1.0.0）</strong></p>\n/*-- メガメニュー（1段） 編集画面用 START v1.0.0​​​​​--*/<br/>  //初期読み込み時に格納セクションが一瞬見えてしまう（チラつき）防止<br/>  .js-megaMenu_contents_sec {<br/>    display: block !important;<br/>    border: 1px solid #f00;<br/>    &amp;::before {<br/>      content: \"メガメニュー格納セクション\";<br/>      position: absolute;<br/>      color: #fff;<br/>      background: #f00;<br/>      padding: 5px 5px;<br/>      right: 0;<br/>      top: -24px;<br/>      font-size: 14px;<br/>      line-height: 1;<br/>    }<br/>  }<br/>  .theme-fo-base .wrapper .contents {<br/>    :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>      &amp;.megaMenu_custom_sec {<br/>        padding: 20px 0 !important;<br/>        .inner {<br/>          max-width: 1100px !important;<br/>          padding: 0 20px !important;<br/>          .row {<br/>            &amp;.navigation-cont_row {<br/>              .col {<br/>                &amp;.logo_col {<br/>                  width: 20% !important;<br/>                }<br/>                &amp;.cont_col {<br/>                  width: 80% !important;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>        &amp;.fixed {<br/>          position: relative;<br/>          top: initial;<br/>          border: 1px solid blue;<br/>          &amp;::before {<br/>            content: \"メガメニュー上部固定中（クラス名：fixed） ※固定を外したい場合はこのクラスを外す。\";<br/>            position: absolute;<br/>            color: #fff;<br/>            background: blue;<br/>            padding: 0 5px;<br/>            right: 0;<br/>            top: -24px;<br/>          }<br/>        }<br/>      }<br/>      &amp;.megaMenu_down_list_sec {<br/>        position: relative;<br/>        top: initial;<br/>        left: initial;<br/>        .inner {<br/>          .row {<br/>            // メガメニューでドロップダウンメニューがついているリンクかどうか判定するためのrow<br/>            &amp;.js-downMenu_reference_row {<br/>              border: 1px solid red;<br/>              background: #000;<br/>              &amp;::before {<br/>                content: \"ナビゲーションのメニュー名と同じものを入れてください。（どのメニューに対応するか判定用。公開画面では非表示の行になります。）\";<br/>                position: absolute;<br/>                color: #fff;<br/>                background: red;<br/>                padding: 5px 5px;<br/>                right: 0;<br/>                top: -24px;<br/>                font-size: 14px;<br/>                line-height: 1;<br/>              }<br/>              .col {<br/>                padding: 10px 20px;<br/>                .component {<br/>                  color: #fff;<br/>                  &amp;.heading {<br/>                    :is(h2, h3) {<br/>                      margin: 0;<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>/*-- メガメニュー（1段） 編集画面用 END --*/</section>\n\n<section class=\"content-element content-11\"> </section>"
  },
  {
    "title": "フォーム内指定テキスト英語化",
    "url": "https://js-part.hmup.jp/js/en_form",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>フォーム内指定テキスト英語化<br/></h2><p>エラー文&amp;確認画面内テキスト&amp;送信後テキストを変更</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>変更NG</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>\n<p><strong>ページ複製・<br/>\n   クリップボード使用可否</strong></p>\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<ul>\n<li>フォームの項目は<br/>\n    どれでも可 ※1</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>フォームデザイン</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>英文※2</li>\n</ul>\n</td>\n<td>×</td>\n<td>◯ </td>\n</tr>\n<tr>\n<th>※留意事項</th>\n<th> </th>\n</tr>\n<tr>\n<td>\n<p>※1：エラー文の先頭には必ずラベル名がつく仕様（<a href=\"#categoryA\">こちら参照</a>）です。<br/>\n   ※2：英文はJS側で設定するため<strong>変更は不可</strong>とさせていただきます。<br/>\n   ※ラベル名はフォーム編集機能からいつでも変更可能です。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\"><h2>英文一覧<br/></h2><p>※英文変更不可<br/>\n※ラベル名はフォーム設定から適宜変更可</p>\n<p>before▼</p>\n<p><strong>・Nameは必須です。<br/>\n・Emailは、メールアドレス形式で入力してください。<br/>\n・Phone Numberは、半角数字、プラス記号 (+)、ハイフン (-) のみを使用し、最大20桁までの長さで入力してください。<br/>\n・氏名（カナ）は、全角カタカナで入力してください。<br/>\n・郵便番号は、半角数字とハイフンで入力してください。<br/>\n・ホームページのURLは、httpもしくはhttpsで始まる文字列を入力してください。<br/>\n・年齢(入力式) は、正の整数を入力してください。</strong></p>\n<p>after▼</p>\n<p><strong>・Name is required field.<br/>\n・Email : Please enter a valid email address.<br/>\n・Phone Number : Letters must be less than 20 characters. (only \"+\" and \"-\" are available for symbols)<br/>\n・氏名（カナ） : Please input using full-width katakana.<br/>\n・郵便番号 : Please input using half-width numbers and hyphen.<br/>\n・ホームページのURL : Please make sure that your URL starts with \"http\" or \"https\".<br/>\n・年齢(入力式) : Please enter an integer.</strong></p>\n</section>\n\n<section class=\"content-element content-4 contactform_sec\"><p>▼全ての項目を下記フォームから確認できます。</p>\nNameCompanyEmailPhone NumberCommentSelection listabcAttachment氏名（カナ）郵便番号都道府県未設定北海道青森県岩手県宮城県秋田県山形県福島県茨城県栃木県群馬県埼玉県千葉県東京都神奈川県新潟県富山県石川県福井県山梨県長野県岐阜県静岡県愛知県三重県滋賀県京都府大阪府兵庫県奈良県和歌山県鳥取県島根県岡山県広島県山口県徳島県香川県愛媛県高知県福岡県佐賀県長崎県熊本県大分県宮崎県鹿児島県沖縄県住所1住所2FAX番号携帯電話番号ホームページのURL年齢(年代別)未設定〜10代20代30代40代50代60代70代80代90代〜性別未設定男性女性職業未設定公務員経営者・役員会社員自営業専業主婦パート・アルバイト学生その他部署名役職Facebook アカウントTwitter アカウントテキスト（1行）テキスト（複数行）日付時刻日付時刻年齢(選択式)181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980年齢(入力式)ラジオボタンabcチェックボックスabc携帯メール国生年月日添付ファイルPrivacy Policy<!-- -->(<a href=\"https://subdomain20090122505.hmup.jp/privacy\">https://subdomain20090122505.hmup.jp/privacy</a>)Agree</section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。</li>\n</ul>\n<ol>\n<li>フォームパーツにクラス名「<strong>en</strong>」を追加。<br/>\n ※旧CMSやフォームをカスタムする場合、必要に応じてクラス「<strong>form_custom form_btn_custom01</strong>」等を追加。</li>\n<li>項目名の名称はフォーム設定から適宜変更してください。</li>\n<li>必須ボタンはJS側でスタイル記述しています。</li>\n<li>フォームには基本フッターをつけないため、フッターを使用しない場合はフォームページ毎にJS埋め込みコードを設置する必要があります。</li>\n</ol>\n<ul>\n<li>新CMSの場合：基本デザインパーツを使用して問題ないです。</li>\n</ul>\n<h2>注意点</h2><ul>\n<li>選択リストの「ファイルを選択」とテキスト「選択されていません」については、ユーザーエージェントのためブラウザの言語設定に依存されます。<br/>\n  </li>\n<li>以下の項目は日本基準のカレンダーになります。\n <ul>\n<li><strong>日付時刻</strong></li>\n<li>\n<p><strong>日付</strong></p>\n</li>\n<li><strong>生年月日</strong><br/>\n   </li>\n</ul>\n</li>\n<li>以下のリスト部分の日本語は編集画面で変更可能です。\n <ul>\n<li><strong>都道府県</strong></li>\n<li><strong>年齢(年代別)</strong></li>\n<li><strong>性別</strong></li>\n<li><strong>職業</strong></li>\n</ul>\n</li>\n</ul>\n</section>\n\n<section class=\"content-element content-8\"><h2>JavaScript</h2><p><strong>2024-09-10更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>/* ---------------------------<br/>  フォーム内指定テキスト英語化 v1.0.0​​​​​<br/>--------------------------- */<br/>  'use strict';<br/><br/>  document.addEventListener('DOMContentLoaded', function () {<br/>    /* ---------------------------<br/>     フォームエラー文を変更<br/>    --------------------------- */<br/>    /* 動的な要素を監視して実行する */<br/>    const observer = new MutationObserver( () =&gt; {<br/>      let errorMessage = document.querySelectorAll('.en .alert-danger');/* エラー文のクラス */<br/>      for (let i = 0; i &lt; errorMessage.length; i++) {<br/>        /* 左に変更したいテキスト・右に変更後のテキストを入れる */<br/>        errorMessage[i].textContent = errorMessage[i].innerHTML<br/>        .replace('は必須です。', ' is required field.')<br/>        .replace('は必須です', ' is required field.')<br/>        .replace('は、半角数字、プラス記号 (+)、ハイフン (-) のみを使用し、最大20桁までの長さで入力してください。', ' : Letters must be less than 20 characters. (only \"+\" and \"-\" are available for symbols)')<br/>        .replace('は、httpもしくはhttpsで始まる文字列を入力してください。', ' : Please make sure that your URL starts with \"http\" or \"https\".')<br/>        .replace('は、全角カタカナで入力してください。', ' : Please input using full-width katakana.')<br/>        .replace('は、半角数字とハイフンで入力してください。', ' : Please input using half-width numbers and hyphen.')<br/>        .replace('は、メールアドレス形式で入力してください。', ' : Please enter a valid email address.')<br/>        .replace('は、正の整数を入力してください。', ' : Please enter an integer.');<br/>        /* DOM変化の監視を一時停止 */<br/>        observer.disconnect();<br/>      }<br/>      /* 処理再開 */<br/>      setTimeout(() =&gt; {<br/>        observer.observe(target, {<br/>          childList: true,/* 監視対象の要素の子要素を指定 */<br/>          subtree: true,/* 孫以降のノードの変化も検出 */<br/>          characterData: true,/* 文字列の変化を監視 */<br/>        });<br/>      }, 100);<br/>    });<br/><br/><br/>    const target = document.querySelectorAll('.en .show-notice')[0];/* エラー文の一覧を囲っているクラス */<br/>    /* 監視対象のものを設定 */<br/>    observer.observe(target, {<br/>      childList: true,/* 監視対象の要素の子要素を指定 */<br/>      subtree: true,/* 孫以降のノードの変化も検出 */<br/>      characterData: true,/* 文字列の変化を監視 */<br/>    });<br/><br/><br/>    /* ---------------------------<br/>     確認画面モーダル内のテキストを変更<br/>    --------------------------- */<br/>    /* 動的な要素を監視して実行する */<br/>    const observer02 = new MutationObserver( () =&gt; {<br/>      const sendText = document.querySelectorAll('.ReactModal__Content span')[0];/* 確認モーダル内リード文 */<br/>      const cancelBtn = document.querySelectorAll(`[class^='styles_contact-submit-cancel']`)[0];/* 確認モーダル内キャンセルボタン */<br/>      const sendBtn = document.querySelectorAll(`[class^='styles_contact-submit-confirm']`)[0];/* 確認モーダル内送信ボタン */<br/>      /*  キャンセルボタンかつ送信ボタンがあれば実行 */<br/>      if (cancelBtn || sendBtn) {<br/>        /* 左に変更したいテキスト・右に変更後のテキストを入れる */<br/>        /* sendText.textContent = sendText.innerHTML.replace('この内容で送信します。よろしいですか？', 'Send with this content. Is it OK?');*/<br/>        sendText.textContent = \"Please check the contents, then click 'send' button.\";<br/>        cancelBtn.textContent = 'cancel';<br/>        sendBtn.textContent = 'send';<br/>      } else {<br/>        return<br/>      }<br/>    });<br/><br/>    const target02 = document.querySelectorAll('.ReactModalPortal')[0];/* 確認画面モーダルのクラス */<br/>    /* 監視対象のものを設定 */<br/>    observer02.observe(target02, {<br/>      childList: true/* 監視対象の要素の子要素を指定 */<br/>    });<br/><br/>    /* ---------------------------<br/>     送信後テキストを変更<br/>    --------------------------- */<br/>    /* 動的な要素を監視して実行する */<br/>    const observer03 = new MutationObserver( () =&gt; {<br/>      const sendingText = document.querySelectorAll('.form-submiting-message, .form-submitting-message',)[0];/* 送信後テキストを取得 */<br/>      if (sendingText) {<br/>        /* 左に変更したいテキスト・右に変更後のテキストを入れる */<br/>        sendingText.textContent = 'Sending.';<br/>      } else {<br/>        return<br/>      }<br/>    });<br/><br/>    const target03 = document.querySelectorAll('.group:last-child')[0];/* 送信後のテキストが含まれる親要素 */<br/>    /* 監視対象のものを設定 */<br/>    observer03.observe(target03, {<br/>      childList: true/* 監視対象の要素の子要素を指定 */<br/>    });<br/><br/>  });<br/>&lt;/script&gt;<br/>&lt;style&gt;<br/>.theme-fo-base .component.form.en .form-label.require:not(:root:root:root):after {<br/>  content: \"Required\";/* 必須ボタン英語化 */<br/>}<br/>&lt;/style&gt;<br/>&lt;!-- フォーム内指定テキスト英語化 END --&gt;</section>\n\n<section class=\"content-element content-9\">  <!-- フォーム内指定テキスト英語化 END --></section>"
  },
  {
    "title": "SP時ナビゲーションの要素をハンバーガーメニュー内に移動",
    "url": "https://js-part.hmup.jp/js/move-to-hamburger-at-sp",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>SP時ナビゲーションの要素を<br/>ハンバーガーメニュー内に移動</h2></section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>適用可能<br/>\n   パーツ</th>\n<th>変更可能</th>\n<th>変更NG</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<ul>\n<li>ボタン</li>\n<li>リッチテキスト</li>\n<li>画像パーツ</li>\n<li>検索パーツ</li>\n</ul>\n<p>etc...</p>\n</td>\n<td>\n<ul>\n<li>パーツ間の余白</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>ロゴの移動※1</li>\n<li>​​​SP時に​​​​移動される場所の変更※2<br/>\n→ハンバーガー内でナビの【上or下】に配置するかは選べます。</li>\n<li>疑似ナビには適用できません（共通ナビ限定）</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>複数要素移動可能※3</li>\n</ul>\n</td>\n<td>\n<p>-</p>\n<p>※共通ナビなので<br/>\n   自動で全てに適用</p>\n</td>\n</tr>\n<tr>\n<th>※留意事項</th>\n<th> </th>\n</tr>\n<tr>\n<td>\n<p>※1：ロゴ画像はクラスが付与できないため、適用できません。<br/>\n   ※2：「ハンバーガーメニュー内」以外への位置移動は不可とさせていただきます。</p>\n<ul>\n<li>ナビより上に移動：該当パーツにクラス「<strong>sp_move02</strong>」付与。</li>\n<li>ナビより下に移動：該当パーツにクラス「<strong>sp_move</strong>」付与。</li>\n</ul>\n<p>※3：一方はナビより上に移動、一方はナビより下に移動とすることも可能です。<br/>\n   ※パーツは基本縦並びになります。</p>\n</td>\n<td> </td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><p>SPモードにして右２つのボタンの挙動をご参照ください。<br/>\nハンバーガーメニューを開くと、移動した要素が確認できます。</p>\n</section>\n\n<section class=\"content-element content-4\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n<p><strong>補足：クラス「sp_move02」を付与した場合はナビリストの上に移動します。</strong></p>\n</section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>\n<p>CSSをカスタムCSSに記述。</p>\n</li>\n<li>\n<p>編集画面用CSSを適切な位置に記述。</p>\n</li>\n<li>JavaScriptを<strong>共通フッターの一番下</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>ナビゲーション内で、SP時にハンバーガメニュー内に移動したいパーツにクラスを追加。\n <ul>\n<li>ナビゲーションの上に移動する場合：該当パーツにクラス「<strong>sp_move02</strong>」付与。</li>\n<li>ナビゲーションの下に移動する場合：該当パーツにクラス「<strong>sp_move</strong>」付与。</li>\n</ul>\n</li>\n<li>移動後の要素にCSS調整をしたい場合、移動後に付与されるクラス「is-moved」に紐付けてスタイルを書くようにしてください。（<a href=\"#nav01\">カスタムCSS参照</a>）</li>\n</ol>\n</section>\n\n<section class=\"content-element content-6\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-09-04更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- SP時ナビゲーションの要素をハンバーガーメニュー内に移動 START v1.0.0​​​​​-----*/<br/>.navigation-cont {<br/>  :is(<br/>    .sp_move,<br/>    .sp_move02<br/>  ) {<br/>    @include breakpoint-sp {<br/>      display: none !important;// 移動前の要素をSP時に削除<br/>    }<br/>  }<br/>}<br/>// ハンバーガー内に移動後の要素のスタイル記述<br/>.main-menu {<br/>  &amp;.is-moved {<br/>    @include breakpoint-sp {<br/>      ul.clearfix {<br/>        :is(<br/>          .sp_move,<br/>          .sp_move02<br/>        ) {<br/>          &amp;.button {<br/>            margin: 15px 0;<br/>            &amp; + .button {<br/>            }<br/>            .button-cont {<br/>              text-align: center;<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- SP時ナビゲーションの要素をハンバーガーメニュー内に移動 END -----*/<br/></section>\n\n<section class=\"content-element content-7\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-08-25更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- SP時ナビゲーションの要素をハンバーガーメニュー内に移動 編集画面用 START v1.0.0​​​​​-----*/<br/>  :is(<br/>    .sp_move,<br/>    .sp_move02<br/>  ) {<br/>    border: 1px solid blue;<br/>    position: relative;<br/>    &amp;::before {<br/>      content: \"SP時ハンバーガー内へ移動\";<br/>      color: #fff;<br/>      background: blue;<br/>      font-size: 13px;<br/>      position: absolute;<br/>      right: 0;<br/>      top: -19px;<br/>      padding: 2px 5px;<br/>    }<br/>  }<br/>/*----- SP時ナビゲーションの要素をハンバーガーメニュー内に移動 編集画面用 END -----*/<br/></section>\n\n<section class=\"content-element content-8\"><h2>①jQueryを設定</h2><p>JavaScript埋め込みパーツを設置し、CDNで読み込んだ最新バージョンのjQueryを反映させます。<br/>\n※jQueryコンフリクト回避 のため<br/>\n<br/>\n複数のJSパーツを使用する場合は、こちらの①jQueryの読み込みは一度だけで大丈夫です。</p>\n<p><strong>2024-01更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script<br/>  src=\"https://code.jquery.com/jquery-3.6.0.min.js\"<br/>  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"<br/>  crossorigin=\"anonymous\"<br/>&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  'use strict';<br/>  /*--- jQueryコンフリクト回避 v1.0.0---*/<br/>  jQuery.noConflict();<br/><br/>  /*--- この下にJavaScriptを記述していく---*/<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-9\"><h2>②JavaScript</h2><p>①の下に新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p>\n<p><strong>2023-09-04更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* ----------------------------------------------<br/>   SP時ナビゲーションの要素をハンバーガーメニュー内に移動 v1.0.0​​​​​<br/>  ---------------------------------------------- */<br/>  jQuery(function () {<br/>    function spMoveButton() {<br/>      /* 画面幅が769px以下のときの処理(SP) */<br/>      if (window.matchMedia('(max-width: 769px)').matches) {<br/>        if (!jQuery('.main-menu .sp_move').length || !jQuery('.main-menu .sp_move02').length) {<br/>          /* 「.sp_move」があれば、SP時ナビゲーションの要素をハンバーガーメニュー内の【下】に移動する */<br/>          jQuery('.sp_move').clone().appendTo('.main-menu ul.clearfix');<br/>          /* 「.sp_move02」があれば、SP時ナビゲーションの要素をハンバーガーメニュー内の【上】に移動する */<br/>          jQuery('.sp_move02').clone().prependTo('.main-menu ul.clearfix');<br/>          /* 「.sp_move」または「.sp_move02」が「.main-menu」内に存在していれば「.main-menu」に専用クラス付与 */<br/>          if (jQuery('.main-menu .sp_move').length || jQuery('.main-menu .sp_move02').length) {<br/>            jQuery('.main-menu').addClass('is-moved');<br/>          } else {<br/>            jQuery('.main-menu').removeClass('is-moved');<br/>          }<br/>        }<br/>      }<br/>    };<br/><br/>    /*--- ウィンドウのリサイズ完了後の処理 ---*/<br/>    const windowResize = () =&gt; {<br/>      let timer = 0;<br/>      let delay = 200;<br/>      window.addEventListener(<br/>        'resize',<br/>        () =&gt; {<br/>          clearTimeout(timer);<br/>          timer = setTimeout(() =&gt; {<br/>            spMoveButton();<br/>            spMoveButton02();<br/>          }, delay);<br/>        },<br/>        false<br/>      );<br/>    };<br/><br/>    windowResize();<br/>    spMoveButton();<br/> <br/>  });<br/>  /* ----------------------------------------------<br/>   SP時ナビゲーションの要素をハンバーガーメニュー内に移動 END<br/>  ---------------------------------------------- */<br/>&lt;/script&gt;<br/><br/><br/></section>\n\n<section class=\"content-element content-10\"> </section>"
  },
  {
    "title": "メガメニュー（2段）",
    "url": "https://js-part.hmup.jp/js/mega-menu02",
    "html": "<section class=\"content-element content-1\">\n<table>\n<thead>\n<tr>\n<th><br/>\n   追加可能</th>\n<th>変更可能箇所</th>\n<th>NG</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p><strong>■ナビ部分</strong></p>\n<ul>\n<li>ボタン<br/>\n（〜3個まで）※1</li>\n<li>ナビ数<br/>\n（〜7個まで推奨）※1</li>\n<li>検索パーツ</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>ナビ部分とメニュー内の幅・背景色</li>\n<li>メニュー内のスクロール有無</li>\n<li>セクションに入る仕様範囲のものであれば追加可能※3<br/>\n（4カラム以上などは✕）</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>スムーズスクロールの<br/>\n    速度変更<br/>\n     </li>\n</ul>\n<p><strong>■メニューに追加NG</strong></p>\n<ul>\n<li>デザインパーツ※2</li>\n</ul>\n<p>（▼自動吐き出しパーツ）※3</p>\n<ul>\n<li>記事リストパーツ</li>\n<li>タグ記事リストパーツ</li>\n<li>タグ一覧パーツ</li>\n<li>カテゴリ一覧パーツ</li>\n<li>記事ランキングパーツ　etc..</li>\n</ul>\n</td>\n<td>×</td>\n<td>◯<br/>\n※4</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：それ以上は、レスポンシブ時に崩れる恐れがあります。<br/>\n※2：一部のデザインパーツ（ボタンやリッチテキストなど）は、CSSを別ページから読み込む構造になっています。そのため、メガメニューを表示するページではそのCSSが反映されず、これらのパーツは正しく表示できません。そのため、<strong>メガメニュー内ではデフォルトパーツのみ使用</strong>できます。<br/>\n※3：自動出力パーツ（記事リスト等）はメガメニュー内では使用できません。（別ページから読み込む構造のため）<br/>\n※4：メガメニュー格納用セクションをクリップボードで配置するイメージになります。<br/>\n   ※メガメニュー内のリンクの設定は「リッチテキストパーツ」「リンクリストパーツ」「ボタンパーツ」のみ使用可能。<br/>\n   ※リッチテキストは操作性が悪いので、頻繁に更新されるのに向きません。ご了承頂いた上で、要引継ぎをお願いします。<br/>\n   　<strong>文言・リンクの変更前にはクリップボードでバックアップを保存すること</strong>をオススメします。<br/>\n   ※<strong>リンク、文言の変更、文字色の変更はリッチテキスト内の文字行を１行ずつドラッグし編集を行うようにしてください。</strong><br/>\n   　複数の文字列をドラッグして選択した状態で編集を行うと、公開画面でメガメニューが崩れる恐れがあります。<br/>\n※<a href=\"//js-part.hmup.jp/js/fade-slide-in\">フェードインアニメーション</a>を使用している場合はページ内リンク位置が一瞬ズレる不安定な挙動になります。</p>\n<p>※ページ内リンクはスクロール位置がずれる恐れがあるため非推奨です。</p>\n<p>※テキストパーツのHTMLモードを使用した文言の編集・修正はしないでください。コードの確認、不要なインラインスタイルを削除する、入り込んでしまった不要なデータコードをHTMLモードで削除することは可能です。</p>\n<p>※<strong>新リッチテキストパーツのリストを使ってメニューリストを作成する際にプレーンテキストをコピペした場合、作成後のメニューリストのHTML構造が「ul &gt; li &gt; div &gt; aになっていることを確認してください。</strong>li &gt; p &gt; aの構造になっていた場合、リスト化を解除した上でもう一度リスト化し　li &gt; div &gt; aに構造が変更されていることを確認してください。 JSがうまくあたらない場合、divが生成されていない可能性があります。</p>\n<p> </p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-2\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n<ul><li><a href=\"https://ferret-one.akamaized.net/images/659f8f76d92d1f0c06c2b555/large.png?utime=1704955766\"></a></li></ul></section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fafafa\"><h2>内部リンク確認用</h2><ul><li><a href=\"#nav01\">内部リンク①</a></li><li><a href=\"#nav02\">内部リンク②</a></li><li><a href=\"#nav03\">内部リンク③</a></li></ul><ul><li><a href=\"https://js-part.hmup.jp/js/g-navi01#nav03\">外部ページ遷移（疑似ナビ）</a></li><li><a href=\"https://js-part.hmup.jp/js/move-to-hamburger-at-sp#categoryA\">外部ページ遷移（共通ナビ）</a></li></ul><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>\n<p>編集画面用CSSを適切な位置に記述。</p>\n</li>\n<li>JavaScriptを使用したいパーツのセクションの<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。</li>\n</ul>\n<p><strong>①メガメニューを表示させたいページでの設定</strong></p>\n<ol>\n<li>ページ一覧にて、[メガメニューを表示させたいページ]を作成。</li>\n<li>編集画面内の設定から、「ナビゲーションを表示する」のチェックを外す。</li>\n<li>JavaScriptをフッター等に入れる。（※<strong>②メガメニュー編集用ページでの設定</strong>の3の手順が終わってから）</li>\n<li>格納用の空セクションを用意し、クラス名「<strong>js-megaMenu_contents_sec</strong>」を追加。フッター前などに配置する。<br/>\n※このセクションがないとメガメニューが反映されません。</li>\n</ol>\n<p><br/>\n<strong>②メガメニュー編集用ページでの設定</strong></p>\n<ol>\n<li>ページ一覧にて、[メガメニューを表示させたいページ]の下の階層に、[メガメニュー編集用ページ]を新規作成。</li>\n<li>[サイト内検索の検索結果から除外する]と[NOINDEX]にチェックを入れる。</li>\n<li>任意のURLを設定。（例：mega-menu02-parts）</li>\n<li><a href=\"#nav03\">コピーしたJavaScript</a>内の、【const megaMenuPartsPath = '/js/mega-menu02-parts';】の'URL部分'を上記で設定したURLに変更する。<br/>\n 例：URLがmega-menu-partsの場合 →【const megaMenuPartsPath = '/mega-menu-parts';】</li>\n<li>編集画面に入り、セクションを新規作成し、<br/>\n クラス名「<strong>js-megaMenu_custom_sec mega02Menu_custom_sec fixed</strong>」を追加。<br/>\n ※ナビを固定したくない場合、クラス「<strong>fixed</strong>」は削除してください。</li>\n<li>上記セクション内で行（row）を新規作成し、クラス名「<strong>navigation-cont_row</strong>」を追加。</li>\n<li>上記行（row）を2分割する。<br/>\n 左のカラム（col）にクラス名「<strong>logo_col</strong>」を追加。<br/>\n 右のカラム（col）にクラス名「<strong>cont_col</strong>」を追加。<br/>\n ※ロゴ画像「<strong>logo_img</strong>（デフォルトで準備）」やボタンは必要があれば追加。<br/>\n※別ページから読み込んでいるために一部デザインパーツのCSSが効かないので、<strong>デフォルトパーツのみ使用</strong>。</li>\n<li>上記行（row）のすぐ下に新規行（row）をもう一つ作成し、クラス名「<strong>nav_menu_row</strong>」を追加。<br/>\n 中にリンクリストを配置し、クラス名「<strong>nav_menu_list</strong>」を追加。→第2階層のリンクを設定。</li>\n<li>上記セクションのすぐ下に新規セクションを作成し、<br/>\n クラス名「<strong>js-megaMenu_down_list_sec mega02Menu_down_list_sec</strong>」を追加。</li>\n<li>上記セクション内で、行（row）を新規作成し、クラス名「<strong>js-downMenu_reference_row</strong>」を追加。</li>\n<li>行「<strong>js-downMenu_reference_row</strong>」内にリッチテキストを配置し、先程設定した第2階層のメニュー名と合わせる。<br/>\n （リッチテキストにはクラスの追加不要）※仕組みは<a href=\"#structure\">構造図</a>参照</li>\n<li>「<strong>js-downMenu_reference_row</strong>」の下に新規行（row）を作成し、デザインに合わせて通常通りパーツを置く。<br/>\n ※例として、デモでは「<strong>sub_menu_list_row</strong>」を準備。（詳細はCSS参照）必要に応じて活用してください。<br/>\n ※ボックスリンクを設置する場合、デザインパーツではなくデフォルトパーツを使用し、従来のクラス付与の方法（colに「<strong>box_link_col</strong>」、追加ボタンパーツに「<strong>btn_custom_boxlink</strong>」を付与）で設定してください。<br/>\n※別ページから読み込んでいるために一部デザインパーツのCSSが効かないので、<strong>デフォルトパーツのみ使用</strong>。</li>\n<li>第2階層のメニューを表示させたい分だけセクションを用意し、8.〜11.と同じ流れで設定してください。</li>\n</ol>\n<p> </p>\n<p><strong>③検索パーツをメガメニュー内で使用する場合（追加作業）</strong></p>\n<ol>\n<li>[メガメニュー編集用ページ]の共通エリア設定＞共通ヘッダーを使用を「OFF」にする。</li>\n<li>[メガメニュー編集用ページ]の編集画面に入り、ヘッダー（MV）・フッター・パンくずリストの表示を「ON」にする。<br/>\n※検索結果画面で表示されるレイアウトは[メガメニュー編集用ページ]のレイアウト設定に依存します。</li>\n<li>フッターにメガメニュー用のJSパーツが埋め込んであることを確認。</li>\n<li>メンビジを格納用セクションにするため、メンビジにクラス名「<strong>js-megaMenu_contents_sec</strong>」を追加。</li>\n<li>検索パーツのスタイルは適宜カスタムCSSで調整。</li>\n</ol>\n<ul>\n<li>​​​​​​新CMSの場合：別ページから読み込んでいるために一部デザインパーツのCSSが効かないので、<strong>デザパは使用禁止です。デフォルトパーツのみ使用可能です。</strong><br/>\n rowについても新規作成した方が確実にCSSの影響を受けないので安心かと思います。</li>\n</ul>\n<h2>注意点</h2><ul>\n<li>アップセル等でCSSが古い場合があるので、カスタムCSSに「<strong>scroll-behavior: smooth;</strong>」が適用されているか必ず確認して下さい。こちらのスタイルが当たっていないとスムーズスクロールが効きません。<br/>\n  </li>\n<li>SP編集画面で設定した画像はTAB時に反映されません。<br/>\n ※代替案として、【pcOnly/spOnly】で出し分けるなどで対応してください。<br/>\n  </li>\n<li>ページ内にフェードインのアニメーションを使用しているとページ内リンクのスクロール位置が一瞬ズレます。不安定な挙動になるため、制作前にご注意ください。</li>\n<li>\n<p>ページ内リンクはスクロール位置がずれる恐れがあるため非推奨です。<br/>\n  </p>\n</li>\n<li>\n<p>テキストパーツのHTMLモードを使用した文言の編集・修正はしないでください。コードの確認、不要なインラインスタイルを削除する、入り込んでしまった不要なデータコードをHTMLモードで削除することは可能です。<br/>\n  </p>\n</li>\n<li>\n<p><strong>新リッチテキストパーツのリストを使ってメニューリストを作成する際にプレーンテキストをコピペした場合、作成後のメニューリストのHTML構造が「ul &gt; li &gt; div &gt; aになっていることを確認してください。</strong>li &gt; p &gt; aの構造になっていた場合、リスト化を解除した上でもう一度リスト化し　li &gt; div &gt; aに構造が変更されていることを確認してください。 JSがうまくあたらない場合、divが生成されていない可能性があります。<br/>\n  </p>\n</li>\n<li>\n<p> 一部のデザインパーツ（ボタンやリッチテキストなど）は、CSSを別ページから読み込む構造になっています。そのため、メガメニューを表示するページではそのCSSが反映されず、これらのパーツは正しく表示できません。そのため、<strong>メガメニュー内ではデフォルトパーツのみ使用できます</strong>。</p>\n</li>\n</ul>\n</section>\n\n<section class=\"content-element content-4 js-megaMenu_contents_sec\" data-designpart=\"section-empty\" data-designpart-id=\"642f669ce4dc09621d945b2d\"><p><strong>メガメニューを一時的に格納するセクション（消さないでください）</strong></p>\n</section>\n\n<section class=\"content-element content-5\" data-designpart=\"section-tab-nab-v2\" data-designpart-id=\"6822d4806248c1056f815e0a\"><h2>JS・CSS・編集画面用CSS<br/></h2><ul><li><strong>jQuery</strong></li><li><strong>JS</strong></li><li><strong>CSS</strong></li><li><strong>編集画面用CSS</strong></li></ul><p>JavaScript埋め込みパーツを設置し、CDNで読み込んだ最新バージョンのjQueryを反映させます。<br/>※jQueryコンフリクト回避 のため<br/><br/>複数のJSパーツを使用する場合は、こちらの①jQueryの読み込みは一度だけで大丈夫です。</p><a href=\"#\">JSをコピーする</a><p><strong>2024-01更新（v1.0.0）</strong></p>\n&lt;script<br/>  src=\"https://code.jquery.com/jquery-3.6.0.min.js\"<br/>  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"<br/>  crossorigin=\"anonymous\"<br/>&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  'use strict';<br/>  /*--- jQueryコンフリクト回避 v1.0.0---*/<br/>  jQuery.noConflict();<br/><br/>  /*--- この下にJavaScriptを記述していく---*/<br/>&lt;/script&gt;<br/><br/><a href=\"#\">JSをコピーする</a><p><strong>2025-08-15更新（v2.1.0）</strong></p>\n&lt;script&gt;<br/>  /* ---------------------------<br/>    メガメニュー v2.1.0​​​​​<br/>  --------------------------- */<br/>  /*--- PC or SP　判定 ---*/<br/>  function windowPCorSP() {<br/>    if (window.matchMedia('(min-width: 770px)').matches) { <br/>      /* 画面幅が770px以上のときの処理(PC) */<br/>      return 'pc';<br/>    } else { <br/>      /* 画面幅が769px以下のときの処理(SP) */<br/>      return 'sp';<br/>    }<br/>  };<br/>  /*--- メガメニュー ---*/<br/>  jQuery(function() { <br/>    /*---------------------------------<br/>      初期化 (変数定義やクラス付与) START<br/>    ---------------------------------*/<br/>    /* メガメニューのパーツを配置しているURLのパスを指定する (先頭に「/」を入れてください) */<br/>    const megaMenuPartsPath = '/js/mega-menu02-parts'; <br/>    /* メガメニューを一時的に格納するセクション */<br/>    const megaMenuTemporarilyContentsSec = jQuery('.js-megaMenu_contents_sec'); <br/>    /* theme-fo-base */<br/>    const themeFoBase = jQuery('#fo-base'); <br/>    /* メインビジュアル（main-visual） */<br/>    const mainVisual = jQuery('.main-visual'); <br/>    /*--- 初期化 (変数定義やクラス付与) END ---*/ <br/>    /*--- メガメニューを別ページから読み込んで初期機能設定 START ---*/<br/>    megaMenuTemporarilyContentsSec.load(`${megaMenuPartsPath} .contents`,<br/>  function() { <br/>        /*---------------------------------<br/>            メガメニューPC時 START<br/>        ---------------------------------*/<br/>   /* ナビゲーションメガメニュー */<br/>   const megaMenuSec = jQuery('.js-megaMenu_custom_sec'); <br/>      /* 固定サイドバー */<br/>      const fixedSide = document.querySelector('.fixed-side');<br/>   /* メガダウンメニュー */<br/>   const megaDownMenuSec = jQuery('.js-megaMenu_down_list_sec'); <br/>   /* メガメニューナビゲーションリンク */<br/>   const nav_menu_link = jQuery('.js-megaMenu_custom_sec .nav_menu_list a'); <br/>   /* ダウンメニューか否か判定用テキスト */<br/>   const downMenu_reference_text = jQuery('.js-downMenu_reference_row p'); <br/>      /* サイドバーがあればクラスを追加 */<br/>      if (fixedSide &amp;&amp; megaMenuSec.length) {<br/>        megaMenuSec.addClass('has-fixed-side');<br/>      }<br/>   /* メガメニュー要素以外のセクションを駆除 */<br/>   jQuery('.js-megaMenu_contents_sec section').not(<br/>    '.js-megaMenu_custom_sec, .js-megaMenu_down_list_sec').css('display',<br/>    'none'); <br/>   /* メガメニューを「#fo-base」の上に配置 */<br/>   megaMenuTemporarilyContentsSec.insertBefore(themeFoBase); <br/>   /* メガメニューを囲んでいる不要なタグを削除 */<br/>   megaMenuSec.unwrap().unwrap(); <br/>   /* JSで「display: none;」を付与して、チラツキ防止用クラスを外す */<br/>   megaDownMenuSec.css('display', 'none'); <br/>   /*--- ダウンメニューか否か判定してクラスを付与 ----*/<br/>   nav_menu_link.each(function(index01, element01) {<br/>    downMenu_reference_text.each(function(index02, element02) {<br/>     if (jQuery(element01).text() === jQuery(element02).text()) { <br/>      /* idを生成 */<br/>      let id = index01 + 101;<br/>      let list = jQuery(element01).parent();<br/>      let downMenu = jQuery(element02).closest(<br/>       '.js-megaMenu_down_list_sec'); <br/>      /* ダウンメニューをリンクリスト内部に移動 */<br/>      downMenu.appendTo(list); <br/>      /* ダウンメニュー用のクラスを付与 */<br/>      list.addClass('downMenu'); <br/>      /* ダウンメニュー用のidをdata属性で付与 */<br/>      list.attr('data-mega-target', `${id}`); <br/>      downMenu.attr('data-mega-id', `${id}`);<br/>     }<br/>    });<br/>   }); <br/>   /* トグルクリック処理 */<br/>   jQuery('.main-megaMenu').on('click', '.toggle_icon', function(e) {<br/>    e.preventDefault();<br/>    const toggle = jQuery(this);<br/>    const li = toggle.closest('li');<br/>    const childUl = li.children('ul').first(); <br/>    /* トグルの開閉 */<br/>    if (childUl.length) {<br/>     childUl.slideToggle(200);<br/>     li.toggleClass('is-open');<br/>    }<br/>   }); <br/>   /* 判定用に使用したテキストを削除 */<br/>   jQuery('.js-downMenu_reference_row').css('display', 'none'); <br/>   /* ダウンメニューのリンクのみを取得 */<br/>   const downMenuLink = jQuery(<br/>    '.js-megaMenu_custom_sec .nav_menu_list .downMenu'); <br/>   /*ダウンメニューをホバーしたときにサブメガメニューを開く */<br/>   downMenuLink.hover(function() { <br/>    /*--- マウスカーソルが重なった時の処理 ---*/ <br/>    /* ホバーしているリンクにクラス付与 */<br/>    jQuery(this).addClass('is-opened');<br/>    let hoverLinkId = jQuery(this).attr('data-mega-target');<br/>    let downMenu = jQuery(`[data-mega-id=\"${hoverLinkId}\"]`);<br/>    downMenu.css('display', '');<br/>   }, function() { <br/>    /*--- マウスカーソルが離れた時の処理 ---*/<br/>    let hoverLinkId = jQuery(this).attr('data-mega-target');<br/>    let downMenu = jQuery(`[data-mega-id=\"${hoverLinkId}\"]`);<br/>    downMenu.css('display', 'none');<br/>    jQuery(this).removeClass('is-opened');<br/>   }); <br/>        /*------------- メガメニューPC時 END -------------*/<br/><br/>        /*---------------------------------<br/>            メガメニューSP時 START<br/>        ---------------------------------*/<br/>   /*--- 変数定義 ---*/ <br/>   /* ハンバーガーメニューボタン */<br/>   const megaMenuTriggerElement = jQuery('&lt;div class=\"megaMenu_trigger\"&gt;' +<br/>    '&lt;span&gt;&lt;/span&gt;' + '&lt;span&gt;&lt;/span&gt;' + '&lt;span&gt;&lt;/span&gt;' + '&lt;/div&gt;');<br/>   const mainMegaMenuElement = jQuery(<br/>    '&lt;nav class=\"main-megaMenu\"&gt;&lt;ul&gt;&lt;/ul&gt;&lt;/nav&gt;');<br/><br/>   function spMegaMenuSetUp() { <br/>    /* ul構造に基づいた比較キー生成関数 */<br/>    function getStructureKey(ul) {<br/>     const items = [];<br/>     ul.find('&gt; li').each(function() {<br/>      const li = jQuery(this);<br/>      const anchor = li.find('&gt; p &gt; a, &gt; a, a').first();<br/>      const linkText = anchor.text().trim();<br/>      const href = anchor.attr('href') || '';<br/>      const childUl = li.children('ul');<br/>      let childKey = '';<br/>      if (childUl.length) {<br/>       childKey = getStructureKey(childUl);<br/>      }<br/>      items.push(`${linkText}::${href}${childKey ? ` ($ {<br/>        childKey<br/>       })<br/>       ` : ''}`);<br/>     });<br/>     return items.join('|');<br/>    } <br/>    /* ハンバーガメニューを挿入＆削除 */<br/>    if (windowPCorSP() === 'sp' &amp;&amp; !jQuery('.megaMenu_trigger').length) { <br/>     /*--- 画面幅SPのとき ---*/ <br/>     /* ハンバーガーメニューボタンとメインメニューを追加 */<br/>     megaMenuTriggerElement.appendTo('.js-megaMenu_custom_sec &gt; .inner').ready(<br/>      function() {<br/>       mainMegaMenuElement.insertAfter('.megaMenu_trigger');<br/>       const megaMenuTrigger = jQuery('.megaMenu_trigger');<br/>       const mainMegaMenu = jQuery('.main-megaMenu');<br/>       mainMegaMenu.css('display', 'none'); <br/>       /* メインメニューにメニュー要素を追加 */<br/>       nav_menu_link.each(function() {<br/>        const parentLi = jQuery(this).parent('li');<br/>        const newText = parentLi.text().trim();<br/>        const newDataTarget = parentLi.attr('data-mega-target');<br/>        const exists = jQuery('.main-megaMenu &gt; ul &gt; li').filter(function() {<br/>         const existingText = jQuery(this).text().trim();<br/>         const existingDataTarget = jQuery(this).attr(<br/>          'data-mega-target');<br/>         return existingText === newText &amp;&amp; existingDataTarget ===<br/>          newDataTarget;<br/>        }).length &gt; 0;<br/>        if (!exists) {<br/>         const clonedLi = parentLi.clone(true, true);<br/>         clonedLi.appendTo('.main-megaMenu &gt; ul');<br/>        }<br/>       }); <br/>       /* メニューの下層（プルダウン）要素を追加する */ <br/>       /* 1階層目のメニューを取得 */<br/>       const level01 = jQuery('.main-megaMenu &gt; ul &gt; li');<br/>       level01.addClass('js-level-01');<br/>       level01.each(function(index01, element01) {<br/>        let id = jQuery(element01).attr('data-mega-target');<br/>        let section = jQuery(<br/>         `.main-megaMenu .js-megaMenu_down_list_sec[data-mega-id=\"${id}\"]`<br/>        ); <br/>        /* ボタンパーツの場合 */<br/>        let buttonLink = section.find('.button a').clone();<br/>        let buttonLinkList = buttonLink.removeClass().addClass(<br/>         'wrap-item');<br/>        if (buttonLink.length) {<br/>         buttonLinkList.appendTo(jQuery(element01));<br/>        } <br/>        /* リッチテキストもしくはリンクリストの場合 */ <br/>        /*--- ulをグループID＋構造キーで重複チェックして追加 ---*/<br/>        const addedStructureKeys = new Set(); <br/>        /* 重複防止用キー */<br/>        section.find('.component.richtext, .component.list').each(<br/>         function(groupIndex) {<br/>          const comp = jQuery(this);<br/>          const ul = comp.find('ul').first();<br/>          if (!ul.length) return;<br/>          const groupID = `${id}-${groupIndex}`;<br/>          const structureKey = getStructureKey(ul);<br/>          if (!addedStructureKeys.has(structureKey)) {<br/>           const clonedUl = ul.clone(true, true);<br/>           clonedUl.attr('data-group-id', groupID);<br/>           clonedUl.appendTo(jQuery(element01));<br/>           addedStructureKeys.add(structureKey);<br/>          }<br/>         });<br/>        section.remove(); <br/>        /* 各ループ内で確実に削除 */<br/>       });<br/>       jQuery('.main-megaMenu .js-megaMenu_down_list_sec').css('display',<br/>        'none');<br/>       jQuery('.wrap-item').wrap('&lt;li class=\"js-level-02\"&gt;');<br/>       jQuery('.wrap-item').removeAttr('class');<br/>       level01.each(function(index, element) {<br/>        let target = jQuery(element).find('.js-level-02');<br/>        target.wrapAll('&lt;ul class=\"js-level-01-cont\"&gt;');<br/>       }); <br/>       /* 1階層目 */<br/>       const level01List = jQuery('.main-megaMenu &gt; ul &gt; li');<br/>       const level02List = jQuery('.main-megaMenu &gt; ul &gt; li &gt; ul &gt; li');<br/>       const level03List = jQuery(<br/>        '.main-megaMenu &gt; ul &gt; li &gt; ul &gt; li &gt; ul &gt; li');<br/>       const level04List = jQuery(<br/>        '.main-megaMenu &gt; ul &gt; li &gt; ul &gt; li &gt; ul &gt; li &gt; ul &gt; li');<br/>       level01List.addClass('js-level-01');<br/>       level02List.addClass('js-level-02');<br/>       level03List.addClass('js-level-03');<br/>       level04List.addClass('js-level-04');<br/>       level02List.closest('ul').addClass('js-level-01-cont');<br/>       level03List.closest('ul').addClass('js-level-02-cont');<br/>       level04List.closest('ul').addClass('js-level-03-cont'); <br/>       /* トグルアイコンを追加 */<br/>       jQuery('.main-megaMenu li').each(function() {<br/>        const li = jQuery(this);<br/>        const childUl = li.children('ul');<br/>        if (childUl.length) { <br/>         /* li の直下の &lt;a&gt; または &lt;p&gt;&lt;a&gt; または &lt;strong&gt;&lt;a&gt; を探す */<br/>         let anchor = li.children('a, p &gt; a, strong &gt; a').first(); <br/>         /* それでも見つからない場合、li の中の a を最初に取得 */<br/>         if (!anchor.length) {<br/>          anchor = li.find('a').first();<br/>         } <br/>         /* toggle_icon が含まれていなければ追加 */<br/>         if (anchor.length &amp;&amp; anchor.find('.toggle_icon').length === 0) {<br/>          anchor.append('&lt;span class=\"toggle_icon\"&gt;&lt;/span&gt;');<br/>         }<br/>        }<br/>       }); <br/>       /* downMenu項目（例：お知らせ）にもトグルアイコンを付与 */<br/>       jQuery('.main-megaMenu .downMenu &gt; a').each(function() {<br/>        if (jQuery(this).find('.toggle_icon').length === 0) {<br/>         jQuery(this).append('&lt;span class=\"toggle_icon\"&gt;&lt;/span&gt;');<br/>        }<br/>       }); <br/>       /* ハンバーガーメニュークリックイベント */<br/>       megaMenuTrigger.on('click', function() {<br/>        megaMenuTrigger.toggleClass('is-active');<br/>        mainMegaMenu.toggleClass('is-active');<br/>        mainMegaMenu.toggle();<br/>        jQuery('html').toggleClass('is-locked');<br/>        megaMenuSec.toggleClass('is-open');<br/>       }); <br/>       /* トグル初期化用：すべて非表示にする */<br/>       jQuery('.main-megaMenu li ul').css('display', 'none');<br/>      });<br/>    } else if (windowPCorSP() === 'pc') { <br/>     /*--- 画面幅PCのとき ---*/ <br/>     /* ハンバーガメニューボタンとメインメニューを削除 */<br/>     jQuery('.megaMenu_trigger').removeClass('is-active');<br/>     jQuery('.main-megaMenu').removeClass('is-active');<br/>     jQuery('.megaMenu_trigger').css('display', 'none');<br/>     jQuery('.main-megaMenu ul li').css('display', 'none');<br/>     jQuery('.main-megaMenu').css('display', 'none');<br/>     jQuery('.downMenu a .toggle_icon').css('display', 'none'); <br/>     /* ハンバーガメニューが開いてるときのクラス名を削除 */<br/>     jQuery('html').removeClass('is-locked');<br/>     jQuery('is-open').removeClass('is-open');<br/>    }<br/>   }; <br/>      /*------------- メガメニューSP時 END -------------*/<br/><br/>      /*--- ウィンドウのリサイズ完了後の処理 ---*/<br/>   const windowResize = () =&gt; {<br/>    let timer = 0;<br/>    let delay = 100;<br/>    window.addEventListener('resize', () =&gt; {<br/>     clearTimeout(timer);<br/>     timer = setTimeout(() =&gt; {<br/>      spMegaMenuSetUp();<br/>     }, delay);<br/>    }, false);<br/>   };<br/>   spMegaMenuSetUp();<br/>   windowResize();<br/>  }); <br/>  /*------------- メガメニューを別ページから読み込んで初期機能設定 END -------------*/<br/>  }); <br/>  /* SPメニューのトグル処理（再定義） */<br/>  jQuery(document).off('click', '.main-megaMenu .toggle_icon').on('click',<br/> '.main-megaMenu .toggle_icon',<br/> function(e) {<br/>  e.preventDefault();<br/>  const li = jQuery(this).closest('li');<br/>  const targetUl = li.children('ul');<br/>  if (targetUl.length) {<br/>   targetUl.stop(true, true).slideToggle(200);<br/>   li.toggleClass('is-open');<br/>   jQuery(this).toggleClass('is-open');<br/>  }<br/> }); <br/>  /*--- ページ内遷移ずれる対策 ---*/<br/>  window.addEventListener('load', () =&gt; {<br/>    setTimeout(() =&gt; {<br/>      const headerSec = document.querySelector('.js-megaMenu_custom_sec'); <br/>      /* メガメニューを取得 */<br/>      if (headerSec) {<br/>        const headerHeight = headerSec.offsetHeight; <br/>        /* メガメニューの高さを取得 */ <br/>        /* 固定ナビの場合の処理 */<br/>        if (headerSec.classList.contains('fixed')) {<br/>          document.documentElement.style.setProperty('--navi-height',<br/>            `${headerHeight}px`);<br/>        }<br/>      }<br/>    }, 300);<br/>  }); <br/>  /*--- ページ内遷移ずれる対策 END ---*/<br/>  /* ---------------------------<br/>    メガメニュー END<br/>  --------------------------- */<br/><br/>&lt;/script&gt;<br/><br/><br/><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p><p>※新旧どちらにも対応できるようにデフォルトでは固定値で設定しているため、必要に応じて変数を設定してください。</p><a href=\"#\">CSSをコピーする</a><p><strong>2025-08-15更新（v2.1.0）</strong></p>\n/*----- メガメニュー（2段） START v2.1.0​​​​​-----*/<br/>/* --------------------------------<br/>    variables（変数）<br/>----------------------------------- */<br/>$mega02-navigation_bg_color: $header_bg_color; //メガメニューの背景色<br/>$mega02-navigation_font_size: $navigation_font_size; //メガメニューのフォントサイズ（1〜3階層）<br/>$mega02-navigation_font_weight: $navigation_font_weight; //メガメニューのフォントの太さ（1〜3階層） normal or bold<br/>$mega02-navigation_hover_opacity: $navigation_hover_opacity; //メガメニューをホバーした時の透視度<br/>$mega02-navigation_bg2_color: $navigation_bg2_color; //メガメニューの背景色（2階層以下）<br/>$mega02-navigation_hover_bg2_color: $navigation_hover_bg_color; //メガメニューをホバーした時の背景色<br/>$mega02-navigation_text_color: $navigation_text_color; //メガメニューのテキストカラー<br/>$mega02-navigation_hover_text_color: $navigation_hover_text_color; //メガメニューをホバーした時のテキストカラー<br/>$mega02-navigation_text2_color: $navigation_text2_color; //メガメニューのテキストカラー（2階層以下）<br/><br/>//メガメニュー（2段） ハンバーガーメニュー<br/>$mega02-navigation_sp_font_size: $navigation_sp_font_size; //メガメニュー（SP）時のテキストサイズ（1〜3階層）<br/>$mega02-navigation_sp_font_weight: $navigation_sp_font_weight; //メガメニュー（SP）時のテキストの太さ（1〜3階層） normal or bold<br/>$mega02-navigation_sp_text_color: $navigation_sp_text_color; //メガメニュー（SP）時のテキストカラー １階層<br/>$mega02-navigation_sp_text2_color: $navigation_sp_text2_color; //メガメニュー（SP）時のテキストカラー（2階層）<br/>$mega02-navigation_sp_text3_color: $navigation_sp_text3_color; //メガメニュー（SP）時のテキストカラー（3階層）<br/>$mega02-navigation_sp_hover_text_color: $navigation_sp_hover_text_color; //メガメニュー（SP）時のホバーした時の2階層のテキスト＆矢印のカラー<br/>$mega02-navigation_sp_arrow1_color: $navigation_sp_arrow1_color; //メガメニュー（SP） 矢印カラー（1階層）<br/>$mega02-navigation_sp_arrow2_color: $navigation_sp_arrow2_color; //メガメニュー（SP） 矢印カラー（2階層）<br/>$mega02-navigation_sp_bg_color: $navigation_sp_bg_color; //メガメニュー（SP）時の背景色（1階層）<br/>$mega02-navigation_sp_bg2_color: $navigation_sp_bg2_color; //メガメニュー（SP）時の背景色（２階層）<br/>$mega02-navigation_sp_bg3_color: $navigation_sp_bg3_color; //メガメニュー（SP）時の背景色（3階層）<br/>$mega02-navigation_sp_border-bottom: $navigation_sp_border-bottom; //メガメニュー（SP）時のボーダー（hamburger_custom 使用時）<br/>/*------------- variables（変数）END -------------*/<br/><br/>//初期読み込み時に格納セクションが一瞬見えてしまう（チラつき）防止<br/>.js-megaMenu_contents_sec {<br/>  display: none !important;<br/>}<br/>//固定サイドバー対策<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;.js-megaMenu_custom_sec {<br/>    &amp;.has-fixed-side {<br/>      @media screen and (min-width: 1201px) {<br/>        width: calc(100% - 420px);<br/>      }<br/>    }<br/>  }<br/>}<br/>/* SP時 iOSのアドレスバーズレ防止 */<br/>html {<br/>  &amp;.is-locked {<br/>    overflow: hidden;<br/>    -ms-touch-action: none;<br/>    touch-action: none;<br/>    &amp;::before {<br/>      content: '';<br/>      position: fixed;<br/>      z-index: 5;<br/>      top: 0;<br/>      left: 0;<br/>      width: 100vw;<br/>      height: 100vh;<br/>      background-color: #fff;<br/>    }<br/>  }<br/>}<br/><br/>/*-- メガメニュー（2段） 共通設定 --*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;:is(<br/>    .mega02Menu_custom_sec,<br/>    .mega02Menu_down_list_sec,<br/>  ) * {<br/>    box-sizing: border-box;<br/>  }<br/>}<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;:where(<br/>    .mega02Menu_custom_sec,<br/>    .mega02Menu_down_list_sec<br/>   ) {<br/>    width: 100%;<br/>    font-family: 'Noto Sans JP', sans-serif;//適宜変更<br/>    line-height: 1.5;//適宜変更<br/>    letter-spacing: .04em;//適宜変更<br/>    .inner {<br/>      width: 100% !important;<br/>      max-width: 100% !important;<br/>      margin: auto;<br/>      .row {<br/>        .col {<br/>          .component {<br/>            margin: 10px 0;<br/>            a {<br/>              text-decoration: none;<br/>              &amp;:hover {<br/>                opacity: $hover_opacity;<br/>              }<br/>            }<br/>            // CTA共通<br/>            &amp;.cta {<br/>              margin: 0;<br/>              .cta-row {<br/>                display: table;<br/>                table-layout: fixed;<br/>                width: 100%;<br/>                margin: 0;<br/>                @include breakpoint-sp {<br/>                  display: block;<br/>                }<br/>                &amp; + .cta-row {<br/>                  @include breakpoint-pc {<br/>                    padding-top: 10px;<br/>                  }<br/>                }<br/>                .cta-column {<br/>                  display: table-cell;<br/>                  vertical-align: top;<br/>                  margin: 0;<br/>                  @include breakpoint-sp {<br/>                    display: block;<br/>                    width: 100% !important;<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- メガメニュー（2段）共通設定 END--*/<br/><br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  /*-- メガメニュー（2段） ナビ部分 --*/<br/>  &amp;.mega02Menu_custom_sec {<br/>    background: $mega02-navigation_bg_color;<br/>    box-shadow: $navigation_box_shadow_common;<br/>    position: relative;<br/>    z-index: 10;<br/>    padding: 0;<br/>    // オプション ナビゲーション上部固定のとき<br/>    &amp;.fixed {<br/>      position: sticky;<br/>      z-index: 1001;<br/>      top: 0;<br/>    }<br/>    &amp;.is-open {<br/>      @include breakpoint-sp {<br/>        box-shadow: none;<br/>      }<br/>    }<br/>    .inner {<br/>      .row {<br/>        &amp;.navigation-cont_row {<br/>          display: flex;<br/>          justify-content: space-between;<br/>          align-items: center;<br/>          max-width: 1240px !important;<br/>          margin: auto;<br/>          padding: 10px 20px;<br/>          @include breakpoint-sp {<br/>            min-height: 51px;<br/>            padding: 0;<br/>          }<br/>          .col {<br/>            padding: 0;<br/>            &amp;.logo_col {<br/>              display: flex !important;<br/>              align-items: center;<br/>              justify-content: flex-start;<br/>              width: auto !important;<br/>              @include breakpoint-sp {<br/>                padding: 0 0 0 10px;<br/>              }<br/>              .component {<br/>                margin: 0;<br/>                &amp;.image {<br/>                  &amp;.logo_img {<br/>                    max-width: $header_logo;<br/>                    img {<br/>                      max-height: 56px;//ナビhover時の上矢印▲の位置ズレ対策<br/>                      @include breakpoint-sp {<br/>                        max-height: $header_sp_logo;<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>            &amp;.cont_col {<br/>              display: flex !important;<br/>              align-items: center;<br/>              justify-content: flex-end;<br/>              width: auto !important;<br/>              padding: 10px 0;<br/>              @include breakpoint-sp {<br/>                padding: 0 68px 0 0;<br/>              }<br/>              .component {<br/>                margin: 0;<br/>                &amp;.button {<br/>                  margin-left: 15px;<br/>                  @include breakpoint-sp {<br/>                    margin: 0;<br/>                  }<br/>                  .button-cont {<br/>                    a {<br/>                      &amp;.size-s {<br/>                        min-width: 200px;<br/>                      }<br/>                      &amp;:is(.size-s, .size-m, .size-l) {<br/>                        @include breakpoint-sp {<br/>                          min-width: initial;<br/>                          border-radius: 0;<br/>                          padding: 5px;<br/>                          border: none;<br/>                          font-size: 0;<br/>                          background: none;<br/>                        }<br/>                        &amp;::before {<br/>                          @include breakpoint-sp {<br/>                            font-size: 22px;<br/>                            color: #ffad2f;<br/>                            margin: 0;<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                  &amp;.btn_custom_tel {<br/>                    .button-cont {<br/>                      a {<br/>                        &amp;.size-s {<br/>                          @include breakpoint-pc {<br/>                            min-width: initial;<br/>                          }<br/>                          @include breakpoint-pro_s {<br/>                            background: none;<br/>                            border: none;<br/>                            border-radius: 0;<br/>                            font-size: 0;<br/>                          }<br/>                          &amp;::before {<br/>                            @include breakpoint-pro_s {<br/>                              font-size: 22px;<br/>                              color: #ffad2f;<br/>                              margin: 0;<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>        &amp;.nav_menu_row {<br/>          .col {<br/>            padding: 0;<br/>            .component {<br/>              &amp;.list {<br/>                &amp;.nav_menu_list {<br/>                  max-width: 1140px;<br/>                  margin: 0 auto;<br/>                  height: 100%;<br/>                  @include breakpoint-sp {<br/>                    display: none !important;<br/>                  }<br/>                  &gt; ul {<br/>                    display: table;<br/>                    width: 100%;<br/>                    height: 100%;<br/>                    &gt; li {<br/>                      display: table-cell;<br/>                      margin: 0;<br/>                      padding: 0;<br/>                      font-size: $mega02-navigation_font_size;<br/>                      color: $mega02-navigation_text_color;<br/>                      &amp;:hover {<br/>                        background-color: $mega02-navigation_hover_bg2_color;<br/>                      }<br/>                      &amp;.downMenu {<br/>                        &gt; a {<br/>                          position: relative;<br/>                          padding-right: 30px;<br/>                          &amp;::after {<br/>                            content: \"\\f107\";<br/>                            font-family: $font_family_awsm;<br/>                            font-size: 20px;<br/>                            line-height: 1;<br/>                            color: $mega02-navigation_text_color;<br/>                            position: absolute;<br/>                            top: 50%;<br/>                            right: 10px;<br/>                            transform: translateY(-50%);<br/>                            margin-top: 0;<br/>                          }<br/>                        }<br/>                      }<br/>                      &gt; a {<br/>                        display: block;<br/>                        min-width: 125px;<br/>                        height: 100%;<br/>                        text-align: center;<br/>                        text-decoration: none;<br/>                        font-weight: $mega02-navigation_font_weight;<br/>                        line-height: 1.2;<br/>                        color: $mega02-navigation_text_color;<br/>                        padding: 20px 10px;<br/>                        position: relative;<br/>                        border: 0;<br/>                        @include breakpoint-pro_s {<br/>                          min-width: initial;<br/>                        }<br/>                        &amp;:hover {<br/>                          color: $mega02-navigation_hover_text_color;<br/>                          opacity: $mega02-navigation_hover_opacity;<br/>                          &amp;::after {<br/>                            transform: rotate(180deg) translateY(50%);<br/>                            color: $mega02-navigation_hover_text_color;<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>      // ハンバーガーメニュー<br/>      .megaMenu_trigger {<br/>        cursor: pointer;<br/>        width: 60px;<br/>        height: 51px;<br/>        position: absolute;<br/>        right: 0;<br/>        top: 0;<br/>        background: #ffad2f;<br/>        span {<br/>          display: inline-block;<br/>          width: 30px;<br/>          height: 3px;<br/>          border-radius: 3px;<br/>          background: #fff;<br/>          position: absolute;<br/>          left: 50%;<br/>          transform: translateX(-50%);<br/>          transition: all .4s;<br/>          &amp;:nth-child(1) {<br/>            top: 15px;<br/>          }<br/>          &amp;:nth-child(2) {<br/>            top: 24px;<br/>          }<br/>          &amp;:nth-child(3) {<br/>            bottom: 15px;<br/>          }<br/>        }<br/>        /* ハンバーガメニュー オープン時 */<br/>        &amp;.is-active {<br/>          span {<br/>            &amp;:nth-child(1) {<br/>              -webkit-transform: translateY(10px) translateX(-50%) rotate(-45deg);<br/>              transform: translateY(10px) translateX(-50%) rotate(-45deg);<br/>            }<br/>            &amp;:nth-child(2) {<br/>              opacity: 0;<br/>            }<br/>            &amp;:nth-child(3) {<br/>              -webkit-transform: translateY(-8px) translateX(-50%) rotate(45deg);<br/>              transform: translateY(-8px) translateX(-50%) rotate(45deg);<br/>            }<br/>          }<br/>        }<br/>      }<br/>      // メインメガメニュー（2段） PC時 {<br/>      @include breakpoint-pc {<br/>        .main-megaMenu {<br/>          display: none;<br/>        }<br/>      }<br/>      // メインメガメニュー（2段） SP時<br/>      @include breakpoint-sp {<br/>        .main-megaMenu {<br/>          height: calc(100vh + 100px);<br/>          overflow: auto;<br/>          font-family: 'Noto Sans JP', sans-serif;<br/>          background: #fff;<br/>          padding-bottom: 310px;<br/>          ul {<br/>            li {<br/>              a {<br/>                display: block;<br/>                position: relative;<br/>                padding: 20px;<br/>                text-decoration: none;<br/>                font-size: $mega02-navigation_sp_font_size;<br/>                font-weight: $mega02-navigation_sp_font_weight;<br/>                line-height: 1.2;<br/>                color: $mega02-navigation_sp_text_color;<br/>                border-bottom: 1px dashed #ffad2f;<br/>                strong, span {<br/>                  font-weight: inherit;<br/>                }<br/>              }<br/>              /* 2階層目トリガー */<br/>              &amp;.downMenu {<br/>                a {<br/>                  padding: 20px 45px 20px 20px;<br/>                  .toggle_icon {<br/>                    display: flex;<br/>                    align-items: center;<br/>                    justify-content: center;<br/>                    position: absolute;<br/>                    top: 50%;<br/>                    right: 0;<br/>                    width: 50px;<br/>                    height: 45px;<br/>                    transform: translateY(-50%);<br/>                    &amp;::before,<br/>                    &amp;::after {<br/>                      background-color: $mega02-navigation_sp_arrow1_color;<br/>                    }<br/>                    &amp;::before {<br/>                      content: '';<br/>                      width: 2px;<br/>                      height: 18px;<br/>                      transform: rotate(0);<br/>                      -webkit-transform: rotate(0);<br/>                      z-index: 1;<br/>                      transition: all .5s ease;<br/>                    }<br/>                    &amp;::after {<br/>                      content: '';<br/>                      position: relative;<br/>                      right: 2px;<br/>                      width: 2px;<br/>                      height: 18px;<br/>                      transform: rotate(90deg);<br/>                      -webkit-transform: rotate(90deg);<br/>                      transition: all .5s ease;<br/>                    }<br/>                    &amp;.is-open {<br/>                      &amp;::before {<br/>                        transform: rotate(90deg);<br/>                        -webkit-transform: rotate(90deg);<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>              ul {<br/>                .js-level-02 {<br/>                  a {<br/>                    padding: 20px 30px 20px calc(20px + 1em);<br/>                  }<br/>                  .js-level-03 {<br/>                    a {<br/>                      background: #F2F2F2;<br/>                      padding: 20px 30px 20px calc(20px + 2em);<br/>                    }<br/>                    .js-level-04 {<br/>                      a {<br/>                        padding: 20px 30px 20px calc(20px + 3em);<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>  /*-- メガメニュー（2段） メニュー内 --*/<br/>  &amp;.mega02Menu_down_list_sec {<br/>    max-width: 1140px;<br/>    max-height: 500px;<br/>    overflow-y: auto;<br/>    background: #fff;<br/>    box-shadow: $navigation_box_shadow_common;<br/>    color: $mega02-navigation_text2_color;<br/>    position: absolute;<br/>    top: 100%;<br/>    left: 0;<br/>    right: 0;<br/>    z-index: 1;<br/>    margin: auto;<br/>    .inner {<br/>      padding: 40px 30px;<br/>      .row {<br/>        // 以下、メニュー内のデザインに合わせて適宜変更（不要であれば削除）<br/>        &amp;.sub_menu_list_row {<br/>          display: flex;<br/>          gap: 45px;<br/>          &amp; + .sub_menu_list_row {<br/>            margin-top: 20px;<br/>          }<br/>          .col {<br/>            width: 100%;<br/>            padding: 0;<br/>            position: relative; <br/>            .component {<br/>              &amp;.richtext {<br/>                // メニュー内リスト<br/>                &amp;.mega02Menu_list01 {<br/>                  ul {<br/>                    li {<br/>                      display: block;<br/>                      font-size: 16px;<br/>                      line-height: 1.5;<br/>                      color: #333;<br/>                      margin: 0;<br/>                      padding: 0;<br/>                      div {<br/>                        a {<br/>                          display: block;<br/>                          font-size: inherit;<br/>                          color: inherit;<br/>                          text-decoration: none;<br/>                          &amp;:hover {<br/>                            opacity: $hover_opacity;<br/>                          }<br/>                        }<br/>                      }<br/>                      a {<br/>                        display: block;<br/>                        font-size: inherit;<br/>                        color: inherit;<br/>                        text-decoration: none;<br/>                        &amp;:hover {<br/>                          opacity: $hover_opacity;<br/>                        }<br/>                      }<br/>                      ul {<br/>                        margin: 0 0 0 10px !important;<br/>                        li {<br/>                          margin-top: 10px;<br/>                          div {<br/>                            a {<br/>                              border: none;<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                  /* 1階層目 */<br/>                  &gt; div {<br/>                    &gt; ul {<br/>                      margin: 0;<br/>                      &gt; li {<br/>                        &amp; + li {<br/>                          margin-top: 10px;<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>              &amp;.list {<br/>                // [お知らせ]リスト<br/>                &amp;.mega02Menu_list02 {<br/>                  ul {<br/>                    li {<br/>                      display: block;<br/>                      font-size: 16px;<br/>                      line-height: 1.5;<br/>                      color: #333;<br/>                      margin: 0;<br/>                      padding: 0;<br/>                      &amp; + li {<br/>                        margin-top: 10px;<br/>                      }<br/>                      a {<br/>                        display: block;<br/>                        text-decoration: none;<br/>                        font-weight: bold;<br/>                        color: inherit;<br/>                        padding: 0;<br/>                        &amp;:hover {<br/>                          opacity: $hover_opacity;<br/>                          background: none;<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- メガメニュー（2段） END -----*/<p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p><a href=\"#\">CSSをコピーする</a><p><strong>2024-01-11更新（v1.0.0）</strong></p>\n/*-- メガメニュー（2段） 編集画面用 START v1.0.0​​​​​--*/<br/>  //初期読み込み時に格納セクションが一瞬見えてしまう（チラつき）防止<br/>  .js-megaMenu_contents_sec {<br/>    display: block !important;<br/>    border: 1px solid #f00;<br/>    &amp;::before {<br/>      content: \"メガメニュー格納セクション\";<br/>      position: absolute;<br/>      color: #fff;<br/>      background: #f00;<br/>      padding: 5px 5px;<br/>      right: 0;<br/>      top: -24px;<br/>      font-size: 14px;<br/>      line-height: 1;<br/>    }<br/>  }<br/>  .theme-fo-base .wrapper .contents {<br/>    :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>      &amp;.mega02Menu_custom_sec {<br/>        padding: 20px 0 !important;<br/>        .inner {<br/>          max-width: 1100px !important;<br/>          padding: 0 20px !important;<br/>          .row {<br/>            &amp;.navigation-cont_row {<br/>              .col {<br/>                &amp;.logo_col {<br/>                  width: 20% !important;<br/>                }<br/>                &amp;.cont_col {<br/>                  width: 80% !important;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>        &amp;.fixed {<br/>          position: relative;<br/>          top: initial;<br/>          border: 1px solid blue;<br/>          &amp;::before {<br/>            content: \"メガメニュー上部固定中（クラス名：fixed） ※固定を外したい場合はこのクラスを外す。\";<br/>            position: absolute;<br/>            color: #fff;<br/>            background: blue;<br/>            padding: 0 5px;<br/>            right: 0;<br/>            top: -24px;<br/>          }<br/>        }<br/>      }<br/>      &amp;.mega02Menu_down_list_sec {<br/>        max-width: 100%;<br/>        max-height: initial;<br/>        overflow-y: initial;<br/>        position: relative;<br/>        top: initial;<br/>        left: initial;<br/>        .inner {<br/>          max-width: 1100px !important;<br/>          .row {<br/>            // メガメニューでドロップダウンメニューがついているリンクかどうか判定するためのrow<br/>            &amp;.js-downMenu_reference_row {<br/>              border: 1px solid red;<br/>              background: #000;<br/>              &amp;::before {<br/>                content: \"ナビゲーションのメニュー名と同じものを入れてください。（どのメニューに対応するか判定用。公開画面では非表示の行になります。）\";<br/>                position: absolute;<br/>                color: #fff;<br/>                background: red;<br/>                padding: 5px 5px;<br/>                right: 0;<br/>                top: -24px;<br/>                font-size: 14px;<br/>                line-height: 1;<br/>              }<br/>              .col {<br/>                padding: 10px 20px;<br/>                .component {<br/>                  color: #fff;<br/>                  &amp;.heading {<br/>                    :is(h2, h3) {<br/>                      margin: 0;<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>/*-- メガメニュー（2段） 編集画面用 END --*/</section>\n\n<section class=\"content-element content-6\" data-designpart=\"section-tab-nab-v2\" data-designpart-id=\"6822d4806248c1056f815e0a\" style=\"background-color:#fbf9ef\"><h2>旧リッチテキストパーツ用<br/>JS・CSS・編集画面用CSS<br/></h2><p><strong>【旧リッチテキストパーツ】で組み込みが必要な場合にお使いください。</strong></p><ul><li><strong>jQuery</strong></li><li><strong>JS</strong></li><li><strong>CSS</strong></li><li><strong>編集画面用CSS</strong></li></ul><p>JavaScript埋め込みパーツを設置し、CDNで読み込んだ最新バージョンのjQueryを反映させます。<br/>※jQueryコンフリクト回避 のため<br/><br/>複数のJSパーツを使用する場合は、こちらの①jQueryの読み込みは一度だけで大丈夫です。</p><a href=\"#\">JSをコピーする</a><p><strong>2024-01更新（v1.0.0）</strong></p>\n&lt;script<br/>  src=\"https://code.jquery.com/jquery-3.6.0.min.js\"<br/>  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"<br/>  crossorigin=\"anonymous\"<br/>&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  'use strict';<br/>  /*--- jQueryコンフリクト回避 v1.0.0---*/<br/>  jQuery.noConflict();<br/><br/>  /*--- この下にJavaScriptを記述していく---*/<br/>&lt;/script&gt;<br/><br/><p>jQueryの下に新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p><a href=\"#\">JSをコピーする</a><p><strong>2025-08-15更新（v1.1.0）</strong></p>\n&lt;script&gt;<br/>  /* ---------------------------<br/>    メガメニュー v1.1.0​​​​​<br/>  --------------------------- */<br/>  /*--- PC or SP　判定 ---*/<br/>  function windowPCorSP() {<br/>    if (window.matchMedia('(min-width: 770px)').matches) {<br/>      /* 画面幅が770px以上のときの処理(PC) */<br/>      return 'pc';<br/>    } else {<br/>      /* 画面幅が769px以下のときの処理(SP) */<br/>      return 'sp';<br/>    }<br/>  };<br/><br/>  /*--- メガメニュー ---*/<br/>  jQuery(function () {<br/>    /*---------------------------------<br/>      初期化 (変数定義やクラス付与) START<br/>    ---------------------------------*/<br/>    /* メガメニューのパーツを配置しているURLのパスを指定する (先頭に「/」を入れてください) */<br/>    const megaMenuPartsPath = '/js/mega-menu02-parts';<br/>    /* メガメニューを一時的に格納するセクション */<br/>    const megaMenuTemporarilyContentsSec = jQuery('.js-megaMenu_contents_sec');<br/>    /* theme-fo-base */<br/>    const themeFoBase = jQuery('#fo-base');<br/>    /* メインビジュアル（main-visual） */<br/>    const mainVisual = jQuery('.main-visual');<br/>    /*------------- 初期化 (変数定義やクラス付与) END -------------*/<br/><br/>    /*------------- メガメニューを別ページから読み込んで初期機能設定 START -------------*/<br/>    megaMenuTemporarilyContentsSec.load(`${megaMenuPartsPath} .contents`, function() {<br/><br/>      /*---------------------------------<br/>        メガメニューPC時 START<br/>      ---------------------------------*/<br/>      /* ナビゲーションメガメニュー */<br/>      const megaMenuSec = jQuery('.js-megaMenu_custom_sec');<br/>      /* 固定サイドバー */<br/>      const fixedSide = document.querySelector('.fixed-side');<br/>      /* メガダウンメニュー */<br/>      const megaDownMenuSec = jQuery('.js-megaMenu_down_list_sec');<br/>      /* メガメニューナビゲーションリンク */<br/>      const nav_menu_link = jQuery('.js-megaMenu_custom_sec .nav_menu_list a');<br/>      /* ダウンメニューか否か判定用テキスト */<br/>      const downMenu_reference_text = jQuery('.js-downMenu_reference_row p');<br/>      /* サイドバーがあればクラスを追加 */<br/>      if (fixedSide &amp;&amp; megaMenuSec.length) {<br/>        megaMenuSec.addClass('has-fixed-side');<br/>      }<br/>      /* メガメニュー要素以外のセクションを駆除 */<br/>      jQuery('.js-megaMenu_contents_sec section').not('.js-megaMenu_custom_sec, .js-megaMenu_down_list_sec').css('display','none');<br/>      /* メガメニューを「#fo-base」の上に配置 */<br/>      megaMenuTemporarilyContentsSec.insertBefore(themeFoBase);<br/>      /* メガメニューを囲んでいる不要なタグを削除 */<br/>      megaMenuSec.unwrap().unwrap();<br/>      /* JSで「display: none;」を付与して、チラツキ防止用クラスを外す */<br/>      megaDownMenuSec.css('display', 'none');<br/><br/>      /*--- ダウンメニューか否か判定してクラスを付与 ----*/<br/>      nav_menu_link.each(function(index01, element01) {<br/>        downMenu_reference_text.each(function(index02, element02) {<br/>          if ( jQuery(element01).text() === jQuery(element02).text() ) {<br/>            /* idを生成 */<br/>            let id = index01 + 101;<br/>            let list = jQuery(element01).parent();<br/>            let downMenu = jQuery(element02).closest('.js-megaMenu_down_list_sec');<br/><br/>            /* ダウンメニューをリンクリスト内部に移動 */<br/>            downMenu.appendTo(list);<br/><br/>            /* ダウンメニュー用のクラスを付与 */<br/>            list.addClass('downMenu');<br/>            /* ダウンメニュー用のidをdata属性で付与 */<br/>            list.attr('data-mega-target', `${id}`);<br/>            /* ダウンメニュー用のidをdata属性で付与 */<br/>            downMenu.attr('data-mega-id', `${id}`);<br/>          }<br/>        });<br/>      });<br/><br/>      /* 判定用に使用したテキストを削除 */<br/>      jQuery('.js-downMenu_reference_row').css('display','none');<br/><br/>      /* ダウンメニューのリンクのみを取得 */<br/>      const downMenuLink = jQuery('.js-megaMenu_custom_sec .nav_menu_list .downMenu');<br/><br/>      /*ダウンメニューをホバーしたときにサブメガメニューを開く */<br/>      downMenuLink.hover(<br/>        function() {<br/>          /*--- マウスカーソルが重なった時の処理 ---*/<br/>          /* ホバーしているリンクにクラス付与 */<br/>          jQuery(this).addClass('is-opened');<br/>          let hoverLinkId = jQuery(this).attr('data-mega-target');<br/>          let downMenu = jQuery(`[data-mega-id=\"${hoverLinkId}\"]`);<br/>          downMenu.css('display', '');<br/>        },<br/>        function() {<br/>          /*--- マウスカーソルが離れた時の処理 ---*/<br/>          let hoverLinkId = jQuery(this).attr('data-mega-target');<br/>          let downMenu = jQuery(`[data-mega-id=\"${hoverLinkId}\"]`);<br/>          downMenu.css('display', 'none');<br/>          jQuery(this).removeClass('is-opened');<br/>        }<br/>      );<br/>      /*------------- メガメニューPC時 END -------------*/<br/><br/>      /*---------------------------------<br/>        メガメニューSP時 START<br/>      ---------------------------------*/<br/>      /*--- 変数定義 ---*/<br/>      /* ハンバーガーメニューボタン */<br/>      const megaMenuTriggerElement = jQuery('&lt;div class=\"megaMenu_trigger\"&gt;' +<br/>        '&lt;span&gt;&lt;/span&gt;' +<br/>        '&lt;span&gt;&lt;/span&gt;' +<br/>        '&lt;span&gt;&lt;/span&gt;' +<br/>        '&lt;/div&gt;');<br/>      const mainMegaMenuElement = jQuery('&lt;nav class=\"main-megaMenu\"&gt;&lt;ul&gt;&lt;/ul&gt;&lt;/nav&gt;');<br/><br/>      function spMegaMenuSetUp() {<br/><br/>        /* ハンバーガメニューを挿入＆削除 */<br/>        if ( windowPCorSP() === 'sp' &amp;&amp; !jQuery('.megaMenu_trigger').length ) {<br/>          /*--- 画面幅SPのとき ---*/<br/><br/>          /* ハンバーガメニューボタンとメインメニューを追加 */<br/>          megaMenuTriggerElement.appendTo('.js-megaMenu_custom_sec &gt; .inner').ready(function () {<br/><br/>            mainMegaMenuElement.insertAfter('.megaMenu_trigger');<br/><br/>            const megaMenuTrigger = jQuery('.megaMenu_trigger');<br/>            const mainMegaMenu = jQuery('.main-megaMenu');<br/><br/>            mainMegaMenu.css('display', 'none');<br/>            /* メインメニューにメニュー要素を追加 */<br/>            nav_menu_link.parent().clone().appendTo('.main-megaMenu &gt; ul');<br/><br/>            /* メニューの下層（プルダウン）要素を追加する */<br/>            /* 1階層目のメニューを取得 */<br/>            const level01 = jQuery('.main-megaMenu &gt; ul &gt; li');<br/>            level01.addClass('js-level-01');<br/><br/>            level01.each(function(index01, element01) {<br/>              let id = jQuery(element01).attr('data-mega-target');<br/>              let section = jQuery(`.main-megaMenu .js-megaMenu_down_list_sec[data-mega-id=\"${id}\"]`);<br/><br/>              /* ボタンパーツの場合 */<br/>              let buttonLink = section.find('.button a').clone();<br/>              let buttonLinkList = buttonLink.removeClass().addClass('wrap-item');<br/>              if ( buttonLink.length ) {<br/>                buttonLinkList.appendTo(jQuery(element01));<br/>              }<br/><br/>              /* リッチテキストもしくはリンクリストの場合 */<br/>              let listLink = section.find('.richtext &gt; ul, .list &gt; ul');<br/>              let listLinkList = listLink.closest('.component').children('ul');<br/>              if ( listLinkList.length ) {<br/>                listLinkList.appendTo(jQuery(element01));<br/>              }<br/><br/>              section.css('display','none');<br/>            });<br/><br/>            jQuery('.main-megaMenu .js-megaMenu_down_list_sec').css('display', 'none');<br/>            jQuery('.wrap-item').wrap('&lt;li class=\"js-level-02\"&gt;');<br/>            jQuery('.wrap-item').removeAttr('class');<br/><br/>            level01.each(function(index, element) {<br/>              let target = jQuery(element).find('.js-level-02');<br/>              target.wrapAll('&lt;ul class=\"js-level-01-cont\"&gt;');<br/>            });<br/><br/>            /* 1階層目 */<br/>            const level01List = jQuery('.main-megaMenu &gt; ul &gt; li');<br/>            const level02List = jQuery('.main-megaMenu &gt; ul &gt; li &gt; ul &gt; li');<br/>            const level03List = jQuery('.main-megaMenu &gt; ul &gt; li &gt; ul &gt; li &gt; ul &gt; li');<br/>            const level04List = jQuery('.main-megaMenu &gt; ul &gt; li &gt; ul &gt; li &gt; ul &gt; li &gt; ul &gt; li');<br/><br/>            level01List.addClass('js-level-01');<br/>            level02List.addClass('js-level-02');<br/>            level03List.addClass('js-level-03');<br/>            level04List.addClass('js-level-04');<br/><br/>            level02List.closest('ul').addClass('js-level-01-cont');<br/>            level03List.closest('ul').addClass('js-level-02-cont');<br/>            level04List.closest('ul').addClass('js-level-03-cont');<br/><br/>            const downMenu = jQuery('.downMenu a');<br/>            const toggleIconElement = jQuery('&lt;span class=\"toggle_icon\"&gt;&lt;/span&gt;');<br/>            jQuery('.main-megaMenu &gt; ul &gt; li ul').css('display', 'none');<br/><br/>            let toggle_icon_link = [];<br/><br/>            jQuery('.main-megaMenu &gt; ul li ul').prevAll().each(function(index, element) {<br/>              if ( element.tagName.toLowerCase() === 'a' ) {<br/>                toggle_icon_link.push(jQuery(element));<br/>                return<br/>              } else if ( element.tagName.toLowerCase() === 'strong' ) {<br/>                toggle_icon_link.push(jQuery(element).find('a'));<br/>              }<br/>            });<br/>            toggleIconElement.appendTo(toggle_icon_link);<br/><br/>            jQuery('.downMenu a .toggle_icon').on('click', function(e) {<br/>              e.preventDefault();<br/>              e.stopPropagation();<br/>              let list = jQuery(this).closest('li');<br/>              let openTarget = list.children('ul');<br/>              jQuery(this).toggleClass('is-open');<br/>              openTarget.toggleClass('is-open');<br/>              openTarget.stop(true, true).slideToggle(300);<br/>            });<br/><br/>            /* ハンバーガメニュークリックイベント */<br/>            megaMenuTrigger.on('click', function() {<br/>              megaMenuTrigger.toggleClass('is-active');<br/>              mainMegaMenu.toggleClass('is-active');<br/>              mainMegaMenu.toggle();<br/>              jQuery('html').toggleClass('is-locked');<br/>              megaMenuSec.toggleClass('is-open');<br/>            });<br/><br/>          });<br/><br/>        } else if ( windowPCorSP() === 'pc' ) {<br/>          /*--- 画面幅PCのとき ---*/<br/>          /* ハンバーガメニューボタンとメインメニューを削除 */<br/>          jQuery('.megaMenu_trigger').removeClass('is-active');<br/>          jQuery('.main-megaMenu').removeClass('is-active');<br/>          jQuery('.megaMenu_trigger').css('display','none');<br/>          jQuery('.main-megaMenu ul li').css('display','none');<br/>          jQuery('.main-megaMenu').css('display','none');<br/>          jQuery('.downMenu a .toggle_icon').css('display','none');<br/><br/>          /* ハンバーガメニューが開いてるときのクラス名を削除 */<br/>          jQuery('html').removeClass('is-locked');<br/>          jQuery('is-open').removeClass('is-open');<br/>        }<br/>      };<br/><br/>      /*------------- メガメニューSP時 END -------------*/<br/><br/>      /*--- ウィンドウのリサイズ完了後の処理 ---*/<br/>      const windowResize = () =&gt; {<br/>        let timer = 0;<br/>        let delay = 100;<br/>        window.addEventListener('resize', () =&gt; {<br/>          clearTimeout(timer);<br/>          timer = setTimeout(() =&gt; {<br/>            spMegaMenuSetUp();<br/>          }, delay);<br/>        }, false);<br/>      };<br/><br/>      spMegaMenuSetUp();<br/>      windowResize();<br/><br/>    });<br/><br/>    /*------------- メガメニューを別ページから読み込んで初期機能設定 END -------------*/<br/>  });<br/> <br/>  /*--- ページ内遷移ずれる対策 ---*/<br/>  window.addEventListener('load', () =&gt; {<br/>    setTimeout(() =&gt; {<br/>      const headerSec = document.querySelector('.js-megaMenu_custom_sec'); /* メガメニューを取得 */<br/>      if (headerSec) {<br/>        const headerHeight = headerSec.offsetHeight; /* メガメニューの高さを取得 */<br/>        /* 固定ナビの場合の処理 */<br/>        if (headerSec.classList.contains('fixed')) {<br/>          document.documentElement.style.setProperty('--navi-height', `${headerHeight}px`);<br/>        }<br/>      }<br/>    }, 300);<br/>  });<br/>  /*--- ページ内遷移ずれる対策 END ---*/<br/>  /* ---------------------------<br/>    メガメニュー END<br/>  --------------------------- */<br/>&lt;/script&gt;<br/><br/><br/><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p><p>//旧CMS用（不要であれば削除）<br/>//新CMS用（不要であれば削除）<br/>と2つ記述を用意している箇所がいくつかありますので必要に応じて削除orコメントアウトを外してください。<br/>※デフォルトでは新CMS用の記述が当たるようにしています。</p><a href=\"#\">CSSをコピーする</a><p><strong>2025-08-15更新（v1.1.0）</strong></p>\n/*----- メガメニュー（2段） START v1.1.0​​​​​-----*/<br/>/* --------------------------------<br/>    variables（変数）<br/>----------------------------------- */<br/>$mega02-navigation_bg_color: $header_bg_color; //メガメニューの背景色<br/>$mega02-navigation_font_size: $navigation_font_size; //メガメニューのフォントサイズ（1〜3階層）<br/>$mega02-navigation_font_weight: $navigation_font_weight; //メガメニューのフォントの太さ（1〜3階層） normal or bold<br/>$mega02-navigation_hover_opacity: $navigation_hover_opacity; //メガメニューをホバーした時の透視度<br/>$mega02-navigation_bg2_color: $navigation_bg2_color; //メガメニューの背景色（2階層以下）<br/>$mega02-navigation_hover_bg2_color: $navigation_hover_bg_color; //メガメニューをホバーした時の背景色<br/>$mega02-navigation_text_color: $navigation_text_color; //メガメニューのテキストカラー<br/>$mega02-navigation_hover_text_color: $navigation_hover_text_color; //メガメニューをホバーした時のテキストカラー<br/>$mega02-navigation_text2_color: $navigation_text2_color; //メガメニューのテキストカラー（2階層以下）<br/><br/>//メガメニュー（2段） ハンバーガーメニュー<br/>$mega02-navigation_sp_font_size: $navigation_sp_font_size; //メガメニュー（SP）時のテキストサイズ（1〜3階層）<br/>$mega02-navigation_sp_font_weight: $navigation_sp_font_weight; //メガメニュー（SP）時のテキストの太さ（1〜3階層） normal or bold<br/>$mega02-navigation_sp_text_color: $navigation_sp_text_color; //メガメニュー（SP）時のテキストカラー １階層<br/>$mega02-navigation_sp_text2_color: $navigation_sp_text2_color; //メガメニュー（SP）時のテキストカラー（2階層）<br/>$mega02-navigation_sp_text3_color: $navigation_sp_text3_color; //メガメニュー（SP）時のテキストカラー（3階層）<br/>$mega02-navigation_sp_hover_text_color: $navigation_sp_hover_text_color; //メガメニュー（SP）時のホバーした時の2階層のテキスト＆矢印のカラー<br/>$mega02-navigation_sp_arrow1_color: $navigation_sp_arrow1_color; //メガメニュー（SP） 矢印カラー（1階層）<br/>$mega02-navigation_sp_arrow2_color: $navigation_sp_arrow2_color; //メガメニュー（SP） 矢印カラー（2階層）<br/>$mega02-navigation_sp_bg_color: $navigation_sp_bg_color; //メガメニュー（SP）時の背景色（1階層）<br/>$mega02-navigation_sp_bg2_color: $navigation_sp_bg2_color; //メガメニュー（SP）時の背景色（２階層）<br/>$mega02-navigation_sp_bg3_color: $navigation_sp_bg3_color; //メガメニュー（SP）時の背景色（3階層）<br/>$mega02-navigation_sp_border-bottom: $navigation_sp_border-bottom; //メガメニュー（SP）時のボーダー（hamburger_custom 使用時）<br/>/*------------- variables（変数）END -------------*/<br/><br/>//初期読み込み時に格納セクションが一瞬見えてしまう（チラつき）防止<br/>.js-megaMenu_contents_sec {<br/>  display: none !important;<br/>}<br/>//固定サイドバー対策<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;.js-megaMenu_custom_sec {<br/>    &amp;.has-fixed-side {<br/>      @media screen and (min-width: 1201px) {<br/>        width: calc(100% - 420px);<br/>      }<br/>    }<br/>  }<br/>}<br/>/* SP時 iOSのアドレスバーズレ防止 */<br/>html {<br/>  &amp;.is-locked {<br/>    overflow: hidden;<br/>    -ms-touch-action: none;<br/>    touch-action: none;<br/>    &amp;::before {<br/>      content: '';<br/>      position: fixed;<br/>      z-index: 5;<br/>      top: 0;<br/>      left: 0;<br/>      width: 100vw;<br/>      height: 100vh;<br/>      background-color: #fff;<br/>    }<br/>  }<br/>}<br/><br/>/*-- メガメニュー（2段） 共通設定 --*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;:is(<br/>    .mega02Menu_custom_sec,<br/>    .mega02Menu_down_list_sec,<br/>  ) * {<br/>    box-sizing: border-box;<br/>  }<br/>}<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;:where(<br/>    .mega02Menu_custom_sec,<br/>    .mega02Menu_down_list_sec<br/>   ) {<br/>    width: 100%;<br/>    font-family: 'Noto Sans JP', sans-serif;//適宜変更<br/>    line-height: 1.5;//適宜変更<br/>    letter-spacing: .04em;//適宜変更<br/>    .inner {<br/>      width: 100% !important;<br/>      max-width: 100% !important;<br/>      margin: auto;<br/>      .row {<br/>        .col {<br/>          .component {<br/>            margin: 10px 0;<br/>            a {<br/>              text-decoration: none;<br/>              &amp;:hover {<br/>                opacity: $hover_opacity;<br/>              }<br/>            }<br/>            // CTA共通<br/>            &amp;.cta {<br/>              margin: 0;<br/>              .cta-row {<br/>                display: table;<br/>                table-layout: fixed;<br/>                width: 100%;<br/>                margin: 0;<br/>                @include breakpoint-sp {<br/>                  display: block;<br/>                }<br/>                &amp; + .cta-row {<br/>                  @include breakpoint-pc {<br/>                    padding-top: 10px;<br/>                  }<br/>                }<br/>                .cta-column {<br/>                  display: table-cell;<br/>                  vertical-align: top;<br/>                  margin: 0;<br/>                  @include breakpoint-sp {<br/>                    display: block;<br/>                    width: 100% !important;<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- メガメニュー（2段）共通設定 END--*/<br/><br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  /*-- メガメニュー（2段） ナビ部分 --*/<br/>  &amp;.mega02Menu_custom_sec {<br/>    background: $mega02-navigation_bg_color;<br/>    box-shadow: $navigation_box_shadow_common;<br/>    position: relative;<br/>    z-index: 10;<br/>    padding: 0;<br/>    // オプション ナビゲーション上部固定のとき<br/>    &amp;.fixed {<br/>      position: sticky;<br/>      z-index: 1001;<br/>      top: 0;<br/>    }<br/>    &amp;.is-open {<br/>      @include breakpoint-sp {<br/>        box-shadow: none;<br/>      }<br/>    }<br/>    .inner {<br/>      .row {<br/>        &amp;.navigation-cont_row {<br/>          display: flex;<br/>          justify-content: space-between;<br/>          align-items: center;<br/>          max-width: 1240px !important;<br/>          margin: auto;<br/>          padding: 10px 20px;<br/>          @include breakpoint-sp {<br/>            min-height: 51px;<br/>            padding: 0;<br/>          }<br/>          .col {<br/>            padding: 0;<br/>            &amp;.logo_col {<br/>              display: flex !important;<br/>              align-items: center;<br/>              justify-content: flex-start;<br/>              width: auto !important;<br/>              @include breakpoint-sp {<br/>                padding: 0 0 0 10px;<br/>              }<br/>              .component {<br/>                margin: 0;<br/>                &amp;.image {<br/>                  &amp;.logo_img {<br/>                    max-width: $header_logo;<br/>                    img {<br/>                      max-height: 56px;//ナビhover時の上矢印▲の位置ズレ対策<br/>                      @include breakpoint-sp {<br/>                        max-height: $header_sp_logo;<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>            &amp;.cont_col {<br/>              display: flex !important;<br/>              align-items: center;<br/>              justify-content: flex-end;<br/>              width: auto !important;<br/>              padding: 10px 0;<br/>              @include breakpoint-sp {<br/>                padding: 0 68px 0 0;<br/>              }<br/>              .component {<br/>                margin: 0;<br/>                &amp;.button {<br/>                  margin-left: 15px;<br/>                  @include breakpoint-sp {<br/>                    margin: 0;<br/>                  }<br/>                  .button-cont {<br/>                    a {<br/>                      &amp;.size-s {<br/>                        min-width: 200px;<br/>                      }<br/>                      &amp;:is(.size-s, .size-m, .size-l) {<br/>                        @include breakpoint-sp {<br/>                          min-width: initial;<br/>                          border-radius: 0;<br/>                          padding: 5px;<br/>                          border: none;<br/>                          font-size: 0;<br/>                          background: none;<br/>                        }<br/>                        &amp;::before {<br/>                          @include breakpoint-sp {<br/>                            font-size: 22px;<br/>                            color: #ffad2f;<br/>                            margin: 0;<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                  &amp;.btn_custom_tel {<br/>                    .button-cont {<br/>                      a {<br/>                        &amp;.size-s {<br/>                          @include breakpoint-pc {<br/>                            min-width: initial;<br/>                          }<br/>                          @include breakpoint-pro_s {<br/>                            background: none;<br/>                            border: none;<br/>                            border-radius: 0;<br/>                            font-size: 0;<br/>                          }<br/>                          &amp;::before {<br/>                            @include breakpoint-pro_s {<br/>                              font-size: 22px;<br/>                              color: #ffad2f;<br/>                              margin: 0;<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>        &amp;.nav_menu_row {<br/>          .col {<br/>            padding: 0;<br/>            .component {<br/>              &amp;.list {<br/>                &amp;.nav_menu_list {<br/>                  max-width: 1140px;<br/>                  margin: 0 auto;<br/>                  height: 100%;<br/>                  @include breakpoint-sp {<br/>                    display: none !important;<br/>                  }<br/>                  &gt; ul {<br/>                    display: table;<br/>                    width: 100%;<br/>                    height: 100%;<br/>                    &gt; li {<br/>                      display: table-cell;<br/>                      margin: 0;<br/>                      padding: 0;<br/>                      font-size: $mega02-navigation_font_size;<br/>                      color: $mega02-navigation_text_color;<br/>                      &amp;:hover {<br/>                        background-color: $mega02-navigation_hover_bg2_color;<br/>                      }<br/>                      &amp;.downMenu {<br/>                        &gt; a {<br/>                          position: relative;<br/>                          padding-right: 30px;<br/>                          &amp;::after {<br/>                            content: \"\\f107\";<br/>                            font-family: $font_family_awsm;<br/>                            font-size: 20px;<br/>                            line-height: 1;<br/>                            color: $mega02-navigation_text_color;<br/>                            position: absolute;<br/>                            top: 50%;<br/>                            right: 10px;<br/>                            transform: translateY(-50%);<br/>                            margin-top: 0;<br/>                          }<br/>                        }<br/>                      }<br/>                      &gt; a {<br/>                        display: block;<br/>                        min-width: 125px;<br/>                        height: 100%;<br/>                        text-align: center;<br/>                        text-decoration: none;<br/>                        font-weight: $mega02-navigation_font_weight;<br/>                        line-height: 1.2;<br/>                        color: $mega02-navigation_text_color;<br/>                        padding: 20px 10px;<br/>                        position: relative;<br/>                        border: 0;<br/>                        @include breakpoint-pro_s {<br/>                          min-width: initial;<br/>                        }<br/>                        &amp;:hover {<br/>                          color: $mega02-navigation_hover_text_color;<br/>                          opacity: $mega02-navigation_hover_opacity;<br/>                          &amp;::after {<br/>                            transform: rotate(180deg) translateY(50%);<br/>                            color: $mega02-navigation_hover_text_color;<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>      // ハンバーガーメニュー<br/>      .megaMenu_trigger {<br/>        cursor: pointer;<br/>        width: 60px;<br/>        height: 51px;<br/>        position: absolute;<br/>        right: 0;<br/>        top: 0;<br/>        background: #ffad2f;<br/>        span {<br/>          display: inline-block;<br/>          width: 30px;<br/>          height: 3px;<br/>          border-radius: 3px;<br/>          background: #fff;<br/>          position: absolute;<br/>          left: 50%;<br/>          transform: translateX(-50%);<br/>          transition: all .4s;<br/>          &amp;:nth-child(1) {<br/>            top: 15px;<br/>          }<br/>          &amp;:nth-child(2) {<br/>            top: 24px;<br/>          }<br/>          &amp;:nth-child(3) {<br/>            bottom: 15px;<br/>          }<br/>        }<br/>        /* ハンバーガメニュー オープン時 */<br/>        &amp;.is-active {<br/>          span {<br/>            &amp;:nth-child(1) {<br/>              -webkit-transform: translateY(10px) translateX(-50%) rotate(-45deg);<br/>              transform: translateY(10px) translateX(-50%) rotate(-45deg);<br/>            }<br/>            &amp;:nth-child(2) {<br/>              opacity: 0;<br/>            }<br/>            &amp;:nth-child(3) {<br/>              -webkit-transform: translateY(-8px) translateX(-50%) rotate(45deg);<br/>              transform: translateY(-8px) translateX(-50%) rotate(45deg);<br/>            }<br/>          }<br/>        }<br/>      }<br/>      // メインメガメニュー（2段） PC時 {<br/>      @include breakpoint-pc {<br/>        .main-megaMenu {<br/>          display: none;<br/>        }<br/>      }<br/>      // メインメガメニュー（2段） SP時<br/>      @include breakpoint-sp {<br/>        .main-megaMenu {<br/>          height: calc(100vh + 100px);<br/>          overflow: auto;<br/>          font-family: 'Noto Sans JP', sans-serif;<br/>          background: #fff;<br/>          padding-bottom: 310px;<br/>          ul {<br/>            li {<br/>              a {<br/>                display: block;<br/>                position: relative;<br/>                padding: 20px;<br/>                text-decoration: none;<br/>                font-size: $mega02-navigation_sp_font_size;<br/>                font-weight: $mega02-navigation_sp_font_weight;<br/>                line-height: 1.2;<br/>                color: $mega02-navigation_sp_text_color;<br/>                border-bottom: 1px dashed #ffad2f;<br/>                strong, span {<br/>                  font-weight: inherit;<br/>                }<br/>              }<br/>              /* 2階層目トリガー */<br/>              &amp;.downMenu {<br/>                a {<br/>                  padding: 20px 45px 20px 20px;<br/>                  .toggle_icon {<br/>                    display: flex;<br/>                    align-items: center;<br/>                    justify-content: center;<br/>                    position: absolute;<br/>                    top: 50%;<br/>                    right: 0;<br/>                    width: 50px;<br/>                    height: 45px;<br/>                    transform: translateY(-50%);<br/>                    &amp;::before,<br/>                    &amp;::after {<br/>                      background-color: $mega02-navigation_sp_arrow1_color;<br/>                    }<br/>                    &amp;::before {<br/>                      content: '';<br/>                      width: 2px;<br/>                      height: 18px;<br/>                      transform: rotate(0);<br/>                      -webkit-transform: rotate(0);<br/>                      z-index: 1;<br/>                      transition: all .5s ease;<br/>                    }<br/>                    &amp;::after {<br/>                      content: '';<br/>                      position: relative;<br/>                      right: 2px;<br/>                      width: 2px;<br/>                      height: 18px;<br/>                      transform: rotate(90deg);<br/>                      -webkit-transform: rotate(90deg);<br/>                      transition: all .5s ease;<br/>                    }<br/>                    &amp;.is-open {<br/>                      &amp;::before {<br/>                        transform: rotate(90deg);<br/>                        -webkit-transform: rotate(90deg);<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>              ul {<br/>                .js-level-02 {<br/>                  a {<br/>                    padding: 20px 30px 20px calc(20px + 1em);<br/>                  }<br/>                  .js-level-03 {<br/>                    a {<br/>                      background: #F2F2F2;<br/>                      padding: 20px 30px 20px calc(20px + 2em);<br/>                    }<br/>                    .js-level-04 {<br/>                      a {<br/>                        padding: 20px 30px 20px calc(20px + 3em);<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>  /*-- メガメニュー（2段） メニュー内 --*/<br/>  &amp;.mega02Menu_down_list_sec {<br/>    max-width: 1140px;<br/>    max-height: 500px;<br/>    overflow-y: auto;<br/>    background: #fff;<br/>    box-shadow: $navigation_box_shadow_common;<br/>    color: $mega02-navigation_text2_color;<br/>    position: absolute;<br/>    top: 100%;<br/>    left: 0;<br/>    right: 0;<br/>    z-index: 1;<br/>    margin: auto;<br/>    .inner {<br/>      padding: 40px 30px;<br/>      .row {<br/>        // 以下、メニュー内のデザインに合わせて適宜変更（不要であれば削除）<br/>        &amp;.sub_menu_list_row {<br/>          display: flex;<br/>          gap: 45px;<br/>          &amp; + .sub_menu_list_row {<br/>            margin-top: 20px;<br/>          }<br/>          .col {<br/>            width: 100%;<br/>            padding: 0;<br/>            position: relative;　<br/>            .component {<br/>              &amp;.richtext {<br/>                // メニュー内リスト<br/>                &amp;.mega02Menu_list01 {<br/>                  ul {<br/>                    li {<br/>                      display: block;<br/>                      font-size: 16px;<br/>                      line-height: 1.5;<br/>                      color: #333;<br/>                      margin: 0;<br/>                      padding: 0;<br/>                      a {<br/>                        display: block;<br/>                        font-size: inherit;<br/>                        color: inherit;<br/>                        text-decoration: none;<br/>                        &amp;:hover {<br/>                          opacity: $hover_opacity;<br/>                        }<br/>                      }<br/>                      ul {<br/>                        margin: 0 0 0 10px !important;<br/>                        li {<br/>                          margin-top: 10px;<br/>                          a {<br/>                            border: none;<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                  /* 1階層目 */<br/>                  &gt; ul {<br/>                    margin: 0;<br/>                    &gt; li {<br/>                      &amp; + li {<br/>                        margin-top: 10px;<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>              &amp;.list {<br/>                // [お知らせ]リスト<br/>                &amp;.mega02Menu_list02 {<br/>                  ul {<br/>                    li {<br/>                      display: block;<br/>                      font-size: 16px;<br/>                      line-height: 1.5;<br/>                      color: #333;<br/>                      margin: 0;<br/>                      padding: 0;<br/>                      &amp; + li {<br/>                        margin-top: 10px;<br/>                      }<br/>                      a {<br/>                        display: block;<br/>                        text-decoration: none;<br/>                        font-weight: bold;<br/>                        color: inherit;<br/>                        padding: 0;<br/>                        &amp;:hover {<br/>                          opacity: $hover_opacity;<br/>                          background: none;<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- メガメニュー（2段） END -----*/<p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p><a href=\"#\">CSSをコピーする</a><p><strong>2024-01-11更新（v1.0.0）</strong></p>\n/*-- メガメニュー（2段） 編集画面用 START v1.0.0​​​​​--*/<br/>  //初期読み込み時に格納セクションが一瞬見えてしまう（チラつき）防止<br/>  .js-megaMenu_contents_sec {<br/>    display: block !important;<br/>    border: 1px solid #f00;<br/>    &amp;::before {<br/>      content: \"メガメニュー格納セクション\";<br/>      position: absolute;<br/>      color: #fff;<br/>      background: #f00;<br/>      padding: 5px 5px;<br/>      right: 0;<br/>      top: -24px;<br/>      font-size: 14px;<br/>      line-height: 1;<br/>    }<br/>  }<br/>  .theme-fo-base .wrapper .contents {<br/>    :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>      &amp;.mega02Menu_custom_sec {<br/>        padding: 20px 0 !important;<br/>        .inner {<br/>          max-width: 1100px !important;<br/>          padding: 0 20px !important;<br/>          .row {<br/>            &amp;.navigation-cont_row {<br/>              .col {<br/>                &amp;.logo_col {<br/>                  width: 20% !important;<br/>                }<br/>                &amp;.cont_col {<br/>                  width: 80% !important;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>        &amp;.fixed {<br/>          position: relative;<br/>          top: initial;<br/>          border: 1px solid blue;<br/>          &amp;::before {<br/>            content: \"メガメニュー上部固定中（クラス名：fixed） ※固定を外したい場合はこのクラスを外す。\";<br/>            position: absolute;<br/>            color: #fff;<br/>            background: blue;<br/>            padding: 0 5px;<br/>            right: 0;<br/>            top: -24px;<br/>          }<br/>        }<br/>      }<br/>      &amp;.mega02Menu_down_list_sec {<br/>        max-width: 100%;<br/>        max-height: initial;<br/>        overflow-y: initial;<br/>        position: relative;<br/>        top: initial;<br/>        left: initial;<br/>        .inner {<br/>          max-width: 1100px !important;<br/>          .row {<br/>            // メガメニューでドロップダウンメニューがついているリンクかどうか判定するためのrow<br/>            &amp;.js-downMenu_reference_row {<br/>              border: 1px solid red;<br/>              background: #000;<br/>              &amp;::before {<br/>                content: \"ナビゲーションのメニュー名と同じものを入れてください。（どのメニューに対応するか判定用。公開画面では非表示の行になります。）\";<br/>                position: absolute;<br/>                color: #fff;<br/>                background: red;<br/>                padding: 5px 5px;<br/>                right: 0;<br/>                top: -24px;<br/>                font-size: 14px;<br/>                line-height: 1;<br/>              }<br/>              .col {<br/>                padding: 10px 20px;<br/>                .component {<br/>                  color: #fff;<br/>                  &amp;.heading {<br/>                    :is(h2, h3) {<br/>                      margin: 0;<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>/*-- メガメニュー（2段） 編集画面用 END --*/</section>\n\n<section class=\"content-element content-11\"> </section>"
  },
  {
    "title": "モーダル",
    "url": "https://js-part.hmup.jp/js/modal",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>モーダル</h2><p>ボックスリンクをクリックでモーダル表示</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th><strong>ページ複製・<br/>\n   クリップボード使用可否</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p><strong>■ボックスリンク部分</strong><br/>\n（カラムに設置可能なパーツ）</p>\n<ul>\n<li>デザインパーツ\n    <ul>\n<li>見出し</li>\n<li>リッチテキスト</li>\n<li>画像</li>\n<li>ボタン※1　etc...</li>\n</ul>\n</li>\n</ul>\n<p> </p>\n<p><strong>■モーダル表示部分</strong><br/>\n（セクションに設置可能なパーツ）</p>\n<ul>\n<li>〜4カラム</li>\n<li>デザインパーツ\n    <ul>\n<li>見出し</li>\n<li>リッチテキスト</li>\n<li>画像</li>\n<li>ボタン（閉じるボタン以外も可）</li>\n</ul>\n</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>モーダルの幅</li>\n<li>モーダル内で行（row）の増減</li>\n<li>カラム（col）の分割（1~4）※2</li>\n<li>モーダル内のデザイン※3</li>\n</ul>\n</td>\n<td><strong>○</strong></td>\n<td><strong>◯</strong></td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：モーダル用のカラムにボタンを置く場合は、そのボタンがモーダルを開くトリガーになります。<br/>\n   ※2：カラム（col）がモーダルを開くトリガーとなっているため、横並びで置く場合のレイアウトは4カラムまでになります。<br/>\n   ※3：構造上、モーダルの背景色については編集画面ではなくカスタムCSSで変更するため、あとから変更は不可。　<br/>\n   　　（セクションの背景色はモーダル表示時の後ろの黒透過背景になる構造のため）</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><ul>\n<li>ボックスリンク[モーダルを開くトリガー]をクリックでモーダルを表示。</li>\n<li>閉じるボタン[ボタンパーツ]をクリックでモーダルを閉じる。または、オーバーレイ（黒透過背景）クリックでモーダルを閉じる。</li>\n</ul>\n<p>モーダル01</p><a href=\"#\"></a><p>モーダル02</p><a href=\"#\"></a><p>モーダル03</p><a href=\"#\"></a><p>モーダル04</p><a href=\"#\"></a></section>\n\n<section class=\"content-element content-4 modal_sec js-modal_sec js-displayNone\"><h3>モーダル01<br/>見出しが入ります。<br/></h3><p>テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。</p><a href=\"#\">閉じる</a></section>\n\n<section class=\"content-element content-5 modal_sec js-modal_sec js-displayNone\"><h3>モーダル02<br/>見出しが入ります。<br/></h3><p>テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。</p><a href=\"#\">閉じる</a></section>\n\n<section class=\"content-element content-6 modal_sec js-modal_sec js-displayNone\"><h3>モーダル03<br/>見出しが入ります。<br/></h3><p>テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。</p><a href=\"#\">閉じる</a></section>\n\n<section class=\"content-element content-7 modal_sec js-modal_sec js-displayNone\"><h3>モーダル04<br/>見出しが入ります。<br/></h3><p>テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。</p><a href=\"#\">閉じる</a></section>\n\n<section class=\"content-element content-8\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-9\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSを適切な位置に記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>ボックスリンクの行（row）に、必要に応じてスタイル調整用のクラス名「<strong>modalList_row</strong>」を追加。<br/>\n  </li>\n<li>ボックスリンクのカラム（col）にクラス名「<strong>js-modal_col</strong>」を追加。（=モーダル表示のトリガー）<br/>\n  </li>\n<li>ボックスリンクのカラム（col）に「リンク設定」またはボタンを設置し、リンク先を[このページの一番上に遷移]に設定。<br/>\n  </li>\n<li>ボックスリンクを設置したセクションの直下に新たなセクションを追加し、<br/>\n クラス名「<strong>modal_sec js-modal_sec js-displayNone</strong>」の3つを追加。（=モーダル部分）<br/>\n​​​​​新CMSの場合：デザインパーツ[セクションパーツ]を使用しても問題ありませんが、背景色は適用されないため注意して下さい。（※ここのセクションの背景色がモーダル表示時の後ろの黒透過背景になる仕様のため、背景カラー①セクションなど使用していても背景色は適用されません。モーダル自体の背景色はカスタムCSSにて、innerに対して設定してください。）<br/>\n  </li>\n<li>モーダル用セクションに配置した行（row）に必要に応じてスタイル調整用のクラス名「<strong>modal_row</strong>」を追加。</li>\n<li>モーダル用セクション内に「ボタンパーツ」を配置し、クラス名「<strong>js-modalClose_btn</strong>」を追加。（=モーダル閉じるボタン）<br/>\n旧CMSの場合：必要に応じて、クラス名「<strong>btn_custom01</strong>」等を追加。<br/>\n  </li>\n</ol>\n<ul>\n<li>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。</li>\n</ul>\n<h2>注意点</h2><ul>\n<li>ボックスリンクの並び順とセクションの配置順が連動しているので、必ず順番を合わせるように配置してください。</li>\n<li>モーダルセクションの間にモーダルセクション以外の要素を配置しないでください。</li>\n<li>モーダル自体の背景色（innerの背景色）はカスタムCSSで変更してください。<br/>\n ※セクションに背景色をつけても、黒透過背景が上書きされます。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-10\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-07-18更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- モーダル START v1.0.0​​​​​-----*/<br/>/* 初期読み込み時に一瞬見えてしまう（チラつき）防止用クラス */<br/>.js-displayNone {<br/>  display: none !important;<br/>}<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>    // モーダル外枠部分<br/>    &amp;.modal_sec {<br/>      background-color: inherit !important;//セクションに背景色がつかないよう対策<br/>      text-align: center;<br/>      overflow: auto;<br/>      backface-visibility: hidden;<br/>      -webkit-backface-visibility: hidden;<br/>      position: fixed;<br/>      top: 0;<br/>      right: 0;<br/>      bottom: 0;<br/>      left: 0;<br/>      z-index: 10000;<br/>      padding: 60px 20px;<br/>      &amp;::after {<br/>        content: \"\";<br/>        display: inline-block;<br/>        vertical-align: middle;<br/>        height: 100%;<br/>        margin-left: -0.05em;<br/>      }<br/>      // モーダル部分<br/>      .inner {<br/>        width: 100%;<br/>        max-width: 1000px;<br/>        display: inline-block;<br/>        vertical-align: middle;<br/>        background: #fff;<br/>        text-align: left;<br/>        transform: translate3d(0, 0, 0);<br/>        -webkit-transform: translate3d(0, 0, 0);<br/>        margin-bottom: 10px;<br/>        padding: 25px 35px 15px;<br/>        @include breakpoint-ssp {<br/>          padding: 20px;<br/>        }<br/>        .row {<br/>          // モーダル内2カラム部分のスタイル調整用<br/>          &amp;.modal_row {<br/>            display: flex;<br/>            gap: 50px;<br/>            @include breakpoint-sp {<br/>              flex-wrap: wrap;<br/>              gap: 10px;<br/>            }<br/>            .col {<br/>              @include breakpoint-pc {<br/>                padding: 0 0 10px;<br/>              }<br/>              &amp;:empty {<br/>                padding: 0;<br/>                @include breakpoint-sp {<br/>                  display: none !important;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>    .row {<br/>      // ボックスリンク部分のスタイル調整用<br/>      &amp;.modalList_row {<br/>        display: flex;<br/>        gap: 20px;<br/>        @include breakpoint-sp {<br/>          flex-wrap: wrap;<br/>          gap: 30px;<br/>          max-width: 350px;<br/>          margin: auto;<br/>        }<br/>        &amp; + .modalList_row {<br/>          margin-top: 30px;<br/>        }<br/>        .col {<br/>          @include breakpoint-pc {<br/>            padding: 0 0 10px;<br/>          }<br/>          &amp;:empty {<br/>            padding: 0;<br/>            @include breakpoint-sp {<br/>              display: none !important;<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>// モーダル外スクロール禁止<br/>html {<br/>  &amp;.modal-is-locked {<br/>    overflow: hidden;<br/>    -ms-touch-action: none;<br/>    touch-action: none;<br/>  }<br/>}<br/>// モーダルオーバーレイ（黒透過背景）<br/>.modal-overlay {<br/>  background: rgba(43, 46, 56, 0.9);<br/>  position: fixed;<br/>  top: -5000px;<br/>  right: -5000px;<br/>  bottom: -5000px;<br/>  left: -5000px;<br/>  z-index: 10000;<br/>}<br/>/*------------------------------<br/> アニメーション START<br/>-------------------------------*/<br/>  /* アニメーションの記述 （オーバーレイ表示） */<br/>@keyframes modal-overlay-opening-keyframes {<br/>  0% {<br/>    opacity: 0;<br/>  }<br/>  100% {<br/>    opacity: 1;<br/>  }<br/>}<br/>/* アニメーションの記述 （オーバーレイ非表示） */<br/>@keyframes modal-overlay-closing-keyframes {<br/>  0% {<br/>    opacity: 1;<br/>  }<br/>  100% {<br/>    opacity: 0;<br/>  }<br/>}<br/>/* アニメーションの記述 （モーダル表示） */<br/>@keyframes modal-opening-keyframes {<br/>  0% {<br/>    -webkit-transform: scale(1.05);<br/>    transform: scale(1.05);<br/>    opacity: 0;<br/>  }<br/>  100% {<br/>    -webkit-transform: none;<br/>    transform: none;<br/>    opacity: 1;<br/>    -webkit-filter: blur(0);<br/>    filter: blur(0);<br/>  }<br/>}<br/>/* アニメーションの記述 （モーダル非表示） */<br/>@keyframes modal-closing-keyframes {<br/>  0% {<br/>    -webkit-transform: scale(1);<br/>    transform: scale(1);<br/>    opacity: 1;<br/>  }<br/>  100% {<br/>    -webkit-transform: scale(0.95);<br/>    transform: scale(0.95);<br/>    opacity: 0;<br/>    -webkit-filter: blur(0);<br/>    filter: blur(0);<br/>  }<br/>}<br/>.modal-overlay {<br/>  &amp;.modal-is-opening {<br/>    -webkit-animation-name: modal-overlay-opening-keyframes;<br/>    animation-name: modal-overlay-opening-keyframes;<br/>  }<br/>  &amp;.modal-is-closing {<br/>    -webkit-animation-name: modal-overlay-closing-keyframes;<br/>    animation-name: modal-overlay-closing-keyframes;<br/>  }<br/>}<br/>.modal-is-opening {<br/>  -webkit-animation-name: modal-opening-keyframes;<br/>  animation-name: modal-opening-keyframes;<br/>}<br/>.modal-is-closing {<br/>  -webkit-animation-name: modal-closing-keyframes;<br/>  animation-name: modal-closing-keyframes;<br/>}<br/>.modal-is-opening,<br/>.modal-is-closing {<br/>  -webkit-animation-duration: 0.3s;<br/>  animation-duration: 0.3s;<br/>  -webkit-animation-fill-mode: forwards;<br/>  animation-fill-mode: forwards;<br/>}<br/>/*------------------------------<br/> アニメーション END<br/>-------------------------------*/<br/>/*----- モーダル END -----*/</section>\n\n<section class=\"content-element content-11\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2024-09-17更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- モーダル 編集画面用 START v1.0.0​​​​​--*/<br/>.js-displayNone {<br/>  display: block !important;<br/>  outline: 1px solid #000;<br/>  &amp;::before {<br/>    content: \"JS読み込み後にクラスを外す。ちらつき防止（JSで使用）\";<br/>    position: absolute;<br/>    color: #fff;<br/>    background: #000;<br/>    font-size: 14px;<br/>    line-height: 1;<br/>    right: 0;<br/>    top: -24px;<br/>    padding: 5px 5px;<br/>  }<br/>}<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>    &amp;.modal_sec {<br/>      max-width: 100%;<br/>      position: relative !important;<br/>      top: initial;<br/>      left: initial;<br/>      transform: initial;<br/>      z-index: initial;<br/>      overflow: initial;<br/>      border: 3px solid gray;<br/>      &amp;::after {<br/>        content: \"モーダル部分\";<br/>        max-width: 100%;<br/>        height: initial;<br/>        color: #fff;<br/>        background: gray;<br/>        font-size: 16px;<br/>        line-height: 1;<br/>        position: absolute;<br/>        top: 0;<br/>        left: 0;<br/>        right: 0;<br/>        margin: auto;<br/>        padding: 5px 10px 8px;<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- モーダル 編集画面用 END --*/<br/></section>\n\n<section class=\"content-element content-12\"><h2>JavaScript</h2><p><strong>2025-06-30更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>/* -----------------<br/>  モーダル v1.0.0<br/>----------------- */<br/>document.addEventListener('DOMContentLoaded', function() {<br/><br/>  /*------------- 変数定義 【変更可能】 START -------------*/<br/> const modalBtns = document.querySelectorAll('.js-modal_col'); /* モーダルボタン */<br/> const modalSecs = document.querySelectorAll('.js-modal_sec'); /* モーダルセクション */<br/> const modalCloseBtns = document.querySelectorAll('.js-modalClose_btn a'); /* モーダルクローズボタン */<br/> const bodyEl = document.body; /* body */<br/> const htmlEl = document.documentElement; /* html */<br/> const headerEl = document.querySelector('header'); /* header */<br/> let headerFixed = false; /* header固定かどうか判断 */<br/> const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth; /* スクロールバー幅を取得 */<br/>  /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>  /* オーバーレイ生成 */<br/> const modalOverlay = document.createElement('div');<br/> modalOverlay.classList.add('modal-overlay', 'modal-is-closed');<br/> modalOverlay.style.display = 'none';<br/> bodyEl.prepend(modalOverlay);<br/>  /* モーダル初期非表示設定 */<br/> modalSecs.forEach(sec =&gt; {<br/>  sec.style.display = 'none';<br/>  sec.classList.remove('js-displayNone');<br/>  sec.classList.add('modal-is-closed');<br/> }); /* headerがposition: fixedか確認 */<br/> const headerStyle = window.getComputedStyle(headerEl);<br/> if (headerStyle.position === 'fixed') {<br/>  headerFixed = true;<br/> }<br/><br/> function openModal(index) {<br/>  const targetModal = modalSecs[index];<br/>  if (!targetModal) return;<br/>  targetModal.style.display = '';<br/>  targetModal.classList.remove('modal-is-closed');<br/>  targetModal.classList.add('modal-is-opening');<br/>  modalOverlay.style.display = '';<br/>  modalOverlay.classList.remove('modal-is-closed');<br/>  modalOverlay.classList.add('modal-is-opening');<br/>  htmlEl.classList.add('modal-is-locked');<br/>  bodyEl.style.paddingRight = `${scrollbarWidth}px`;<br/>  if (headerFixed) {<br/>   headerEl.style.paddingRight = `${scrollbarWidth}px`;<br/>  }<br/> }<br/><br/> function closeModal(index) {<br/>  const targetModal = modalSecs[index];<br/>  if (!targetModal) return;<br/>  targetModal.classList.add('modal-is-closing');<br/>  targetModal.classList.remove('modal-is-opened');<br/>  modalOverlay.classList.add('modal-is-closing');<br/> }<br/>  /* モーダルボタンクリックイベント */<br/> modalBtns.forEach((btn, index) =&gt; {<br/>  btn.addEventListener('click', function(e) {<br/>   e.preventDefault();<br/>   openModal(index);<br/>  });<br/> });<br/>  /* モーダルクローズボタンクリックイベント */<br/> modalCloseBtns.forEach((btn, index) =&gt; {<br/>  btn.addEventListener('click', function(e) {<br/>   e.preventDefault();<br/>   closeModal(index);<br/>  });<br/> });<br/>  /* アニメーション終了イベント */<br/> modalSecs.forEach((sec, index) =&gt; {<br/>  sec.addEventListener('animationend', function() {<br/>   if (sec.classList.contains('modal-is-closing')) {<br/>    sec.style.display = 'none';<br/>    sec.classList.remove('modal-is-closing');<br/>    sec.classList.add('modal-is-closed');<br/>    modalOverlay.style.display = 'none';<br/>    modalOverlay.classList.remove('modal-is-closing');<br/>    modalOverlay.classList.add('modal-is-closed');<br/>    htmlEl.classList.remove('modal-is-locked');<br/>    bodyEl.style.paddingRight = '';<br/>    if (headerFixed) {<br/>     headerEl.style.paddingRight = '';<br/>    }<br/>   } else if (sec.classList.contains('modal-is-opening')) {<br/>    sec.classList.remove('modal-is-opening');<br/>    sec.classList.add('modal-is-opened');<br/>    modalOverlay.classList.remove('modal-is-opening');<br/>   }<br/>  });<br/> });<br/>  /* 黒背景クリックでモーダルを閉じる */<br/> document.addEventListener('click', function(e) {<br/>  const isOverlayClick = !e.target.closest(<br/>   '.js-modal_sec.modal-is-opened .inner') &amp;&amp; !e.target.closest(<br/>   '.js-modal_col') &amp;&amp; !e.target.closest('.js-modalClose_btn a');<br/>  if (isOverlayClick) {<br/>   const openedModal = Array.from(modalSecs).find(m =&gt; m.classList.contains(<br/>    'modal-is-opened'));<br/>   const clickIndex = Array.from(modalSecs).indexOf(openedModal);<br/>   if (clickIndex !== -1) {<br/>    closeModal(clickIndex);<br/>   }<br/>  }<br/> });<br/>});<br/>/* -----------------<br/>  モーダル END<br/>----------------- */<br/>&lt;/script&gt;<br/><br/></section>\n\n<section class=\"content-element content-13\"></section>"
  },
  {
    "title": "cookie判定",
    "url": "https://js-part.hmup.jp/js/cookie",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>cookie判定</h2><p>初回アクセス時のみモーダルを表示（※選択肢あり）</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p><strong>■モーダル</strong><br/>\n（共通パーツに設置可能なパーツ）</p>\n<ul>\n<li>見出し</li>\n<li>リッチテキストパーツ</li>\n<li>画像</li>\n<li>ボタン</li>\n</ul>\n</td>\n<td>\n<p><strong>■モーダル</strong></p>\n<ul>\n<li>デザインに合わせて変更可能<br/>\n     </li>\n</ul>\n<p><strong>JS変更箇所</strong></p>\n<ul>\n<li>cookieに保存しておく期間※①<br/>\n    変数名：<strong>expires02</strong></li>\n</ul>\n</td>\n<td>×</td>\n<td>◯<br/>\n ※1</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：一度バナーを閉じた場合、他ページでcookieのJSとバナーを入れていたとしても、【cookieに保存しておく期間】中は<br/>\n非表示のままになります。</p>\n<p><strong>【JS】</strong><br/>\n   ※①：デフォルトでは10年が設定されています。変更するにはJS編集が必要です。詳細は<a href=\"#setting\">こちら</a>▼</p>\n<ul>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>cookie判定のデモサイト</h2><p>挙動の確認を分かりやすくするためデモ用の確認ページを用意しています。</p>\n<p>右記のようにcookieの挙動が下記ボタンより確認できます。</p>\n<p> </p>\n<a href=\"/js/cookie/demo\">デモ確認用ページへ</a><h2>デモ</h2><p>テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。テキストが入ります。</p><a href=\"#\">はい</a><a href=\"/index\">いいえ（※JSパーツ一覧へ飛びます）</a></section>\n\n<section class=\"content-element content-4\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n<p><strong>補足：row（行）の背景がモーダル表示時の後ろの白背景にあたります。</strong></p>\n</section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>モーダル表示用の行（row）を共通パーツにて作成し、<br/>\n クラス名「<strong>cookie_check_row js-cookie_check_row js-displayNone</strong>」の3つを追加。<br/>\n ページ下部に設置する。（複数ページに表示する場合は共通フッターに設置）</li>\n<li>共通パーツ内に、選択用（はい・いいえ）のボタンパーツを2つ配置。</li>\n<li>「はい」用のボタン①にクラス名「<strong>cookie_check_btn js-cookie_check_btn_auth</strong>」の2つを追加。<br/>\n リンク先を[このページの一番上に遷移]に設定。</li>\n<li>「いいえ」用のボタン②にクラス名「<strong>cookie_check_btn</strong>」を追加。リンク先を[任意のURL]に設定。<br/>\n旧CMSの場合：必要に応じて、クラス名「<strong>btn_custom01</strong>」等を追加。</li>\n<li>スタイルはデザインイメージによって適宜変更してください。<br/>\n ※JSパーツ集では共通パーツ機能で作成しているため、内容によってはCSSの変更（sectionからの紐づけ）が必要です。</li>\n</ol>\n<ul>\n<li>\n<p>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。<br/>\n rowは新規で作成した方がCSSの影響を受けないので安心かと思います。</p>\n</li>\n</ul>\n<h2>JavaScript設定方法</h2><ol>\n<li>JS内で【<strong>Cookieに保存しておく期間</strong>】と検索。</li>\n<li>Cookieに保存しておく期間を変更する場合は変数【<strong>let expires02 = 〇〇;】</strong>の値を変更してください。<br/>\n （例①日数単位）：<strong>1</strong>日→【let expires02 = <strong>1</strong>;】<br/>\n （例②時間単位）：<strong>3</strong>時間→【let expires02 = <strong>3</strong> / 24;】</li>\n<li>デフォルトでCookieに保存しておく期間は10年（365 * 10）に設定しています。<br/>\n<strong>無期限にはできないので期間を必ず設定してください</strong>。</li>\n</ol>\n<ul><li><a href=\"https://ferret-one.akamaized.net/images/64b641af92ff3a0cd9c061f6/large.png?utime=1689665967\"></a></li></ul><h2>注意点</h2><ul>\n<li>「はい」ボタンのリンク先は「<strong>このページの一番上に遷移</strong>」を設定してください。</li>\n<li>「いいえ」ボタンのリンク先はcookie判定モーダルを設置したページと<strong>別のページ</strong>を設定してください。<br/>\n ※いいえボタンを押した時はcookie登録＆モーダル削除処理はされず遷移ページに飛ぶだけなので、遷移先ページにモーダルが設置されているとそのままモーダルが出しっぱなしになってしまいます。（「はい」ボタンを押した時にcookie登録＆モーダル削除処理がされる）なので、遷移先のページにはモーダル設置をしないようにお願いします。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-6\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-11-07更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- cookie判定用 START v1.0.0​​​​​-----*/<br/>/* 初期読み込み時に一瞬見えてしまう（チラつき）防止用クラス */<br/>.js-displayNone {<br/>  display: none !important;<br/>}<br/>// モーダルが出ている間はスクロールバー非表示<br/>.js-overflowHidden {<br/>  overflow: hidden !important;<br/>}<br/><br/>.row {<br/>  &amp;.cookie_check_row {<br/>    display: flex;<br/>    align-items: center;<br/>    justify-content: center;<br/>    position: fixed;<br/>    z-index: 10000;<br/>    top: 50%;<br/>    left: 50%;<br/>    width: 100%;<br/>    height: 110vh;<br/>    background: #fff;<br/>    transform: translate(-50%, -50%);<br/>    .col {<br/>      width: 100%;<br/>      max-width: 850px;<br/>      padding: 20px;<br/>      .component {<br/>        &amp;.cta {<br/>          .cta-row {<br/>            &amp; + .cta-row {<br/>              margin-top: 20px !important;<br/>            }<br/>            .cta-column {<br/>              .component {<br/>                .button {<br/>                  &amp;.cookie_check_btn {<br/>                    .button-cont {<br/>                      a {<br/>                        width: 100% !important;<br/>                        min-width: initial !important;<br/>                        max-width: 340px !important;<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- cookie判定用 END -----*/</section>\n\n<section class=\"content-element content-7\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-11-07更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- cookie判定用 編集画面用 START v1.0.0​​​​​--*/<br/>&amp;.cookie_check_row {<br/>  display: flex !important;<br/>  position: relative;<br/>  top: initial;<br/>  left: initial;<br/>  transform: initial;<br/>  width: 100%;<br/>  height: initial;<br/>  margin-top: 50px;<br/>  border: 1px solid red;<br/>  &amp;::before {<br/>    content: \"cookie判定用Row\";<br/>    position: absolute;<br/>    color: #fff;<br/>    background: red;<br/>    padding: 5px;<br/>    font-size: 16px;<br/>    right: 0;<br/>    top: -24px;<br/>  }<br/>}<br/>/*-- cookie判定用 編集画面用 END --*/</section>\n\n<section class=\"content-element content-8\"><h2>JavaScript</h2><p><strong>2025-06-30更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* ---------------------------<br/>    cookie判定 v1.0.0<br/>  --------------------------- */<br/>  document.addEventListener('DOMContentLoaded', function () {<br/><br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    const expiresDays = 365 * 10;<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    /* -------------- 変数定義（変更不可） -------------- */<br/>    const cookieKey = \"CookieConsentChecked\";<br/>    const cookieValue = \"true\";<br/>    const html = document.documentElement;<br/>    const authBtn = document.querySelector(\".js-cookie_check_btn_auth a\");<br/>    const authField = document.querySelector(\".js-cookie_check_row\");<br/><br/>    /* 日付作成とCookie文字列生成 */<br/>    const expireDate = new Date();<br/>    expireDate.setTime(expireDate.getTime() + expiresDays * 24 * 60 * 60 * 1000);<br/>    const cookieString = `${cookieKey}=${cookieValue}; expires=${expireDate.toGMTString()}; path=/`;<br/><br/>    /* Cookie登録処理 */<br/>    function registration() {<br/>      console.log(\"Cookieが登録されました\");<br/>    }<br/><br/>    /* 認証成功処理 */<br/>    function authenticated() {<br/>      console.log(\"認証できました\");<br/>    }<br/><br/>    /* 認証失敗処理 */<br/>    function unauthenticated() {<br/>      console.log(\"認証できませんでした\");<br/><br/>      if (authField) {<br/>        authField.classList.remove(\"js-displayNone\");<br/>        html.classList.add(\"js-overflowHidden\");<br/>      }<br/>    }<br/><br/>    /* 認証ボタンクリック時の処理 */<br/>    if (authBtn) {<br/>      authBtn.addEventListener(\"click\", function (event) {<br/>        event.preventDefault();<br/>        document.cookie = cookieString;<br/>        registration();<br/><br/>        if (authField) {<br/>          authField.style.display = \"none\";<br/>        }<br/>        html.classList.remove(\"js-overflowHidden\");<br/>      });<br/>    }<br/><br/>    /* Cookieをチェックして認証処理 */<br/>    function checkCookie() {<br/>      const cookies = document.cookie.split(\";\");<br/>      let isAuthenticated = false;<br/><br/>      cookies.forEach(c =&gt; {<br/>        const [key, value] = c.trim().split(\"=\");<br/>        if (key === cookieKey &amp;&amp; value === cookieValue) {<br/>          isAuthenticated = true;<br/>        }<br/>      });<br/><br/>      if (isAuthenticated) {<br/>        authenticated();<br/>      } else {<br/>        unauthenticated();<br/>      }<br/>    }<br/><br/>    checkCookie();<br/>  });<br/>  /* ---------------------------<br/>    cookie判定 END<br/>  --------------------------- */<br/>&lt;/script&gt;</section>"
  },
  {
    "title": "モーダル02",
    "url": "https://js-part.hmup.jp/js/modal02",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>モーダル02</h2><p>ボタンクリックでモーダル表示</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>NG</th>\n<th>同一ページに<br/>\n   複数設置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p><strong>■モーダル表示部分</strong><br/>\n（カラムに設置可能なパーツ）</p>\n<ul>\n<li>デザインパーツ\n    <ul>\n<li>見出し</li>\n<li>テキスト/リッチテキスト</li>\n<li>画像</li>\n<li>ボタン（複数可）</li>\n</ul>\n</li>\n</ul>\n<p> </p>\n</td>\n<td>\n<ul>\n<li>デザインに合わせて変更可能</li>\n<li>モーダルの幅</li>\n<li>[×]ボタンの色</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>\n<p>モーダル内で行（row）の増減</p>\n</li>\n<li>複数カラム※1</li>\n</ul>\n</td>\n<td>〇</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：<a href=\"//js-part.hmup.jp/js/modal\">通常のモーダルパーツ</a>と違ってこちらのパーツは簡易的なモーダルのため、モーダル部分が一つの行（row）で構成されているパーツになります。そのため、〜4カラムまでの行は一つまでしか置けません。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><ul>\n<li>[モーダルオープン]ボタンパーツをクリックでモーダル表示。</li>\n<li>（リッチテキストで擬似的に作成した）[×]ボタンクリックでモーダルを閉じる。<br/>\n または、オーバーレイ（黒透過背景）クリックでモーダルを閉じる。</li>\n</ul>\n<a href=\"#\">モーダルオープン</a><p>モーダルを閉じるボタン</p><p>これより先はパートナー契約を結んだ<br/>企業様専用サイトとなります。</p><a href=\"#\">ログイン画面へ</a><a href=\"#\">パートナーサイトへ</a></section>\n\n<section class=\"content-element content-4\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSを適切な位置に記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>モーダル表示のトリガーとなるボタンパーツを配置し、クラス名「<strong>js-modal_btn</strong>」を追加。リンク先を[このページの一番上に遷移]に設定。<br/>\n旧CMSの場合：必要に応じて、クラス名「<strong>btn_custom01</strong>」等を追加。</li>\n<li>上記パーツのすぐ下にモーダル表示用の行（row）を作成し、クラス名「<strong>modal02_row js-modal_row</strong>」の２つを追加。</li>\n<li>モーダル表示用の行（row）内の一番上辺りに「リッチテキストパーツ」を配置し、<br/>\n クラス名「<strong>modal02_close_btn js-close_btn</strong>」の２つを追加。（=モーダル閉じるボタン）</li>\n<li>横並びのレイアウトの場合、調整が必要になるため適宜該当コメントアウトを外して調整してください。</li>\n</ol>\n<ul>\n<li>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。</li>\n</ul>\n<h2>注意点</h2><ul>\n<li>クリック時の黒透過背景にスクロール対策を入れていないため、<a href=\"//js-part.hmup.jp/js/modal\">モーダル</a>を参考にして適宜調整を入れてください。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-6\" data-designpart=\"section-tab-nab-v2\" data-designpart-id=\"6822d4806248c1056f815e0a\"><h2>JS・CSS・編集画面用CSS<br/></h2><p><strong>【旧リッチテキストパーツ】で組み込みが必要な場合にお使いください。</strong></p><ul><li><strong>jS</strong></li><li><strong>CSS</strong></li><li><strong>編集画面用CSS</strong></li></ul><a href=\"#\">JSをコピーする</a><p><strong>2025-07-02更新（v1.1.0）</strong></p>\n&lt;script&gt;<br/>  'use strict';<br/>/* ----------------<br/>  モーダル02 v1.1.0​​​​​<br/>---------------- */<br/>  const modalModule = (() =&gt; {<br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    const modalOpenBtn = document.querySelectorAll('.js-modal_btn')[0]; /* モーダルオープンボタン */<br/>    const modal = document.querySelectorAll('.js-modal_row')[0]; /* モーダルrow */<br/>    const modalCloseBtn = document.querySelectorAll('.js-close_btn')[0]; /* モーダルクローズボタン */<br/>    const html_element = document.getElementsByTagName('html')[0]; /* body */<br/>    const body_element = document.getElementsByTagName('body')[0]; /* body */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    /* クローズボタン生成 */<br/>    setTimeout(() =&gt; {<br/>      modalCloseBtn.replaceChildren();<br/><br/>      const plainWrapper = document.createElement('div');<br/>      plainWrapper.classList.add('modal_close_button_container');<br/><br/>      for (let i = 0; i &lt; 2; i++) {<br/>        const span = document.createElement('span');<br/>        span.classList.add('modal_close_border');<br/>        plainWrapper.appendChild(span);<br/>      }<br/><br/>      modalCloseBtn.prepend(plainWrapper);<br/>    }, 300);<br/> <br/>    /* モーダルオープン */<br/>    const openModal = () =&gt; {<br/>      /* オーバーレイ生成 */<br/>      body_element.classList.add('is-modal-open');<br/>      html_element.classList.add('is-modal-open');<br/>      modal.classList.add('is-show');<br/>    };<br/> <br/>    /* モーダルクローズ */<br/>    const closeModal = () =&gt; {<br/>      body_element.classList.remove('is-modal-open');<br/>      html_element.classList.remove('is-modal-open');<br/>      modal.classList.remove('is-show');<br/>    };<br/><br/>    /* クリックイベント */<br/>    modalOpenBtn.addEventListener('click', function (e) {<br/>      e.preventDefault();<br/>      openModal();<br/>    });<br/><br/>    modalCloseBtn.addEventListener('click', function () {<br/>      closeModal();<br/>    });<br/><br/>    document.addEventListener('click', function(e) {<br/>      if (!e.target.closest('.js-modal_row') &amp;&amp; !e.target.closest('.js-modal_btn')) {<br/>        /* ハンバーガメニューを閉じる */<br/>        closeModal();<br/>      } else {<br/>        /* ハンバーガメニュー領域内をクリックしたよ */<br/>      }<br/>    });<br/><br/>  })();<br/>&lt;/script&gt;<br/>&lt;style&gt;<br/>  /* アニメーションの記述 （モーダル表示） */<br/>  @keyframes opacity01 {<br/>    0% {<br/>      opacity: 0;<br/>    }<br/>    100% {<br/>      opacity: 1;<br/>    }<br/>  }<br/>  .js-modal_row {<br/>    animation: opacity01 0.3s cubic-bezier(0.45, 0.05, 0.55, 0.95) both;<br/>    opacity: 0;<br/>  }<br/>  .js-modal_row.is-show {<br/>    opacity: 1;<br/>  }<br/>&lt;/style&gt;<br/>&lt;!-- モーダル02 --&gt;<br/><br/><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p><a href=\"#\">CSSをコピーする</a><p><strong>2023-07-18更新（v1.0.0）</strong></p>\n/*----- モーダル02 START v1.0.0​​​​​-----*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>    .inner {<br/>      .row {<br/>        // モーダル JS操作<br/>        &amp;.js-modal_row {<br/>          display: none;//読み込み時非表示<br/>          /*クリックでモーダル表示*/<br/>          &amp;.is-show {<br/>            display: block !important;<br/>            // display: flex !important;//複数カラムの場合は、blockで縦になるのでこちらを使用<br/>          }<br/>        }<br/>        // モーダル スタイル調整<br/>        &amp;.modal02_row {<br/>          position: fixed;<br/>          z-index: 10000;<br/>          top: 50%;<br/>          left: 50%;<br/>          width: 100%;<br/>          max-width: 500px;<br/>          padding: 20px;<br/>          color: #000;<br/>          background: #fff;<br/>          transform: translate(-50%, -50%);<br/>          @include breakpoint-sp {<br/>            max-width: 500px;<br/>            padding: 60px 20px !important;<br/>          }<br/>          @include breakpoint-ssp {<br/>            max-width: calc(100% - 40px);<br/>            padding: 60px 20px !important;<br/>          }<br/>          .col {<br/>            display: flex !important;<br/>            flex-direction: column;<br/>            align-items: center;<br/>            justify-content: center;<br/>            width: 100%;<br/>            min-height: 500px;<br/>            padding: 0;<br/>            @include breakpoint-sp {<br/>              min-height: 450px;<br/>            }<br/>            @include breakpoint-ssp {<br/>              min-height: 300px;<br/>            }<br/>            .component {<br/>              @include breakpoint-sp {<br/>                width: 100%;<br/>              }<br/>              &amp;.modal02_close_btn {<br/>                cursor: pointer;<br/>                position: absolute;<br/>                top: 0;<br/>                right: 0;<br/>                width: 50px;<br/>                height: 50px;<br/>                margin: 0;<br/>                background: #ffad2f;<br/>                span.modal_close_border {<br/>                  display: inline-block;<br/>                  position: absolute;<br/>                  width: 27px;<br/>                  height: 2px;<br/>                  border-radius: 1px;<br/>                  background-color: #fff;<br/>                  &amp;:nth-of-type(1) {<br/>                    top: 17px;<br/>                    left: 12px;<br/>                    transform: translateY(7px) rotate(-45deg);<br/>                  }<br/>                  &amp;:nth-of-type(2) {<br/>                    bottom: 17px;<br/>                    left: 12px;<br/>                    transform: translateY(-7px) rotate(45deg);<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>// モーダルオーバーレイ<br/>html {<br/>  &amp;.is-modal-open {<br/>    overflow: hidden;<br/>    height: -webkit-fill-available;<br/>  }<br/>}<br/>body {<br/>  &amp;.is-modal-open {<br/>    position: relative;<br/>    overflow: hidden;<br/>    min-height: -webkit-fill-available;<br/>    &amp;::before {<br/>      content: \"\";<br/>      position: absolute;<br/>      z-index: 10000;<br/>      top: 0;<br/>      left: 0;<br/>      width: 100%;<br/>      height: 100%;<br/>      background: rgba(0, 0, 0, 0.5);<br/>    }<br/>  }<br/>}<br/>/*----- モーダル02 END -----*/<p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p><a href=\"#\">CSSをコピーする</a><p><strong>2024-09-17更新（v1.0.0）</strong></p>\n/*-- モーダル02 編集画面用 START v1.0.0​​​​​--*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root:root:root)) {<br/>  .inner {<br/>    .row {<br/>      &amp;.js-modal_row {<br/>        display: block !important;<br/>        // display: flex !important;//複数カラムの場合は、blockで縦になるのでこちらを使用<br/>      }<br/>      &amp;.modal02_row {<br/>        position: relative !important;<br/>        z-index: initial;<br/>        top: initial;<br/>        left: initial;<br/>        width: 80%;<br/>        margin: 40px auto;<br/>        transform: initial;<br/>        border: 1px solid #000;<br/>        &amp;::before {<br/>          content: \"モーダル（ボタンクリックで表示）\";<br/>          position: absolute;<br/>          color: #fff;<br/>          background: #000;<br/>          padding: 5px 5px;<br/>          right: 0;<br/>          top: -24px;<br/>          font-size: 14px;<br/>          line-height: 1;<br/>        }<br/>        .col {<br/>          display: flex !important;<br/>          position: relative !important;<br/>          .component {<br/>            width: 100%;<br/>          }<br/>          .modal02_close_btn {<br/>            position: relative;<br/>            width: 100% !important;<br/>            border: 1px solid red !important;<br/>            &amp;::before {<br/>              content: \"モーダルの閉じるボタン（削除しないでください）\";<br/>              position: absolute;<br/>              color: #fff;<br/>              background: red;<br/>              padding: 5px 5px;<br/>              right: 0;<br/>              top: -24px;<br/>              font-size: 14px;<br/>              line-height: 1;<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- モーダル02 編集画面用 END --*/<br/></section>\n\n<section class=\"content-element content-7\" data-designpart=\"section-tab-nab-v2\" data-designpart-id=\"6822d4806248c1056f815e0a\" style=\"background-color:#fbf9ef\"><h2>旧リッチテキストパーツ用<br/>JS・CSS・編集画面用CSS<br/></h2><p><strong>【旧リッチテキストパーツ】で組み込みが必要な場合にお使いください。</strong></p><ul><li><strong>jS</strong></li><li><strong>CSS</strong></li><li><strong>編集画面用CSS</strong></li></ul><a href=\"#\">JSをコピーする</a><p><strong>2023-07-18更新（v1.0.0）</strong></p>\n&lt;script&gt;<br/>  'use strict';<br/>/* ----------------<br/>  モーダル02 v1.0.0​​​​​<br/>---------------- */<br/>  const modalModule = (() =&gt; {<br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    const modalOpenBtn = document.querySelectorAll('.js-modal_btn')[0]; /* モーダルオープンボタン */<br/>    const modal = document.querySelectorAll('.js-modal_row')[0]; /* モーダルrow */<br/>    const modalCloseBtn = document.querySelectorAll('.js-close_btn')[0]; /* モーダルクローズボタン */<br/>    const html_element = document.getElementsByTagName('html')[0]; /* body */<br/>    const body_element = document.getElementsByTagName('body')[0]; /* body */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    /* クローズボタン生成 */<br/>    modalCloseBtn.innerText = '';<br/>    for (let i = 0; i &lt; 2; i++) {<br/>      let modalCloseBorder = document.createElement('span');<br/>      modalCloseBorder.classList.add('modal_close_border');<br/>      modalCloseBtn.appendChild(modalCloseBorder);<br/>    };<br/> <br/>    /* モーダルオープン */<br/>    const openModal = () =&gt; {<br/>      /* オーバーレイ生成 */<br/>      body_element.classList.add('is-modal-open');<br/>      html_element.classList.add('is-modal-open');<br/>      modal.classList.add('is-show');<br/>    };<br/> <br/>    /* モーダルクローズ */<br/>    const closeModal = () =&gt; {<br/>      body_element.classList.remove('is-modal-open');<br/>      html_element.classList.remove('is-modal-open');<br/>      modal.classList.remove('is-show');<br/>    };<br/><br/>    /* クリックイベント */<br/>    modalOpenBtn.addEventListener('click', function (e) {<br/>      e.preventDefault();<br/>      openModal();<br/>    });<br/><br/>    modalCloseBtn.addEventListener('click', function () {<br/>      closeModal();<br/>    });<br/><br/>    document.addEventListener('click', function(e) {<br/>      if (!e.target.closest('.js-modal_row') &amp;&amp; !e.target.closest('.js-modal_btn')) {<br/>        /* ハンバーガメニューを閉じる */<br/>        closeModal();<br/>      } else {<br/>        /* ハンバーガメニュー領域内をクリックしたよ */<br/>      }<br/>    });<br/><br/>  })();<br/>&lt;/script&gt;<br/>&lt;style&gt;<br/>  /* アニメーションの記述 （モーダル表示） */<br/>  @keyframes opacity01 {<br/>    0% {<br/>      opacity: 0;<br/>    }<br/>    100% {<br/>      opacity: 1;<br/>    }<br/>  }<br/>  .js-modal_row {<br/>    animation: opacity01 0.3s cubic-bezier(0.45, 0.05, 0.55, 0.95) both;<br/>    opacity: 0;<br/>  }<br/>  .js-modal_row.is-show {<br/>    opacity: 1;<br/>  }<br/>&lt;/style&gt;<br/>&lt;!-- モーダル02 --&gt;<br/><br/><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p><a href=\"#\">CSSをコピーする</a><p><strong>2023-07-18更新（v1.0.0）</strong></p>\n/*----- モーダル02 START v1.0.0​​​​​-----*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>    .inner {<br/>      .row {<br/>        // モーダル JS操作<br/>        &amp;.js-modal_row {<br/>          display: none;//読み込み時非表示<br/>          /*クリックでモーダル表示*/<br/>          &amp;.is-show {<br/>            display: block !important;<br/>            // display: flex !important;//複数カラムの場合は、blockで縦になるのでこちらを使用<br/>          }<br/>        }<br/>        // モーダル スタイル調整<br/>        &amp;.modal02_row {<br/>          position: fixed;<br/>          z-index: 10000;<br/>          top: 50%;<br/>          left: 50%;<br/>          width: 100%;<br/>          max-width: 500px;<br/>          padding: 20px;<br/>          color: #000;<br/>          background: #fff;<br/>          transform: translate(-50%, -50%);<br/>          @include breakpoint-sp {<br/>            max-width: 500px;<br/>            padding: 60px 20px !important;<br/>          }<br/>          @include breakpoint-ssp {<br/>            max-width: calc(100% - 40px);<br/>            padding: 60px 20px !important;<br/>          }<br/>          .col {<br/>            display: flex !important;<br/>            flex-direction: column;<br/>            align-items: center;<br/>            justify-content: center;<br/>            width: 100%;<br/>            min-height: 500px;<br/>            padding: 0;<br/>            @include breakpoint-sp {<br/>              min-height: 450px;<br/>            }<br/>            @include breakpoint-ssp {<br/>              min-height: 300px;<br/>            }<br/>            .component {<br/>              @include breakpoint-sp {<br/>                width: 100%;<br/>              }<br/>              &amp;.modal02_close_btn {<br/>                cursor: pointer;<br/>                position: absolute;<br/>                top: 0;<br/>                right: 0;<br/>                width: 50px;<br/>                height: 50px;<br/>                margin: 0;<br/>                background: #ffad2f;<br/>                span.modal_close_border {<br/>                  display: inline-block;<br/>                  position: absolute;<br/>                  width: 27px;<br/>                  height: 2px;<br/>                  border-radius: 1px;<br/>                  background-color: #fff;<br/>                  &amp;:nth-of-type(1) {<br/>                    top: 17px;<br/>                    left: 12px;<br/>                    transform: translateY(7px) rotate(-45deg);<br/>                  }<br/>                  &amp;:nth-of-type(2) {<br/>                    bottom: 17px;<br/>                    left: 12px;<br/>                    transform: translateY(-7px) rotate(45deg);<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>// モーダルオーバーレイ<br/>html {<br/>  &amp;.is-modal-open {<br/>    overflow: hidden;<br/>    height: -webkit-fill-available;<br/>  }<br/>}<br/>body {<br/>  &amp;.is-modal-open {<br/>    position: relative;<br/>    overflow: hidden;<br/>    min-height: -webkit-fill-available;<br/>    &amp;::before {<br/>      content: \"\";<br/>      position: absolute;<br/>      z-index: 10000;<br/>      top: 0;<br/>      left: 0;<br/>      width: 100%;<br/>      height: 100%;<br/>      background: rgba(0, 0, 0, 0.5);<br/>    }<br/>  }<br/>}<br/>/*----- モーダル02 END -----*/<p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p><a href=\"#\">CSSをコピーする</a><p><strong>2024-09-17更新（v1.0.0）</strong></p>\n/*-- モーダル02 編集画面用 START v1.0.0​​​​​--*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root:root:root)) {<br/>  .inner {<br/>    .row {<br/>      &amp;.js-modal_row {<br/>        display: block !important;<br/>        // display: flex !important;//複数カラムの場合は、blockで縦になるのでこちらを使用<br/>      }<br/>      &amp;.modal02_row {<br/>        position: relative !important;<br/>        z-index: initial;<br/>        top: initial;<br/>        left: initial;<br/>        width: 80%;<br/>        margin: 40px auto;<br/>        transform: initial;<br/>        border: 1px solid #000;<br/>        &amp;::before {<br/>          content: \"モーダル（ボタンクリックで表示）\";<br/>          position: absolute;<br/>          color: #fff;<br/>          background: #000;<br/>          padding: 5px 5px;<br/>          right: 0;<br/>          top: -24px;<br/>          font-size: 14px;<br/>          line-height: 1;<br/>        }<br/>        .col {<br/>          display: flex !important;<br/>          position: relative !important;<br/>          .component {<br/>            width: 100%;<br/>          }<br/>          .modal02_close_btn {<br/>            position: relative;<br/>            width: 100% !important;<br/>            border: 1px solid red !important;<br/>            &amp;::before {<br/>              content: \"モーダルの閉じるボタン（削除しないでください）\";<br/>              position: absolute;<br/>              color: #fff;<br/>              background: red;<br/>              padding: 5px 5px;<br/>              right: 0;<br/>              top: -24px;<br/>              font-size: 14px;<br/>              line-height: 1;<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- モーダル02 編集画面用 END --*/<br/></section>\n\n<section class=\"content-element content-11\">  <!-- モーダル02 --></section>"
  },
  {
    "title": "初回アクセス時モーダル表示（×ボタンで非表示）",
    "url": "https://js-part.hmup.jp/js/popup",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>初回アクセス時モーダル表示<br/>（×ボタンで非表示）</h2><p>初回アクセス時のみモーダルを表示し、<br/>\n×ボタンで非表示にすると指定した期間中再表示しません（デフォルトでは30日間）</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<ul>\n<li>画像のみ\n    <ul>\n<li>バナー画像</li>\n<li>バナー閉じる[✕]画像</li>\n</ul>\n</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>バナー画像のサイズ</li>\n<li>バナー閉じる[✕]画像のサイズ</li>\n<li>hover時の画像透過有無※1</li>\n<li>SP表示・非表示設定※2</li>\n</ul>\n<p> <br/>\n<strong>JS変更箇所</strong></p>\n<ul>\n<li> cookieに保存しておく期間※①<br/>\n     変数名 : expires</li>\n</ul>\n</td>\n<td>×</td>\n<td>◯<br/>\n※3</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：デフォルトではhover時の画像透過は無しにしています。CSSで透過ありに変更できます。<br/>\n※2：デフォルトでは、画面幅が769px以下（SP）でも表示されます。SPで非表示にしたい場合は、クラス「<strong>pcOnly</strong>」を付与する必要があります。<br/>\n※3：一度バナーを閉じた場合、他ページでcookieのJSとバナーを入れていたとしても、【cookieに保存しておく期間】中は非表示のままになります。</p>\n<p><strong>【JS】</strong><br/>\n   ※①：デフォルトでは30日間が設定されています。変更するにはJS編集が必要です。詳細は<a href=\"#setting\">こちら</a>▼</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><p>一度閉じる[✕]ボタンを押すと、30日間（デフォルト）再表示されません。<br/>\n閉じるボタンを押すとcookieが登録されるので、登録されたcookieを削除（下記参照）すれば再度挙動をご確認できます。<br/>\n<br/>\n※デフォルト設定では、画面幅が769px以下（SP）でも表示されます。</p>\n<p>▼削除方法▼</p>\n<ul><li><a href=\"https://ferret-one.akamaized.net/images/64df1b1b81312334cfb3ed47/large.png?utime=1692343067\"></a></li><li><a href=\"https://ferret-one.akamaized.net/images/64df1b2381312334cfb3eff7/large.png?utime=1692343075\"></a></li></ul><a href=\"/index\"></a></section>\n\n<section class=\"content-element content-5\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n<p>※デモでは分かりやすくセクション内にパーツを入れていますが、<br/>\n余白等を削除する必要が出てくるため実際はフッター等に入れるのがおすすめです。</p>\n</section>\n\n<section class=\"content-element content-6\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション内</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>モーダル表示用の行（row）を作成し、<br/>\n クラス名「<strong>js-popup_row popup_row  js-displayNone</strong>」の3つを追加。<br/>\n ページ下部に設置する。（複数ページに表示する場合は共通フッターに設置）</li>\n<li>上記row内に共通パーツを作成し、①バナー閉じる用[✕]画像と②バナー画像を配置。</li>\n<li>①バナー閉じる用[✕]画像にクラス名「<strong>js-popup_close_img popup_close_img</strong>」の2つを追加。<br/>\n リンク先は設定しません。</li>\n<li>②バナー画像にクラス名「<strong>popup_img</strong>」を追加。<br/>\n リンク先を[任意のURL]に設定。</li>\n<li>画像の幅等は適宜CSSで変更してください。<br/>\n ※JSパーツ集では共通パーツ機能で作成しているため、内容によってはCSSの調整（sectionからの紐づけ）が必要です。</li>\n<li>\n<p>SPで非表示にしたい場合、モーダル表示用の行（row）にクラス名「<strong>pcOnly</strong>」を追加。</p>\n</li>\n</ol>\n<ul>\n<li>\n<p>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。<br/>\n rowは新規で作成した方がCSSの影響を受けないので安心かと思います。</p>\n</li>\n</ul>\n<h2>JavaScript設定方法</h2><ol>\n<li>JS内で【<strong>Cookieに保存しておく期間</strong>】と検索。</li>\n<li>Cookieに保存しておく期間を変更する場合は変数【<strong>let expires = 〇〇;】</strong>の値を変更してください。<br/>\n （例①日数単位）：<strong>1</strong>日→【let expires = <strong>1</strong>;】<br/>\n （例②時間単位）：<strong>3</strong>時間→【let expires = <strong>3</strong> / 24;】</li>\n<li>デフォルトでCookieに保存しておく期間は30日間（30）に設定しています。<br/>\n<strong>無期限にはできないので期間を必ず設定してください</strong>。</li>\n</ol>\n<ul><li><a href=\"https://ferret-one.akamaized.net/images/64df16ecda0a25397f49887a/large.png?utime=1692341996\"></a></li></ul></section>\n\n<section class=\"content-element content-7\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-08-18更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- 初回アクセス時モーダル表示（×ボタンで非表示） START v1.0.0​​​​​-----*/<br/>/* 再読み込み時に一瞬見えてしまう（チラつき）防止用クラス */<br/>.js-displayNone {<br/>  display: none !important;<br/>}<br/><br/>.row {<br/>  &amp;.popup_row {<br/>    display: flex;<br/>    align-items: center;<br/>    justify-content: center;<br/>    position: fixed;<br/>    z-index: 10000;<br/>    top: 50%;<br/>    left: 50%;<br/>    width: 100%;<br/>    height: 110vh;<br/>    background: rgba(#000,.6);<br/>    transform: translate(-50%, -50%);<br/>    .col {<br/>      width: 100%;<br/>      max-width: 500px;<br/>      position: relative;<br/>      padding: 20px;<br/>      .component {<br/>        /* CTAでなくても使えるようにネスト飛ばし（必要あれば各自修正してください）*/<br/>        // ✕ボタン<br/>        &amp;.popup_close_img {<br/>          position: absolute;<br/>          top: -13px;<br/>          right: -13px;<br/>          z-index: 2;<br/>          img {<br/>            cursor: pointer;<br/>            max-width: 30px !important;<br/>          }<br/>        }<br/>        // バナー本体<br/>        &amp;.popup_img {<br/>          a {<br/>            &amp;:hover {<br/>              opacity: 1;//デフォルトでは透過なし<br/>            }<br/>            img {<br/>              &amp;:hover {<br/>                opacity: 1;//二重透過対策<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>// モーダルが出ている間はスクロールバー非表示<br/>.js-overflowHidden {<br/>  overflow: hidden !important;<br/>}<br/>/*----- 初回アクセス時モーダル表示（×ボタンで非表示） END -----*/</section>\n\n<section class=\"content-element content-8\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-08-18更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- 初回アクセス時モーダル表示（×ボタンで非表示） 編集画面用 START v1.0.0​​​​​--*/<br/>.js-displayNone {<br/>  display: block !important;<br/>  border: 1px solid #000;<br/>  &amp;::before {<br/>    content: \"JS読み込み後にクラスを外す。ちらつき防止（JSで使用）\";<br/>    position: absolute;<br/>    color: #fff;<br/>    background: #000;<br/>    padding: 5px 5px;<br/>    right: 0;<br/>    top: -24px;<br/>    font-size: 14px;<br/>    line-height: 1;<br/>  }<br/>}<br/>.row {<br/>  &amp;.popup_row {<br/>    display: flex !important;<br/>    position: relative;<br/>    top: initial;<br/>    left: initial;<br/>    transform: initial;<br/>    width: 100%;<br/>    height: initial;<br/>    margin-top: 50px;<br/>    border: 1px solid red;<br/>    &amp;::before {<br/>      content: \"初回モーダル表示（×ボタンで非表示）Row\";<br/>      position: absolute;<br/>      color: #fff;<br/>      background: red;<br/>      padding: 5px;<br/>      font-size: 16px;<br/>      right: 0;<br/>      top: -24px;<br/>    }<br/>    .col {<br/>      .component {<br/>        &amp;.image {<br/>          &amp;.popup_close_img {<br/>            position: relative;<br/>            top: initial;<br/>            right: initial;<br/>            z-index: initial;<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- 初回アクセス時モーダル表示（×ボタンで非表示） 編集画面用 END --*/</section>\n\n<section class=\"content-element content-9\"><h2>JavaScript</h2><p><strong>2025-06-30更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* -------------------------------------<br/>    初回アクセス時モーダル表示（×ボタンで非表示） v1.0.0<br/>  ------------------------------------- */<br/>  document.addEventListener('DOMContentLoaded', function () {<br/><br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    const expiresDays = 30; /* cookieに保存しておく期間 【 30日間（デフォルトでは日数単位） 】 */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    const cookieKey = \"bannerClosed\";<br/>    const cookieValue = \"true\";<br/>    const html = document.documentElement;<br/>    const closeBtn = document.querySelector('.js-popup_close_img');<br/>    const banner = document.querySelector('.js-popup_row');<br/><br/>    /* Cookieデータ作成 */<br/>    const expireDate = new Date();<br/>    expireDate.setTime(expireDate.getTime() + expiresDays * 24 * 60 * 60 * 1000);<br/>    const cookieString = `${cookieKey}=${cookieValue}; expires=${expireDate.toGMTString()}; path=/`;<br/><br/>    function registration() {<br/>      console.log(\"Cookieが登録されました\");<br/>      if (banner) banner.style.display = 'none';<br/>    }<br/><br/>    function authenticated() {<br/>      console.log(\"認証できました\");<br/>    }<br/><br/>    function unauthenticated() {<br/>      console.log(\"認証できませんでした\");<br/>      if (!banner) return;<br/><br/>      const isPcOnly = banner.classList.contains('pcOnly');<br/>      const isSp = window.matchMedia('(max-width: 769px)').matches;<br/><br/>      if (isPcOnly &amp;&amp; isSp) {<br/>        banner.style.display = 'none';<br/>      } else {<br/>        banner.classList.remove('js-displayNone');<br/>        html.classList.add('js-overflowHidden');<br/>      }<br/>    }<br/><br/>    /* ボタンクリックでバナー閉じる＆cookie登録 */<br/>    if (closeBtn) {<br/>      closeBtn.addEventListener('click', function (event) {<br/>        event.preventDefault();<br/>        document.cookie = cookieString;<br/>        registration();<br/>        html.classList.remove('js-overflowHidden');<br/>      });<br/>    }<br/><br/>    /* cookieチェック */<br/>    function checkCookie() {<br/>      const cookies = document.cookie.split(';').map(c =&gt; c.trim());<br/>      const found = cookies.some(c =&gt; c.startsWith(`${cookieKey}=${cookieValue}`));<br/>      return found;<br/>    }<br/><br/>    /* 判定処理 */<br/>    if (checkCookie()) {<br/>      authenticated();<br/>    } else {<br/>      unauthenticated();<br/>    }<br/>  });<br/>  /* -------------------------------------<br/>    初回アクセス時モーダル表示（×ボタンで非表示） END<br/>  ------------------------------------- */<br/>&lt;/script&gt;</section>\n\n<section class=\"content-element content-10\"></section>"
  },
  {
    "title": "バナー（3秒後に表示）",
    "url": "https://js-part.hmup.jp/js/banner",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>バナー（3秒後に表示）<br/></h2><p>3秒後に右下にバナーを表示<br/>\n※SP表示あり（デフォルト）</p>\n<p><strong>【オプション設定】</strong></p>\n<p><strong>①一定期間バナーの再表示禁止　②フッター直前にバナーの追従を停止</strong><br/>\n<strong>※</strong>各オプションはデフォルト<strong>非設定</strong></p>\n</section>\n\n<section class=\"content-element content-2\"></section>\n\n<section class=\"content-element content-3 js-load_sec load_sec\" style=\"background-color:#fbf9ef\"><a href=\"#\"></a></section>\n\n<section class=\"content-element content-4\">\n<table>\n<thead>\n<tr>\n<th>追加可能<br/>\n   パーツ</th>\n<th>変更可能</th>\n<th>同一ページに<br/>\n   複数設置</th>\n<th>\n<p><strong>ページ複製・<br/>\n   クリップボード使用可否</strong></p>\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>×</p>\n</td>\n<td>\n<ul>\n<li>バナー画像※1</li>\n<li>バナーのサイズ※2</li>\n<li>バナーの表示位置</li>\n<li>バナー内に入れる画像の枚数<br/>\n     </li>\n<li>バナー閉じる[<strong>×</strong>]画像※3</li>\n<li>バナー閉じる[<strong>×</strong>]画像のサイズ</li>\n<li>バナー閉じる[<strong>×</strong>]画像の表示位置</li>\n<li>\n<p>SP時表示・非表示※4</p>\n</li>\n<li>\n<p>PC時表示・非表示※5</p>\n</li>\n</ul>\n<p><br/>\n<strong>JS変更箇所</strong></p>\n<ul>\n<li>バナー表示までの時間（デフォルトでは3秒）<br/>\n変数名：<strong>waitTime</strong></li>\n<li>バナーのRowクラス　\n    <p>変数名：<strong>bannerSelector</strong></p>\n</li>\n<li>\n<p>閉じる[×]クリックしてから、再度表示するまでの時間<br/>\n変数名 :<strong>cookieAction、hideDuration※①</strong></p>\n</li>\n<li>\n<p>フッターの直前にバナーを停止 <br/>\n変数名：<strong>footerAction、footerSelectors※②</strong></p>\n<p> </p>\n</li>\n</ul>\n</td>\n<td>×</td>\n<td>\n<p><strong>◯</strong></p>\n</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1※3：バナー画像はそれぞれご用意お願いします。<br/>\n   ※2：画像サイズはCSSで調整可能ですが、実装後はそのサイズが固定になります。<br/>\n   ※4：デフォルト設定では画面幅が769px以下（SP）でも表示されますが、SPで非表示も可能。その場合、バナーを格納している行（row）にクラス名「<strong>pcOnly</strong>」を追加します。<br/>\n   ※5：バナーを格納している行（row）にクラス名「<strong>spOnly</strong>」を追加することで、PCでバナーを非表示にします。</p>\n<p>※一定期間バナーの再表示禁止をONにしてる場合、閉じる[×]ボタンクリック後、設定時間内（30分指定）では再度アクセスしても表示されません。<br/>\n   ※一度バナーを閉じた場合、他ページでバナーを入れていたとしても、30分間は非表示のままになります。</p>\n<p> </p>\n<p><strong> 【JS】</strong></p>\n<p>※①：使用する場合は「<strong>cookieAction</strong>」の変数を「true」に変更します。<br/>\n   　　　デフォルトでは30分間バナーの再表示禁止で設定しています。<br/>\n   ※②：使用する場合は「<strong>footerAction</strong>」の変数を「true」に変更します。<br/>\n   　　　変数：<strong>footerSelectors</strong>にフッターのクラスを入力します。<br/>\n   　　　フッターが１種類の場合は変数値の「<strong>.ft_hoge</strong>」はそのままにします。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fbf9ef\"><h2>デモ</h2>右下のバナーを参照ください。（3秒後に表示）<br/>デモではオプション（一定期間バナーの再表示禁止・フッター直前に停止）を設定しています。<br/><ul>\n<li><strong>3000ms後（3秒後）バナー表示 </strong></li>\n<li><strong>画面幅が769px以下（SP）でも表示されます。</strong><br/>\n  </li>\n<li> オプション：一定期間バナーの再表示禁止\n <p>[×]ボタンでバナー非表示→1分間表示されません。1分後から表示されます。（デフォルトは30分）</p>\n</li>\n<li>\n<p>オプション：フッター直前に停止</p>\n</li>\n</ul>\n<a href=\"#\"></a></section>\n\n<section class=\"content-element content-6\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-7\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>バナー画像を格納する行（row）にクラス名「<strong>js-banner_row banner_row</strong>」の2つを追加。</li>\n<li>バナーのメイン画像にクラス名「<strong>banner_img</strong>」を追加。</li>\n<li>バナーを閉じる[<strong>×</strong>]ボタンの画像にクラス名「<strong>js-banner_close_img</strong> <strong>banner_close_img</strong>」を追加。</li>\n</ol>\n<h2>注意点</h2><p>・オプション：フッターの直前で停止を使用する場合、フッターの種類は<strong>２種類まで</strong>対応可能です。フッターの種類が３つ以上がる場合は、ユニークでJSの変更が必要になります。必ず事前にご相談ください。<br/>\n・オプションはデフォルトで<strong>非設定</strong>です。<br/>\n ・オプション：<strong>一定期間バナーの再表示禁止</strong><strong>は複数バナーに対して一律で設定</strong>されます。バナーごとに表示期間の個別設定はできません。</p>\n</section>\n\n<section class=\"content-element content-8\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-07-18更新（v1.0.0）</strong></p>\n<p>[セクション・共通フッター]等どこでも使用できるよう、rowから紐づけています。</p>\n<a href=\"#\">CSSをコピーする</a>/*----- バナー（3秒後に表示） START v1.0.0​​​​​-----*/<br/>//セクション・共通フッター共に使用できるよう、rowから紐づけ<br/>.row {<br/>  &amp;.banner_row {<br/>    max-width: 330px;<br/>    position: fixed;<br/>    right: 20px;<br/>    bottom: 80px;<br/>    z-index: 2;<br/>    .col {<br/>      position: relative;<br/>      padding: 0;<br/>      .component {<br/>        &amp;.image {<br/>          margin: 0;<br/>          &amp;.banner_close_img {<br/>            width: auto;<br/>            position: absolute;<br/>            top: -35px;<br/>            right: 0;<br/>            img {<br/>              cursor: pointer;<br/>              max-width: 30px !important;<br/>            }<br/>          }<br/>          &amp;.banner_img {<br/>            a {<br/>              img {<br/>                &amp;:hover {<br/>                  opacity: 1;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- バナー（3秒後に表示） END -----*/</section>\n\n<section class=\"content-element content-9\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-07-18更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-----  バナー（3秒後に表示） 編集画面用 START v1.0.0​​​​​-----*/<br/>&amp;.banner_row {<br/>  position: relative;<br/>  z-index: initial;<br/>  bottom: initial;<br/>  right: initial;<br/>  max-width: initial;<br/>  .col {<br/>    .component {<br/>      &amp;.image {<br/>        &amp;.banner_close_img {<br/>          width: 100%;<br/>          position: relative;<br/>          top: initial;<br/>          right: initial;<br/>          img {<br/>            cursor: initial;<br/>            max-width: initial !important;<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-----  バナー（3秒後に表示） 編集画面用 END -----*/</section>\n\n<section class=\"content-element content-10\"><h2>JavaScript</h2><p><strong>2024-07-17更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  'use strict';<br/><br/>  /* ---------------------------<br/>    バナー（3秒後に表示）v1.0.0​​​​​<br/>  --------------------------- */<br/><br/>  /*------------- 変数定義 【変更可能】 START -------------*/<br/>  /* バナー表示されるまでの時間 [ms] デフォルトで3秒（3 * 1000） */<br/>  const waitTime = 3 * 1000;<br/>  const cookieAction = false; /* 一定時間バナー非表示（ON:true） */<br/>  const hideDuration = 30 * 60 * 1000; /* バナー非表示期間（30分） */<br/>  const bannerSelector = '.js-banner_row'; /* バナーのRowクラス */<br/>  const footerAction = false; /* フッターの手前でバナーを停止（ON：true） */<br/>  const footerSelectors = ['.ft_custom01', '.ft_hoge']; /* フッタークラス */<br/>  /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>  /* ---------------------------<br/>  一定期間バナーの再表示を禁止<br/>  --------------------------- */<br/>  /* クッキー設定関数 */<br/>  function setCookie(name, value, minutes) {<br/>    const date = new Date();<br/>    date.setTime(date.getTime() + (minutes * 60 * 1000));<br/>    const expires = \"expires=\" + date.toUTCString();<br/>    document.cookie = name + \"=\" + value + \";\" + expires + \";path=/\";<br/>  }<br/><br/>  /* クッキー取得関数 */<br/>  function getCookie(name) {<br/>    const nameEQ = name + \"=\";<br/>    const ca = document.cookie.split(';');<br/>    for(let i = 0; i &lt; ca.length; i++) {<br/>      let c = ca[i];<br/>      while (c.charAt(0) == ' ') c = c.substring(1, c.length);<br/>      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);<br/>    }<br/>    return null;<br/>  }<br/><br/>  /* ---------------------------<br/>   3秒後にバナーを表示<br/>  --------------------------- */<br/>  const ferretModule = (() =&gt; {<br/>    return {<br/>      wait: ms =&gt; new Promise(resolve =&gt; setTimeout(resolve, ms))<br/>    };<br/>  })();<br/><br/>  (async () =&gt; {<br/>    await ferretModule.wait(waitTime);<br/>    bannerModule.bannerDisplay();<br/>  })();<br/><br/>  /* ---------------------------<br/>   同一セッションでバナーを非表示<br/>  --------------------------- */<br/>  const bannerModule = (() =&gt; {<br/>    const bannerRow = document.querySelector(bannerSelector);<br/>    bannerRow.style.display = 'none';<br/>    const bannerCloseButton = document.querySelector('.js-banner_close_img img');<br/><br/>    bannerCloseButton.addEventListener('click', e =&gt; {<br/>      e.preventDefault();<br/>      bannerModule.bannerClose();<br/>    });<br/><br/>    return {<br/>      bannerDisplay: () =&gt; {<br/>        if (cookieAction) {<br/>          const lastClosedTime = getCookie('bannerLastClosedTime');<br/>          const currentTime = new Date().getTime();<br/>          if (lastClosedTime &amp;&amp; (currentTime - lastClosedTime) &lt; hideDuration) return;<br/>        }<br/>        bannerRow.style.display = 'block';<br/>        if (footerAction) controlBannerNearFooter();<br/>      },<br/>      bannerClose: () =&gt; {<br/>        bannerRow.style.display = 'none';<br/>        if (cookieAction) {<br/>          setCookie('bannerLastClosedTime', new Date().getTime(), hideDuration / (60 * 1000));<br/>        }<br/>      }<br/>    };<br/>  })();<br/><br/>  /* ---------------------------<br/>    フッター上でバナーを停止<br/>  --------------------------- */<br/>  const controlBannerNearFooter = () =&gt; {<br/>    const footers = footerSelectors.map(selector =&gt; document.querySelector(selector)).filter(Boolean);<br/>    const banner = document.querySelector(bannerSelector);<br/>    if (!footers.length || !banner) return;<br/>    const initialBottom = parseInt(window.getComputedStyle(banner).bottom, 10);<br/><br/>    const checkBannerPosition = () =&gt; {<br/>      if (window.getComputedStyle(banner).display === 'none') return;<br/>      const windowHeight = window.innerHeight;<br/>      const scrollY = window.scrollY || window.pageYOffset;<br/>      let newBottom = initialBottom;<br/><br/>      footers.forEach(footer =&gt; {<br/>        const footerRect = footer.getBoundingClientRect();<br/>        if (scrollY + windowHeight - initialBottom &gt; footerRect.top + scrollY) {<br/>          newBottom = windowHeight - footerRect.top + 10;<br/>        }<br/>      });<br/>      banner.style.bottom = `${newBottom}px`;<br/>    };<br/><br/>    window.addEventListener('scroll', checkBannerPosition);<br/>    window.addEventListener('resize', checkBannerPosition);<br/>    checkBannerPosition();<br/>    const observer = new MutationObserver(checkBannerPosition);<br/>    observer.observe(banner, { attributes: true, attributeFilter: ['style', 'class'] });<br/>  };<br/><br/>&lt;/script&gt;<br/><br/></section>\n\n<section class=\"content-element content-11\"></section>"
  },
  {
    "title": "スクロールでモーダル表示（×ボタンで非表示）",
    "url": "https://js-part.hmup.jp/js/scroll-popup",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>スクロールでモーダル表示<br/>（×ボタンで非表示）</h2><p>スクロールで特定のセクション位置に達したらモーダルを表示し、<br/>\n×ボタンで非表示にすると指定した期間中再表示しません（デフォルトでは1日間）</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<ul>\n<li>画像のみ\n    <ul>\n<li>バナー画像</li>\n<li>バナー閉じる[✕]画像</li>\n</ul>\n</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>バナー画像のサイズ</li>\n<li>バナー閉じる[✕]画像のサイズ</li>\n<li>バナーを表示するタイミング※1</li>\n<li>hover時の画像透過有無※2</li>\n<li>SP表示・非表示設定※3</li>\n</ul>\n<p><br/>\n<strong>JS変更箇所</strong></p>\n<ul>\n<li>cookieに保存しておく期間※①<br/>\n    変数名 : <strong>expires</strong></li>\n</ul>\n</td>\n<td>×</td>\n<td>◯<br/>\n※4</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：バナーを表示させたいタイミングに配置されているセクションにクラス名「<strong>js-banner_trigger</strong>」を追加することでタイミングをコントロール可能です。</p>\n<p>※2：デフォルトではhover時の画像透過は無しにしています。CSSで透過ありに変更できます。<br/>\n   ※3：デフォルトでは、画面幅が769px以下（SP）でも表示されます。SPで非表示にしたい場合は、クラス「<strong>pcOnly</strong>」を付与する必要があります。<br/>\n   ※4：一度バナーを閉じた場合、他ページでcookieのJSとバナーを入れていたとしても、【cookieに保存しておく期間】中は<br/>\n   非表示のままになります。<br/>\n<br/>\n<strong>【JS】</strong><br/>\n   ※①：デフォルトでは30日間が設定されています。変更するにはJS編集が必要です。詳細は<a href=\"#setting\">こちら</a>▼</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><p>「<a href=\"#banner\">ここでバナー表示します</a>」セクションに到達すると、バナーが表示されます。<br/>\n一度閉じる[✕]ボタンを押すと、1日間（デフォルト）再表示されません。<br/>\n閉じるボタンを押すとcookieが登録されるので、登録されたcookieを削除（下記参照）すれば再度挙動をご確認できます。<br/>\n※デフォルト設定では、画面幅が769px以下（SP）でも表示されます。</p>\n<p>▼削除方法▼</p>\n<ul><li><a href=\"https://ferret-one.akamaized.net/images/64df1b1b81312334cfb3ed47/large.png?utime=1692343067\"></a></li><li><a href=\"https://ferret-one.akamaized.net/images/64df1b2381312334cfb3eff7/large.png?utime=1692343075\"></a></li></ul><a href=\"/index\"></a></section>\n\n<section class=\"content-element content-5\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n<p>※デモでは分かりやすくセクション内にパーツを入れていますが、<br/>\n余白等を削除する必要が出てくるため実際はフッター等に入れるのがおすすめです。</p>\n</section>\n\n<section class=\"content-element content-6 js-banner_trigger\" data-designpart=\"section-background-color1\" data-designpart-id=\"642f669ce4dc09621d945b12\" style=\"background-color:#fbeff6\"><h2>ここでバナー表示します</h2></section>\n\n<section class=\"content-element content-7\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション内</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>バナーを表示させたいタイミングに配置されているセクションにクラス名「<strong>js-banner_trigger</strong>」を追加。</li>\n<li>モーダル表示用の行（row）を作成し、<br/>\n クラス名「<strong>js-popup_row popup_row  js-displayNone</strong>」の3つを追加。<br/>\n ページ下部に設置する。（複数ページに表示する場合は共通フッターに設置）</li>\n<li>上記row内に共通パーツを作成し、①バナー閉じる用[✕]画像と②バナー画像を配置。</li>\n<li>①バナー閉じる用[✕]画像にクラス名「<strong>js-popup_close_img popup_close_img</strong>」の2つを追加。<br/>\n リンク先は設定しません。</li>\n<li>②バナー画像にクラス名「<strong>popup_img</strong>」を追加。<br/>\n リンク先を[任意のURL]に設定。</li>\n<li>画像の幅等は適宜CSSで変更してください。<br/>\n ※JSパーツ集では共通パーツ機能で作成しているため、内容によってはCSSの調整（sectionからの紐づけ）が必要です。</li>\n<li>\n<p>SPで非表示にしたい場合、モーダル表示用の行（row）にクラス名「<strong>pcOnly</strong>」を追加。</p>\n</li>\n</ol>\n<ul>\n<li>\n<p>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。<br/>\n rowは新規で作成した方がCSSの影響を受けないので安心かと思います。</p>\n</li>\n</ul>\n<h2>JavaScript設定方法</h2><ol>\n<li>JS内で【<strong>Cookieに保存しておく期間</strong>】と検索。</li>\n<li>Cookieに保存しておく期間を変更する場合は変数【<strong>let expires = 〇〇;】</strong>の値を変更してください。<br/>\n （例①日数単位）：<strong>1</strong>日→【let expires = <strong>1</strong>;】<br/>\n （例②時間単位）：<strong>3</strong>時間→【let expires = <strong>3</strong> / 24;】</li>\n<li>デフォルトでCookieに保存しておく期間は30日間（30）に設定しています。<br/>\n<strong>無期限にはできないので期間を必ず設定してください</strong>。</li>\n</ol>\n<ul><li><a href=\"https://ferret-one.akamaized.net/images/64df16ecda0a25397f49887a/large.png?utime=1692341996\"></a></li></ul></section>\n\n<section class=\"content-element content-8\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-09-06更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- スクロールでモーダル表示（×ボタンで非表示）（×ボタンで非表示） START v1.0.0​​​​​-----*/<br/>/* 再読み込み時に一瞬見えてしまう（チラつき）防止用クラス */<br/>.js-displayNone {<br/>  display: none !important;<br/>}<br/><br/>.row {<br/>  &amp;.popup_row {<br/>    display: flex;<br/>    align-items: center;<br/>    justify-content: center;<br/>    position: fixed;<br/>    z-index: 10000;<br/>    top: 50%;<br/>    left: 50%;<br/>    width: 100%;<br/>    height: 110vh;<br/>    background: rgba(#000,.6);<br/>    transform: translate(-50%, -50%);<br/>    .col {<br/>      width: 100%;<br/>      max-width: 500px;<br/>      position: relative;<br/>      padding: 20px;<br/>      .component {<br/>        /* CTAでなくても使えるようにネスト飛ばし（必要あれば各自修正してください）*/<br/>        // ✕ボタン<br/>        &amp;.popup_close_img {<br/>          position: absolute;<br/>          top: -13px;<br/>          right: -13px;<br/>          z-index: 2;<br/>          img {<br/>            cursor: pointer;<br/>            max-width: 30px !important;<br/>          }<br/>        }<br/>        // バナー本体<br/>        &amp;.popup_img {<br/>          a {<br/>            &amp;:hover {<br/>              opacity: 1;//デフォルトでは透過なし<br/>            }<br/>            img {<br/>              &amp;:hover {<br/>                opacity: 1;//二重透過対策<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>// モーダルが出ている間はスクロールバー非表示<br/>.js-overflowHidden {<br/>  overflow: hidden !important;<br/>}<br/>/*----- スクロールでモーダル表示（×ボタンで非表示） END -----*/</section>\n\n<section class=\"content-element content-9\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-09-06更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- スクロールでモーダル表示（×ボタンで非表示） 編集画面用 START v1.0.0​​​​​--*/<br/>.js-displayNone {<br/>  display: block !important;<br/>  border: 1px solid #000;<br/>  &amp;::before {<br/>    content: \"JS読み込み後にクラスを外す。ちらつき防止（JSで使用）\";<br/>    position: absolute;<br/>    color: #fff;<br/>    background: #000;<br/>    padding: 5px 5px;<br/>    right: 0;<br/>    top: -24px;<br/>    font-size: 14px;<br/>    line-height: 1;<br/>  }<br/>}<br/>.row {<br/>  &amp;.popup_row {<br/>    display: flex !important;<br/>    position: relative;<br/>    top: initial;<br/>    left: initial;<br/>    transform: initial;<br/>    width: 100%;<br/>    height: initial;<br/>    margin-top: 50px;<br/>    border: 1px solid red;<br/>    &amp;::before {<br/>      content: \"スクロールでモーダル表示（×ボタンで非表示）Row\";<br/>      position: absolute;<br/>      color: #fff;<br/>      background: red;<br/>      padding: 5px;<br/>      font-size: 16px;<br/>      right: 0;<br/>      top: -24px;<br/>    }<br/>    .col {<br/>      .component {<br/>        &amp;.image {<br/>          &amp;.popup_close_img {<br/>            position: relative;<br/>            top: initial;<br/>            right: initial;<br/>            z-index: initial;<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- スクロールでモーダル表示（×ボタンで非表示） 編集画面用 END --*/</section>\n\n<section class=\"content-element content-10\"><h2>JavaScript</h2><p><strong>2025-06-30更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* -------------------------------------<br/>    スクロールでモーダル表示（×ボタンで非表示） v1.0.0<br/>  ------------------------------------- */<br/>  document.addEventListener('DOMContentLoaded', function () {<br/><br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    /* cookieに保存しておく期間 【 1日間（デフォルトでは日数単位） 】 */<br/>    const expiresDays = 1;<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    const cookieKey = \"bannerClosed\";<br/>    const cookieValue = \"true\";<br/>    const html = document.documentElement;<br/>    const closeBtn = document.querySelector('.js-popup_close_img');<br/>    const banner = document.querySelector('.js-popup_row');<br/>    const header = document.querySelector('.navi_base_custom');<br/>    const trigger = document.querySelector('.js-banner_trigger');<br/><br/>    const expireDate = new Date();<br/>    expireDate.setTime(expireDate.getTime() + expiresDays * 24 * 60 * 60 * 1000);<br/>    const cookieString = `${cookieKey}=${cookieValue}; expires=${expireDate.toGMTString()}; path=/`;<br/><br/>    let scrollFlag = false;<br/><br/>    function registration() {<br/>      console.log(\"Cookieが登録されました\");<br/>      if (banner) banner.style.display = 'none';<br/>      html.classList.remove('js-overflowHidden');<br/>    }<br/><br/>    function authenticated() {<br/>      console.log(\"認証できました\");<br/>      scrollFlag = true;<br/>    }<br/><br/>    function unauthenticated() {<br/>      console.log(\"認証できませんでした\");<br/>    }<br/><br/>    function openBanner() {<br/>      if (!banner || !trigger || !header) return;<br/><br/>      const triggerPosition = trigger.getBoundingClientRect().top + window.scrollY;<br/>      const scrollTop = window.scrollY;<br/>      const headerHeight = header.offsetHeight;<br/><br/>      if (scrollTop &gt;= triggerPosition - headerHeight &amp;&amp; !scrollFlag) {<br/>        scrollFlag = true;<br/>        banner.classList.remove('js-displayNone');<br/>        html.classList.add('js-overflowHidden');<br/>      }<br/>    }<br/><br/>    /* スクロール・ロード時に openBanner 実行 */<br/>    window.addEventListener('scroll', openBanner);<br/>    window.addEventListener('load', openBanner);<br/><br/>    /* バナー閉じるクリック処理 */<br/>    if (closeBtn) {<br/>      closeBtn.addEventListener('click', function (event) {<br/>        event.preventDefault();<br/>        document.cookie = cookieString;<br/>        registration();<br/>      });<br/>    }<br/><br/>    /* Cookieチェック */<br/>    function checkCookie() {<br/>      const cookies = document.cookie.split(';').map(c =&gt; c.trim());<br/>      return cookies.some(c =&gt; c.startsWith(`${cookieKey}=${cookieValue}`));<br/>    }<br/><br/>    /* Cookieに応じて処理 */<br/>    if (checkCookie()) {<br/>      authenticated();<br/>    } else {<br/>      unauthenticated();<br/>    }<br/>  });<br/>  /* -------------------------------------<br/>    スクロールでモーダル表示（×ボタンで非表示） END<br/>  ------------------------------------- */<br/>&lt;/script&gt;</section>\n\n<section class=\"content-element content-11\"></section>"
  },
  {
    "title": "バナー（特定のセクションを超えたら表示）",
    "url": "https://js-part.hmup.jp/js/banner02",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>バナー（特定のセクションを超えたら表示）<br/></h2><p>スクロールが特定のセクションに到達したらバナーを表示<br/>\n※SP表示あり（デフォルト）</p>\n<p><strong>【オプション設定】</strong></p>\n<p><strong>①一定期間バナーの再表示禁止　②フッター直前にバナーの追従を停止</strong><br/>\n<strong>※</strong>各オプションはデフォルト<strong>非設定</strong></p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>同一ページに<br/>\n   複数設置</th>\n<th>\n<p><strong>ページ複製・<br/>\n   クリップボード使用可否</strong></p>\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>×</p>\n</td>\n<td>\n<ul>\n<li>バナー画像※1</li>\n<li>バナーのサイズ※2</li>\n<li>バナーの表示位置<br/>\n     </li>\n<li>バナー閉じる[<strong>×</strong>]画像※3</li>\n<li>バナー閉じる[<strong>×</strong>]画像のサイズ</li>\n<li>バナー閉じる[<strong>×</strong>]画像の表示位置</li>\n</ul>\n<p> </p>\n<ul>\n<li>バナーを表示するトリガーとなるセクション※3</li>\n<li>SP時表示・非表示※5</li>\n<li>PC時表示・非表示※6</li>\n</ul>\n<p> </p>\n<p><strong>JS変更箇所</strong></p>\n<ul>\n<li>バナーのRowクラス　<br/>\n変数名：<strong>bannerRow</strong>※①</li>\n<li>グロナビのクラス　<br/>\n変数名：<strong>header</strong>※②<br/>\n     </li>\n<li>閉じる[×]クリックしてから、再度表示するまでの時間<br/>\n変数名 :<strong>cookieAction、hideDuration</strong>※③</li>\n<li>フッターの直前にバナーを停止 <br/>\n変数名：<strong>footerAction、footerSelectors</strong>※④</li>\n</ul>\n</td>\n<td>×</td>\n<td><strong>◯ </strong></td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1※3：バナー画像はそれぞれご用意お願いします。<br/>\n   ※2：画像サイズはCSSで調整可能ですが、実装後はそのサイズが固定になります。<br/>\n   ※4：該当セクションにクラス名「<strong>js-banner_trigger</strong>」を追加することでバナー表示のトリガーとするセクションの変更可能。<br/>\n   ※5：デフォルト設定では画面幅が769px以下（SP）でも表示されますが、SPで非表示も可能。その場合、バナーを格納している行（row）にクラス名「<strong>pcOnly</strong>」を追加します。<br/>\n   ※6：バナーを格納している行（row）にクラス名「<strong>spOnly</strong>」を追加することで、PCでバナーを非表示にします。<br/>\n    </p>\n<p><strong>【JS】</strong><br/>\n   ※①※②：バナーのRowとグロナビのセクションクラスは必ず確認・入力してください。<br/>\n   ※③：使用する場合は「<strong>cookieAction</strong>」の変数を「true」に変更します。<br/>\n   　　　デフォルトでは30分で設定しています。<br/>\n   ※④：使用する場合は「<strong>footerAction</strong>」の変数を「true」に変更します。<br/>\n   　　　変数：<strong>footerSelectors</strong>にフッターのクラスを入力します。<br/>\n   　　　フッターが１種類の場合は変数値の「<strong>.ft_hoge</strong>」はそのままにします</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><p>右下のバナーを参照ください。（「<a href=\"#641aa684c874e00effef508b-0b06e4e841acbde0e4fe002c\">編集画面用カスタムCSS</a>」のセクションまでスクロールで表示）<br/>\nデモではオプション（一定期間バナーの再表示禁止・フッター直前に停止）を設定しています。</p>\n<ul>\n<li><strong>スクロールが「<a href=\"#641aa684c874e00effef508b-0b06e4e841acbde0e4fe002c\">編集画面用カスタムCSS</a>」のセクションに到達したらバナーを表示。。</strong></li>\n<li>\n<p><strong>デフォルト設定では、画面幅が769px以下（SP）でも表示されます。</strong><br/>\n  </p>\n</li>\n<li>\n<p>オプション：一定期間バナーの再表示禁止<br/>\n [×]ボタンでバナー非表示→1分間表示されません。1分後から表示されます。（デフォルトは30分）</p>\n</li>\n<li>\n<p>オプション：フッター直前に停止</p>\n<p> </p>\n</li>\n</ul>\n<a href=\"#\"></a></section>\n\n<section class=\"content-element content-4\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>バナー画像を格納する行（row）にクラス名「<strong>js-banner02_row banner02_row</strong>」の２つを追加。</li>\n<li>バナーのメイン画像にクラス名「<strong>banner_img</strong>」を追加。</li>\n<li>バナーを閉じるボタンの画像にクラス名「<strong>js-banner_close_img</strong> <strong>banner_close_img</strong>」を追加。</li>\n<li>バナー表示のトリガーとするセクションにクラス名「<strong>js-banner_trigger</strong>」を追加。</li>\n<li>SPで非表示にしたい場合、バナーを格納している行（row）にクラス名「<strong>pcOnly</strong>」を追加。</li>\n</ol>\n<h2>注意点</h2><p>・オプション：フッターの直前で停止を使用する場合、フッターの種類は<strong>２種類まで</strong>対応可能です。フッターの種類が３つ以上がる場合は、ユニークでJSの変更が必要になります。必ず事前にご相談ください。<br/>\n・オプションはデフォルトで<strong>非設定</strong>です。<br/>\n ・オプション：<strong>一定期間バナーの再表示禁止</strong><strong>は複数バナーに対して一律で設定</strong>されます。バナーごとに表示期間の個別設定はできません。</p>\n</section>\n\n<section class=\"content-element content-6\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-07-18更新（1.0.0​​​​​）</strong></p>\n<p>[セクション・共通フッター]等どこでも使用できるよう、rowから紐づけています。</p>\n<a href=\"#\">CSSをコピーする</a>*----- バナー（スクロール位置で表示） デモ用 START v1.0.0​​​​​-----*/<br/>//セクション・共通フッター共に使用できるよう、rowから紐づけ<br/>.row {<br/>  &amp;.js-banner02_row {<br/>    display: none;//読み込み時バナー非表示<br/>    &amp;.is-active {<br/>      display: block;//「is-active」がついたらバナー表示<br/>    }<br/>  }<br/>  &amp;.banner02_row {<br/>    position: fixed;<br/>    z-index: 2;<br/>    bottom: 80px;<br/>    right: 20px;<br/>    max-width: 330px;<br/>    .col {<br/>      position: relative;<br/>      padding: 0;<br/>      .component {<br/>        &amp;.image {<br/>          margin: 0;<br/>          &amp;.banner_close_img {<br/>            width: auto;<br/>            position: absolute;<br/>            top: -35px;<br/>            right: 0;<br/>            img {<br/>              cursor: pointer;<br/>              max-width: 30px !important;<br/>            }<br/>          }<br/>          &amp;.banner_img {<br/>            a {<br/>              img {<br/>                &amp;:hover {<br/>                  opacity: 1;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- バナー（スクロール位置で表示） デモ用 END -----*/</section>\n\n<section class=\"content-element content-7 js-banner_trigger\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-07-18更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- バナー（スクロール位置で表示） デモ用 編集画面用 START v1.0.0​​​​​-----*/<br/>&amp;.js-banner02_row {<br/>  display: block;<br/>}<br/>&amp;.banner02_row {<br/>  position: relative;<br/>  z-index: initial;<br/>  bottom: initial;<br/>  right: initial;<br/>  max-width: initial;<br/>  .col {<br/>    .component {<br/>      &amp;.image {<br/>        &amp;.banner_close_img {<br/>          width: 100%;<br/>          position: relative;<br/>          top: initial;<br/>          right: initial;<br/>          img {<br/>            cursor: initial;<br/>            max-width: initial !important;<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- バナー（スクロール位置で表示） デモ用 編集画面用 END -----*/</section>\n\n<section class=\"content-element content-8\"><h2>JavaScript</h2><p>新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p>\n<p><strong>2024-07-17更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  'use strict';<br/>  document.addEventListener('DOMContentLoaded', () =&gt; {<br/>    /* -------------------------------<br/>      バナー（スクロール位置で表示） v1.0.0​​​​​<br/>    ------------------------------- */<br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    const bannerRow = document.querySelector(\".js-banner02_row\"); /* バナーのRowクラス */<br/>    const header = document.querySelector(\".navi_base_custom\"); /* グロナビのクラス */<br/>    const cookieAction = false; /* 一定時間バナー非表示（ON：true） */<br/>    const hideDuration = 30 * 60 * 1000; /* バナー非表示期間（30分） */<br/>    const footerAction = false; /* フッターの手前でバナーを停止（ON：true） */<br/>    const footerSelectors = ['.ft_custom01', '.ft_hoge']; /* フッタークラス（2種類目未入力可） */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    const bannerOpenTrigger = document.querySelector(\".js-banner_trigger\");<br/>    const bannerCloseButton = document.querySelector(\".js-banner_close_img img\");<br/>    const classNameActive = \"is-active\";<br/>    const classNameClosed = \"is-closed\";<br/><br/>    /* ---------------------------<br/>    一定期間バナーの再表示を禁止<br/>    --------------------------- */<br/>    /* クッキー設定関数 */<br/>    function setCookie(name, value, minutes) {<br/>      const date = new Date();<br/>      date.setTime(date.getTime() + (minutes * 60 * 1000));<br/>      const expires = \"expires=\" + date.toUTCString();<br/>      document.cookie = name + \"=\" + value + \";\" + expires + \";path=/\";<br/>    }<br/><br/>    /* クッキー取得関数 */<br/>    function getCookie(name) {<br/>      const nameEQ = name + \"=\";<br/>      const ca = document.cookie.split(';');<br/>      for(let i = 0; i &lt; ca.length; i++) {<br/>        let c = ca[i];<br/>        while (c.charAt(0) == ' ') c = c.substring(1, c.length);<br/>        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);<br/>      }<br/>      return null;<br/>    }<br/><br/>    /* ---------------------------<br/>    スクロール位置が特定のクラスを付与したセクションに来たらバナーを表示<br/>    --------------------------- */<br/>    const openBanner = () =&gt; {<br/>      if (bannerOpenTrigger) {<br/>        const triggerPosition = bannerOpenTrigger.getBoundingClientRect().top + window.scrollY;<br/>        const scrollTop = window.scrollY;<br/>        const headerHeight = header ? header.offsetHeight : 0;<br/><br/>        if (scrollTop &gt;= triggerPosition - headerHeight) { <br/>          if (!bannerRow.classList.contains(classNameActive) &amp;&amp; !bannerRow.classList.contains(classNameClosed)) {<br/>            if (cookieAction) {<br/>              const lastClosedTime = getCookie('bannerLastClosedTime');<br/>              const currentTime = new Date().getTime();<br/>              if (lastClosedTime &amp;&amp; (currentTime - lastClosedTime) &lt; hideDuration) {<br/>                return;<br/>              }<br/>            }<br/>            bannerRow.classList.add(classNameActive);<br/>          }<br/>        }<br/>      }<br/>    };<br/>    window.addEventListener(\"load\", openBanner); <br/>    window.addEventListener(\"scroll\", openBanner);<br/><br/>    let resizeTimer;<br/>    window.addEventListener(\"resize\", () =&gt; {<br/>      if (resizeTimer) {<br/>        clearTimeout(resizeTimer);<br/>      }<br/>      resizeTimer = setTimeout(() =&gt; {<br/>        openBanner();<br/>      }, 200);<br/>    });<br/><br/>    bannerCloseButton.addEventListener(\"click\", () =&gt; {<br/>      if (bannerRow.classList.contains(classNameActive)) {<br/>        bannerRow.classList.remove(classNameActive);<br/>        bannerRow.classList.add(classNameClosed);<br/>        if (cookieAction) {<br/>          setCookie('bannerLastClosedTime', new Date().getTime(), hideDuration / (60 * 1000));<br/>        }<br/>      }<br/>    });<br/><br/>    /* -------------------------------<br/>      フッター上でバナーを停止<br/>    ------------------------------- */<br/>    const controlBannerNearFooter = () =&gt; {<br/>      const footers = footerSelectors.map(selector =&gt; document.querySelector(selector)).filter(Boolean);<br/>      if (footers.length === 0 || !bannerRow) {<br/>        return;<br/>      }<br/>      const initialBottom = parseInt(window.getComputedStyle(bannerRow).bottom, 10);<br/>      const checkBannerPosition = () =&gt; {<br/>        if (window.getComputedStyle(bannerRow).display === 'none') {<br/>          return;<br/>        }<br/>        const windowHeight = window.innerHeight;<br/>        const scrollY = window.scrollY || window.pageYOffset;<br/>        footers.forEach(footer =&gt; {<br/>          const footerRect = footer.getBoundingClientRect();<br/>          if (scrollY + windowHeight - initialBottom &gt; footerRect.top + scrollY) {<br/>            const newBottom = windowHeight - footerRect.top;<br/>            bannerRow.style.bottom = `${newBottom + 10}px`;<br/>          } else {<br/>            bannerRow.style.bottom = `${initialBottom}px`;<br/>          }<br/>        });<br/>      };<br/>      window.addEventListener('scroll', checkBannerPosition);<br/>      window.addEventListener('resize', checkBannerPosition);<br/>      checkBannerPosition();<br/>      const observer = new MutationObserver(() =&gt; {<br/>        checkBannerPosition();<br/>      });<br/>      observer.observe(bannerRow, { attributes: true, attributeFilter: ['style', 'class'] });<br/>    };<br/><br/>    if (footerAction) {<br/>      controlBannerNearFooter();<br/>    }<br/>    /* -------------------------------<br/>      バナー（スクロール位置で表示） END<br/>    ------------------------------- */<br/>  });<br/>&lt;/script&gt;<br/><br/></section>\n\n<section class=\"content-element content-10\"></section>"
  },
  {
    "title": "バナー（スクロール量50％で表示）",
    "url": "https://js-part.hmup.jp/js/banner03",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>バナー（スクロール量50％で表示）<br/></h2><p>※SP表示あり（デフォルト）</p>\n<p><strong>【オプション設定】</strong></p>\n<p><strong>①一定期間バナーの再表示禁止　②フッター直前にバナーの追従を停止</strong><br/>\n<strong>※</strong>各オプションはデフォルト<strong>非設定</strong></p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能<br/>\n   パーツ</th>\n<th>変更可能</th>\n<th>同一ページに<br/>\n   複数設置</th>\n<th>\n<p><strong>ページ複製・<br/>\n   クリップボード使用可否</strong></p>\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>×</p>\n</td>\n<td>\n<ul>\n<li>バナー画像※1</li>\n<li>バナーのサイズ※2</li>\n<li>バナーの表示位置<br/>\n     </li>\n<li>バナー閉じる[<strong>×</strong>]画像※3</li>\n<li>バナー閉じる[<strong>×</strong>]画像のサイズ</li>\n<li>バナー閉じる[<strong>×</strong>]画像の表示位置</li>\n<li>\n<p>SP時表示・非表示※4</p>\n</li>\n<li>\n<p>PC時表示・非表示※5</p>\n</li>\n</ul>\n<p><br/>\n<strong>JS変更箇所</strong></p>\n<ul>\n<li>\n<p>バナーのRowクラス　　　　　<br/>\n変数名：<strong>bannerSelector※①</strong></p>\n</li>\n<li>\n<p>閉じる[×]クリックしてから、再度表示するまでの時間<br/>\n変数名 :<strong>cookieAction、hideDuration※②</strong></p>\n</li>\n<li>\n<p>フッターの直前にバナーを停止 <br/>\n変数名：<strong>footerAction、footerSelectors※③</strong></p>\n</li>\n<li>\n<p>スクロール量の数値<br/>\n変数名：<strong>scrollHeight</strong></p>\n</li>\n</ul>\n</td>\n<td>\n<p>×</p>\n</td>\n<td>◯ </td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1※3：バナー画像はそれぞれご用意お願いします。<br/>\n   ※2：画像サイズはCSSで調整可能ですが、実装後はそのサイズが固定になります。<br/>\n   ※4：デフォルト設定では画面幅が769px以下（SP）でも表示されますが、SPで非表示も可能。その場合、バナーを格納している行（row）にクラス名「<strong>pcOnly</strong>」を追加します。<br/>\n   ※5：バナーを格納している行（row）にクラス名「<strong>spOnly</strong>」を追加することで、PCでバナーを非表示にします。<br/>\n   ※閉じる[<strong>×</strong>]ボタンクリック後、同一セッション内（cookieで30分指定）では再度アクセスしても表示されません。<br/>\n   ※一度バナーを閉じた場合、他ページでバナーを入れていたとしても、同一セッション（30分間）は非表示のままになります。<br/>\n<br/>\n<strong>【JS】</strong><br/>\n※①：バナーのRowクラスは必ず確認・入力してください。<br/>\n   ※②：使用する場合は「<strong>cookieAction</strong>」の変数を「true」に変更します。<br/>\n   　　　デフォルトでは30分で設定しています。<br/>\n※③：使用する場合は「<strong>footerAction</strong>」の変数を「true」に変更します。<br/>\n   　　　変数：<strong>footerSelectors</strong>にフッターのクラスを入力します。<br/>\n   　　　フッターが１種類の場合は変数値の「<strong>.ft_hoge</strong>」はそのままにします</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2>右下のバナーを参照ください。（スクロール量20%で表示）<br/>デモではオプション（一定期間バナーの再表示禁止・フッター直前に停止）を設定しています。<br/><ul>\n<li><strong>ブラウザ全体の20％スクロールすると、バナーが表示されます。</strong></li>\n<li><strong>デフォルト設定では、画面幅が769px以下（SP）でも表示されます。</strong><br/>\n  </li>\n<li>オプション：一定期間バナーの再表示禁止</li>\n<li>[×]ボタンでバナー非表示→1分間表示されません。1分後から表示されます。（デフォルトは30分）</li>\n<li>オプション：フッター直前に停止</li>\n</ul>\n<p> </p>\n<a href=\"#\"></a></section>\n\n<section class=\"content-element content-4\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>バナー画像を格納する行（row）にクラス名「<strong>js-banner03_row banner03_row</strong>」の2つを追加。</li>\n<li>バナーのメイン画像にクラス名「<strong>banner03_img</strong>」を追加。</li>\n<li>バナーを閉じる[<strong>×</strong>]ボタンの画像にクラス名「<strong>js-banner03_close_img</strong> <strong>banner03_close_img</strong>」を追加。</li>\n<li>\n<p>SPで非表示にしたい場合、バナーを格納している行（row）にクラス名「<strong>pcOnly</strong>」を追加。</p>\n</li>\n</ol>\n<h2>注意点</h2><p>・オプション：フッターの直前で停止を使用する場合、フッターの種類は<strong>２種類まで</strong>対応可能です。フッターの種類が３つ以上がる場合は、ユニークでJSの変更が必要になります。必ず事前にご相談ください。<br/>\n・オプションはデフォルトで<strong>非設定</strong>です。<br/>\n ・オプション：<strong>一定期間バナーの再表示禁止</strong><strong>は複数バナーに対して一律で設定</strong>されます。バナーごとに表示期間の個別設定はできません。</p>\n</section>\n\n<section class=\"content-element content-6\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2024-06-25更新（v1.0.0）</strong></p>\n<p>[セクション・共通フッター]等どこでも使用できるよう、rowから紐づけています。</p>\n<a href=\"#\">CSSをコピーする</a>/*----- バナー（閉じるボタンクリック後、同一セッション内では非表示） START v1.0.0​​​​​-----*/<br/>//セクション・共通フッター共に使用できるよう、rowから紐づけ<br/>.row {<br/>  &amp;.banner03_row {<br/>    display: none;<br/>    max-width: 300px;<br/>    position: fixed;<br/>    right: 20px;<br/>    bottom: 100px;<br/>    z-index: 1000;<br/>    margin: 0;<br/>    @include breakpoint-sp {<br/>      max-width: 200px;<br/>      bottom: 70px;<br/>    }<br/>    //表示<br/>    &amp;.-visible {<br/>      display: block;<br/>    }<br/>    // 非表示<br/>    &amp;.-closed {<br/>      display: none;<br/>    }<br/>    .col {<br/>      padding: 0;<br/>      .component {<br/>        &amp;.image {<br/>          margin: 0;<br/>          &amp;.banner03_close_img {<br/>            width: auto;<br/>            position: absolute;<br/>            top: -35px;<br/>            right: 0;<br/>            z-index: 2;<br/>            img {<br/>              cursor: pointer;<br/>              max-width: 30px !important;<br/>            }<br/>          }<br/>          &amp;.banner03_img {<br/>            a {<br/>              img {<br/>                &amp;:hover {<br/>                  opacity: 1;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- バナー（閉じるボタンクリック後、同一セッション内では非表示） END -----*/</section>\n\n<section class=\"content-element content-7 js-banner_trigger\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2024-06-25更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- バナー（閉じるボタンクリック後、同一セッション内では非表示） 編集画面用 START v1.0.0​​​​​-----*/<br/>&amp;.banner03_row {<br/>  display: block;<br/>  max-width: initial;<br/>  margin: 20px auto;<br/>  position: relative;<br/>  right: initial;<br/>  bottom: initial;<br/>  z-index: initial;<br/>  border: 1px solid #000;<br/>  &amp;::before {<br/>    content: \"追従バナー\";<br/>    background: #000;<br/>    color: #fff;<br/>    position: absolute;<br/>    top: -24px;<br/>    right: 0;<br/>    padding: 0 5px;<br/>  }<br/>  .col {<br/>    .component {<br/>      &amp;.image {<br/>        &amp;.banner03_close_img {<br/>          width: 100%;<br/>          position: relative;<br/>          top: initial;<br/>          right: initial;<br/>          z-index: initial;<br/>          margin-bottom: 10px;<br/>          img {<br/>            cursor: initial;<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- バナー（閉じるボタンクリック後、同一セッション内では非表示） 編集画面用 END -----*/</section>\n\n<section class=\"content-element content-8\"><h2>JavaScript</h2><p>新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p>\n<p><strong>2024-07-17更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  'use strict';<br/>  document.addEventListener('DOMContentLoaded', () =&gt; {<br/><br/>    /*----------------------------------------------------------------<br/>    バナー（スクロール位置に応じて表示） START v1.0.0​​​​​<br/>    ----------------------------------------------------------------*/<br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    const bannerSelector = '.js-banner03_row'; /* バナーのRowクラス */<br/>    const cookieAction = false; /* 一定時間バナー非表示（ON：true） */<br/>    const hideDuration = 30 * 60 * 1000; /* バナー非表示期間（30分） */<br/>    const footerAction = false; /* フッターの手前でバナーを停止（ON：true） */<br/>    const footerSelectors = ['.ft_custom01', '.ft_hoge']; /* フッタークラス（2種類目未入力可） */<br/>    const scrollHeight = 0.5; /* スクロール量（50%） */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    const banner03Row = document.querySelector(bannerSelector);<br/>    const banner03CloseButton = document.querySelector('.js-banner03_close_img img');<br/>    const bodyHeight = document.body.scrollHeight; <br/><br/>    /* ---------------------------<br/>    一定期間バナーの再表示を禁止<br/>    --------------------------- */<br/>    /* クッキー設定関数 */<br/>    function setCookie(name, value, minutes) {<br/>      const date = new Date();<br/>      date.setTime(date.getTime() + (minutes * 60 * 1000));<br/>      const expires = \"expires=\" + date.toUTCString();<br/>      document.cookie = name + \"=\" + value + \";\" + expires + \";path=/\";<br/>    }<br/><br/>    /* クッキー取得関数 */<br/>    function getCookie(name) {<br/>      const nameEQ = name + \"=\";<br/>      const ca = document.cookie.split(';');<br/>      for(let i = 0; i &lt; ca.length; i++) {<br/>        let c = ca[i];<br/>        while (c.charAt(0) == ' ') c = c.substring(1, c.length);<br/>        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);<br/>      }<br/>      return null;<br/>    }<br/><br/>    /* ---------------------------<br/>    ページ全体の20%をスクロールしたらバナーを表示<br/>    --------------------------- */<br/>    const displayBanner = () =&gt; {<br/>      if (cookieAction) {<br/>        const lastClosedTime = getCookie('bannerLastClosedTime');<br/>        const currentTime = new Date().getTime();<br/>        if (lastClosedTime &amp;&amp; (currentTime - lastClosedTime) &lt; hideDuration) {<br/>          return;<br/>        }<br/>      }<br/>      const scroll = window.scrollY;<br/>      if (scroll &gt; bodyHeight * scrollHeight &amp;&amp; !banner03Row.classList.contains('-closed')) {<br/>        banner03Row.classList.add('-visible');<br/>      } else {<br/>        banner03Row.classList.remove('-visible');<br/>      }<br/>    };<br/><br/>    banner03CloseButton.addEventListener('click', () =&gt; {<br/>      if (banner03Row.classList.contains('-visible')) {<br/>        banner03Row.classList.remove('-visible');<br/>        banner03Row.classList.add('-closed');<br/>        if (cookieAction) {<br/>          setCookie('bannerLastClosedTime', new Date().getTime(), hideDuration / (60 * 1000));<br/>        }<br/>      }<br/>    });<br/><br/>    /* -------------------------------<br/>    フッター上でバナーを停止<br/>    ------------------------------- */<br/>    const controlBannerNearFooter = () =&gt; {<br/>      const footers = footerSelectors.map(selector =&gt; document.querySelector(selector)).filter(Boolean);<br/>      const banner = banner03Row;<br/>      if (footers.length === 0 || !banner) {<br/>        return;<br/>      }<br/>      const initialBottom = parseInt(window.getComputedStyle(banner).bottom, 10);<br/>      const checkBannerPosition = () =&gt; {<br/>        if (window.getComputedStyle(banner).display === 'none') {<br/>          return;<br/>        }<br/>        const windowHeight = window.innerHeight;<br/>        const scrollY = window.scrollY || window.pageYOffset;<br/>        footers.forEach(footer =&gt; {<br/>          const footerRect = footer.getBoundingClientRect();<br/>          if (scrollY + windowHeight - initialBottom &gt; footerRect.top + scrollY) {<br/>            const newBottom = windowHeight - footerRect.top;<br/>            banner.style.bottom = `${newBottom + 10}px`;<br/>          } else {<br/>            banner.style.bottom = `${initialBottom}px`;<br/>          }<br/>        });<br/>      };<br/>      window.addEventListener('scroll', checkBannerPosition);<br/>      window.addEventListener('resize', checkBannerPosition);<br/>      checkBannerPosition();<br/>      const observer = new MutationObserver(() =&gt; {<br/>        checkBannerPosition();<br/>      });<br/><br/>      observer.observe(banner, { attributes: true, attributeFilter: ['style', 'class'] });<br/>    };<br/><br/>    window.addEventListener('scroll', displayBanner);<br/>    if (footerAction) {<br/>      controlBannerNearFooter();<br/>    }<br/>    /*----------------------------------------------------------------<br/>    バナー（スクロール位置に応じて表示） END<br/>    ----------------------------------------------------------------*/<br/>  });<br/>&lt;/script&gt;<br/><br/></section>\n\n<section class=\"content-element content-9\"></section>"
  },
  {
    "title": "バナー （MVの高さを超えたら表示、閉じるボタンクリック後&クッキー管理＋フッター上追従停止）",
    "url": "https://js-part.hmup.jp/js/banner04",
    "html": "<section class=\"content-element content-1\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>同一ページに<br/>\n   複数設置</th>\n<th>\n<p><strong>ページ複製・<br/>\n   クリップボード使用可否</strong></p>\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>×</p>\n</td>\n<td>\n<ul>\n<li>バナー画像※1</li>\n<li>バナーのサイズ※2</li>\n<li>バナーの表示位置<br/>\n     </li>\n<li>バナー閉じる[<strong>×</strong>]画像※3</li>\n<li>バナー閉じる[<strong>×</strong>]画像のサイズ</li>\n<li>バナー閉じる[<strong>×</strong>]画像の表示位置</li>\n</ul>\n<p> </p>\n<ul>\n<li>SP時表示・非表示※4</li>\n<li>PC時表示・非表示※5</li>\n</ul>\n<p> </p>\n<p><strong>JS変更箇所</strong></p>\n<ul>\n<li>\n<p>TOPMVのクラス　変数名：<strong>topMVClass</strong></p>\n</li>\n<li>\n<p>下層MVのクラス<strong>　</strong>変数名：<strong>subPageMVClass</strong></p>\n</li>\n<li>\n<p>MV上のセクションクラス<strong>　</strong><br/>\n変数名：<strong>sectionAboveMVClass</strong>※①</p>\n</li>\n<li>\n<p>バナーのRowクラス　<br/>\n変数名：<strong>bannerSelector</strong></p>\n</li>\n</ul>\n<p> </p>\n<ul>\n<li>\n<p>閉じる[×]クリックしてから、再度表示するまでの時間<br/>\n変数名 :<strong>cookieAction、hideDuration</strong>※②</p>\n</li>\n<li>フッターの直前にバナーを停止 <br/>\n変数名：<strong>footerAction、footerSelectors</strong>※③</li>\n</ul>\n<p> </p>\n</td>\n<td>×</td>\n<td><strong>◯ </strong></td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1※3：バナー画像はそれぞれご用意お願いします。<br/>\n   ※2：画像サイズはCSSで調整可能ですが、実装後はそのサイズが固定になります。<br/>\n   ※4：デフォルト設定では画面幅が769px以下（SP）でも表示されますが、SPで非表示も可能。その場合、バナーを格納している行（row）にクラス名「<strong>pcOnly</strong>」を追加します。<br/>\n   ※5：バナーを格納している行（row）にクラス名「<strong>spOnly</strong>」を追加することで、PCでバナーを非表示にします。<br/>\n<br/>\n   ※一定時間バナー非表示をONにしてる場合、閉じる[×]ボタンクリック後、同一セッション内（cookieで30分指定）では再度アクセスしても表示されません。<br/>\n   ※一度バナーを閉じた場合、他ページでバナーを入れていたとしても、同一セッション（30分間）は非表示のままになります。</p>\n<p> </p>\n<p><strong>【JS】</strong><br/>\n   ※①：MVとナビの間にセクションを使用する場合は入力します。<br/>\n   　　　使用しない場合は変数値の「<strong>.xxxxxxxxxx</strong>」はそのままにします。<br/>\n   ※②：使用する場合は「<strong>cookieAction</strong>」の変数を「true」に変更します。<br/>\n<strong>　　　</strong>デフォルトでは30分で設定しています。<br/>\n   ※③：使用する場合は「<strong>footerAction</strong>」の変数を<strong>「true</strong>」に変更します。<br/>\n   　　　変数：<strong>footerSelectors</strong>にフッターのクラスを入力します。<br/>\n   　　　フッターが１種類の場合は変数値の「<strong>.ft_hoge</strong>」はそのままにします。<br/>\n   　　　</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-2\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><p>右下のバナーを参照ください。<br/>\nMVを超えた高さでバナーが表示されます。<br/>\nデモではオプション（一定期間バナーの再表示禁止・フッター直前に停止）を設定しています。</p>\n<ul>\n<li><strong>スクロールが指定したMVの高さを超えたら表示</strong></li>\n<li><strong>画面幅が769px以下（SP）でも表示されます。</strong><br/>\n  </li>\n<li>\n<p>オプション：一定期間バナーの再表示禁止<br/>\n[×]ボタンでバナー非表示→1分間表示されません。1分後から表示されます。（デフォルトは30分）</p>\n</li>\n<li>\n<p>オプション：フッター直前に停止<br/>\n  </p>\n</li>\n</ul>\n<a href=\"#\"></a></section>\n\n<section class=\"content-element content-3\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-4\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>バナー画像を格納する行（row）にクラス名「<strong>banner04_row  js-banner04_row</strong>」の２つを追加。</li>\n<li>バナーのメイン画像にクラス名「<strong>banner_img</strong>」を追加。</li>\n<li>バナーを閉じるボタンの画像にクラス名「<strong>js-banner_close_img banner04_close_img</strong>」を追加。</li>\n<li>SPで非表示にしたい場合、バナーを格納している行（row）にクラス名「<strong>pcOnly</strong>」を追加。</li>\n</ol>\n<h2>注意点</h2><p>・MVの種類がTOP・下層MVの２種類＋１種類までの<strong>合計３種類指定可能</strong>です。MVがサイト内で4つ以上がある場合は、ユニークでJSの変更が必要になります。必ず事前にご相談ください。<br/>\n・オプション：フッターの直前で停止を使用する場合、<strong>フッターの種類は２種類まで対応可能</strong>です。フッターの種類が３つ以上がる場合は、ユニークでJSの変更が必要になります。必ず事前にご相談ください。<br/>\n・オプションはデフォルトで<strong>非設定</strong>です。<br/>\n ・オプション：<strong>一定期間バナーの再表示禁止は複数バナーに対して一律で設定</strong>されます。バナーごとに表示期間の個別設定はできません。</p>\n</section>\n\n<section class=\"content-element content-5\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2024-06-24更新（v1.0.0）</strong></p>\n<p>[セクション・共通フッター]等どこでも使用できるよう、rowから紐づけています。</p>\n<a href=\"#\">CSSをコピーする</a>/*----- バナー MVの高さを超えたら表示 START v1.0.0​​​​​-----*/<br/>//セクション・共通フッター共に使用できるよう、rowから紐づけ<br/>.row {<br/>  &amp;.banner04_row {<br/>    display: none;<br/>    max-width: 300px;<br/>    position: fixed;<br/>    right: 20px;<br/>    bottom: 100px;<br/>    z-index: 1000;<br/>    margin: 0;<br/>    @include breakpoint-sp {<br/>      max-width: 200px;<br/>      bottom: 70px;<br/>    }<br/>    //表示<br/>    &amp;.-visible {<br/>      display: block;<br/>    }<br/>    // 非表示<br/>    &amp;.-closed {<br/>      display: none;<br/>    }<br/>    .col {<br/>      padding: 0;<br/>      .component {<br/>        &amp;.image {<br/>          margin: 0;<br/>          &amp;.banner04_close_img {<br/>            width: auto;<br/>            position: absolute;<br/>            top: -35px;<br/>            right: 0;<br/>            z-index: 2;<br/>            img {<br/>              cursor: pointer;<br/>              max-width: 30px !important;<br/>            }<br/>          }<br/>          &amp;.banner_img {<br/>            a {<br/>              img {<br/>                &amp;:hover {<br/>                  opacity: 1;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- バナー MVの高さを超えたら表示 END -----*/</section>\n\n<section class=\"content-element content-6 js-banner_trigger\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2024-06-24更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- バナー MVの高さを超えたら表示 START v1.0.0​​​​​-----*/<br/>&amp;.banner04_row {<br/>  display: block;<br/>  max-width: initial;<br/>  margin: 20px auto;<br/>  position: relative;<br/>  right: initial;<br/>  bottom: initial;<br/>  z-index: initial;<br/>  border: 1px solid #000;<br/> <br/>  &amp;::before {<br/>    content: \"追従バナー\";<br/>    background: #000;<br/>    color: #fff;<br/>    position: absolute;<br/>    top: -24px;<br/>    right: 0;<br/>    padding: 0 5px;<br/>  }<br/> <br/>  .col {<br/>    .component {<br/>      &amp;.image {<br/>        &amp;.banner04_close_img {<br/>          width: 100%;<br/>          position: relative;<br/>          top: initial;<br/>          right: initial;<br/>          z-index: initial;<br/>          margin-bottom: 10px;<br/> <br/>          img {<br/>            cursor: initial;<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- バナー MVの高さを超えたら表示 END -----*/<br/></section>\n\n<section class=\"content-element content-7\"><h2>JavaScript</h2><p>①の下に新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p>\n<p><strong>2024-07-17更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>'use strict';<br/>document.addEventListener(\"DOMContentLoaded\", () =&gt; {<br/><br/>    /*----------------------------------------------------------------<br/>    バナー（MVの高さを超えたら表示） START v1.0.0​​​​​<br/>    ----------------------------------------------------------------*/<br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    const topMVClass = '.mv_custom'; /* MVクラス */<br/>    const subPageMVClass = '.sub-page-custom'; /* 下層MVクラス */<br/>    const sectionAboveMVClass = '.xxxxxxxxxx'; /* MV上のクラス（未入力可） */<br/>    const bannerSelector = '.js-banner04_row'; /* バナーのRowクラス */<br/>    const cookieAction = false; /* 一定時間バナー非表示（ON：true） */<br/>    const hideDuration = 30 * 60 * 1000; /* バナー非表示期間（1分） */<br/>    const footerAction = false; /* フッターの手前でバナーを停止（ON:true） */<br/>    const footerSelectors = ['.ft_custom01', '.ft_hoge']; /* フッタークラス（2種類目未入力可） */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/>    const banner04Row = document.querySelector(bannerSelector);<br/>    const banner04CloseButton = document.querySelector('.js-banner_close_img img');<br/>    const mainVisual = document.querySelector(topMVClass) || document.querySelector(subPageMVClass);<br/>    const mvHeight = mainVisual ? mainVisual.offsetHeight : 0;<br/>    const sectionAboveMV = document.querySelector(sectionAboveMVClass);<br/>    const sectionAboveMVHeight = sectionAboveMV ? sectionAboveMV.offsetHeight : 0;<br/>    const totalHeight = mvHeight + sectionAboveMVHeight;<br/><br/>    /* ---------------------------<br/>    一定期間バナーの再表示を禁止<br/>    --------------------------- */<br/>    /* クッキー設定関数 */<br/>    function setCookie(name, value, minutes) {<br/>        const date = new Date();<br/>        date.setTime(date.getTime() + (minutes * 60 * 1000));<br/>        const expires = \"expires=\" + date.toUTCString();<br/>        document.cookie = name + \"=\" + value + \";\" + expires + \";path=/\";<br/>    }<br/><br/>    /* クッキー取得関数 */<br/>    function getCookie(name) {<br/>        const nameEQ = name + \"=\";<br/>        const ca = document.cookie.split(';');<br/>        for(let i = 0; i &lt; ca.length; i++) {<br/>            let c = ca[i];<br/>            while (c.charAt(0) == ' ') c = c.substring(1, c.length);<br/>            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);<br/>        }<br/>        return null;<br/>    }<br/><br/>    /* ---------------------------<br/>    MVの高さを超えたらバナーを表示<br/>    --------------------------- */<br/>    const displayBanner = () =&gt; {<br/>        if (cookieAction) {<br/>            const lastClosedTime = getCookie('bannerLastClosedTime');<br/>            const currentTime = new Date().getTime();<br/>            if (lastClosedTime &amp;&amp; (currentTime - lastClosedTime) &lt; hideDuration) {<br/>                return;<br/>            }<br/>        }<br/>        const scroll = window.scrollY;<br/>        if (scroll &gt; totalHeight &amp;&amp; !banner04Row.classList.contains('-closed')) {<br/>            banner04Row.classList.add('-visible');<br/>        } else {<br/>            banner04Row.classList.remove('-visible');<br/>        }<br/>    };<br/><br/>    banner04CloseButton.addEventListener('click', () =&gt; {<br/>        if (banner04Row.classList.contains('-visible')) {<br/>            banner04Row.classList.remove('-visible');<br/>            banner04Row.classList.add('-closed');<br/>            if (cookieAction) {<br/>                setCookie('bannerLastClosedTime', new Date().getTime(), hideDuration / (60 * 1000));<br/>            }<br/>        }<br/>    });<br/><br/>    /* -------------------------------<br/>    フッター上でバナーを停止<br/>    ------------------------------- */<br/>    const controlBannerNearFooter = () =&gt; {<br/>        const footers = footerSelectors.map(selector =&gt; document.querySelector(selector)).filter(Boolean);<br/>        const banner = banner04Row;<br/>        if (footers.length === 0 || !banner) {<br/>            return;<br/>        }<br/>        const initialBottom = parseInt(window.getComputedStyle(banner).bottom, 10);<br/>        const checkBannerPosition = () =&gt; {<br/>            if (window.getComputedStyle(banner).display === 'none') {<br/>                return;<br/>            }<br/>            const windowHeight = window.innerHeight;<br/>            const scrollY = window.scrollY || window.pageYOffset;<br/>            footers.forEach(footer =&gt; {<br/>                const footerRect = footer.getBoundingClientRect();<br/>                if (scrollY + windowHeight - initialBottom &gt; footerRect.top + scrollY) {<br/>                    const newBottom = windowHeight - footerRect.top;<br/>                    banner.style.bottom = `${newBottom + 10}px`;<br/>                } else {<br/>                    banner.style.bottom = `${initialBottom}px`;<br/>                }<br/>            });<br/>        };<br/>        window.addEventListener('scroll', checkBannerPosition);<br/>        window.addEventListener('resize', checkBannerPosition);<br/>        checkBannerPosition();<br/>        const observer = new MutationObserver(() =&gt; {<br/>            checkBannerPosition();<br/>        });<br/><br/>        observer.observe(banner, { attributes: true, attributeFilter: ['style', 'class'] });<br/>    };<br/><br/>    window.addEventListener('scroll', displayBanner);<br/>    if (footerAction) {<br/>        controlBannerNearFooter();<br/>    }<br/><br/>    /*----------------------------------------------------------------<br/>    バナー（MVの高さを超えたら表示） END<br/>    ----------------------------------------------------------------*/<br/>});<br/>&lt;/script&gt;<br/><br/></section>\n\n<section class=\"content-element content-8\"></section>"
  },
  {
    "title": "記事リストスライダー（自動スライドver.）",
    "url": "https://js-part.hmup.jp/js/case_slider",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>記事リストスライダー（自動スライドver.）</h2></section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>変更NG</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>×</p>\n</td>\n<td>\n<ul>\n<li>記事リスト間の余白</li>\n<li>ページネーションの<br/>\n    サイズ/カラー/余白</li>\n<li>Prev,Nextボタンの<br/>\n    位置/デザイン</li>\n<li>カード型（1~4列）orリスト型の選択※1</li>\n<li>SP時の表示枚数※2</li>\n<li>スライドの自動or手動の選択※3</li>\n<li>[再生/停止]ボタンのデザイン\n<ul>\n<li>ボタンの枠組みの形</li>\n<li>アイコンの色味・サイズ</li>\n<li>枠線の色</li>\n<li>ボタンの位置</li>\n<li>ボタンの有無</li>\n</ul>\n</li>\n</ul>\n<p> </p>\n<p><strong>JS変更箇所</strong></p>\n<ul>\n<li>各スライドの表示時間（デフォルトでは4秒）<br/>\n変数名：<strong>delay</strong></li>\n<li>スライドの切り替わる速さ（デフォルトでは0.3秒）<br/>\n変数名：<strong>speed </strong></li>\n</ul>\n</td>\n<td>\n<p> </p>\n<ul>\n<li>[再生/停止]ボタンに<br/>\n    使用するアイコンの変更※4</li>\n<li>[再生/停止]ボタンパーツの使用時のテキスト表示</li>\n</ul>\n</td>\n<td><strong>○※5</strong></td>\n<td>◯</td>\n</tr>\n<tr>\n<th>※留意事項</th>\n<th> </th>\n</tr>\n<tr>\n<td>\n<p>※1：編集画面の機能から変更可能（後から変更不可）<br/>\n   ※2：SP時はデフォルトで幅100%（1枚）表示になります。（CSSで変更可能）<br/>\n   ※3：後から[自動or手動]の変更は不可（使用するJSコードが異なるため）<br/>\n   ※4：現状使用しているアイコン（疑似要素）で固定となります。<br/>\n   ※5：以下の<strong>類似パーツ</strong>との併用は不可とさせていただきます。</p>\n</td>\n<td> </td>\n</tr>\n</tbody>\n</table>\n\n<p><strong>▼類似パーツ</strong></p>\n<ul>\n<li><a href=\"//js-part.hmup.jp/js/case_slider/fade\">記事リストスライダー（フェード）</a></li>\n<li><a href=\"//js-part.hmup.jp/js/row-slider\">画像+テキスト（row）のスライド</a></li>\n</ul>\n<a href=\"#structure\">構造図を見る</a></section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>カード型（3列）</h2><p>自動でスライドver.</p>\n<a href=\"#\">再生・停止ボタン</a></section>\n\n<section class=\"content-element content-4\"><h2>カード型（2列）</h2><p>自動でスライドver.</p>\n<a href=\"#\">停止</a></section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fbf9ef\"><h2>カード型（1列）</h2><p>自動でスライドver.</p>\n<a href=\"#\">停止</a></section>\n\n<section class=\"content-element content-6\"><h2>リスト型</h2><p>自動でスライドver.</p>\n<a href=\"#\">停止</a></section>\n\n<section class=\"content-element content-7 full_swiper_sec\" style=\"background-color:#fbf9ef\"><h2>幅100%</h2><a href=\"#\">再生・停止ボタン</a></section>\n\n<section class=\"content-element content-8\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-9\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>パーツとクラス名をデモに合わせて設置する。​​​​</li>\n</ul>\n<ol>\n<li>記事リストパーツにそれぞれ用途にあったクラス名を追加。<br/>\n カード型（1~3列）の場合、「<strong>swiper</strong> <strong>js-swiper</strong>」を追加。<br/>\n リスト型の場合、「<strong>list_swiper</strong> <strong>js-swiper</strong>」を追加。\n\n <ul>\n<li>幅を100%化したい場合→セクションにクラス名「<strong>full_swiper_sec</strong>」を追加。</li>\n<li>必要に応じて、記事リストカスタム用のクラス名「<strong>caseContent_style</strong>」を追加。</li>\n</ul>\n</li>\n<li>[再生/停止]ボタンを用意します。<br/>\n 記事リストのすぐ下に、[単体パーツ＞デフォルト＞ボタンパーツ]を配置し、クラス名「<strong>js-stop_btn stop_btn</strong>」を追加。<br/>\n リンク先を[このページの一番上に遷移]に設定する。※リンク先を設定しないと表示されません。<br/>\n ※古いページ内リンク対策が入ったJSパーツと併用している場合、上記のリンク設定[#]だと正しく動かない場合があります。その際はTOPページ等に設定してください。（URLが[#]以外になれば問題ありません）<br/>\n ※必ずデフォルトパーツを使用してください。デザインパーツを使用した場合、打ち消すスタイルが必要になります。<br/>\n ※ボタンテキストは表示されませんが、適当に「再生・停止ボタン」などと設定しておくと良いかと思います。</li>\n</ol>\n<ul>\n<li>\n<p>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。<br/>\n ※再生・停止ボタン以外</p>\n</li>\n</ul>\n<h2>注意点</h2><p>※以下の類似パーツとの併用はできません。</p>\n<p><strong>▼類似パーツ</strong></p>\n<ul>\n<li><a href=\"//js-part.hmup.jp/js/case_slider/fade\">記事リストスライダー（フェード）</a></li>\n<li><a href=\"//js-part.hmup.jp/js/row-slider\">画像+テキスト（row）のスライド</a></li>\n</ul>\n</section>\n\n<section class=\"content-element content-10\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-12-26更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- 記事リストスライダー START v1.0.0​​​​​-----*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section, section[data-designpart-id]:not(:root:root:root:root)) {<br/>    .inner {<br/>      .row {<br/>        .col {<br/>          .component {<br/>            &amp;.entry-list {<br/>              // スワイパー（カード型）<br/>              &amp;.swiper {<br/>                visibility: hidden; //ちらつき防止<br/>                height: 0; //記事リスト数分の高さが出るのを阻止<br/>                margin-bottom: 10px;<br/>                padding: 20px; //シャドウが隠れる対策<br/>                @include breakpoint-ssp {<br/>                  padding: 20px 10px;<br/>                }<br/>                .article-list {<br/>                  &amp;.swiper-wrapper {<br/>                    flex-wrap: nowrap !important;<br/>                    gap: 0;<br/>                    .entry-list-unit {<br/>                      height: initial;<br/>                      margin-right: $case_list_space !important;<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>              // スワイパー（リスト型）<br/>              &amp;.list_swiper {<br/>                overflow: hidden;<br/>                visibility: hidden; //ちらつき防止<br/>                height: 0; //記事リスト数分の高さが出るのを阻止<br/>                margin-bottom: 35px;<br/>                padding: 20px; //シャドウが隠れる対策<br/>                @include breakpoint-sp {<br/>                  margin-bottom: 55px;<br/>                }<br/>                @include breakpoint-ssp {<br/>                  padding: 20px 10px;<br/>                }<br/>                .article-list {<br/>                  display: flex !important;<br/>                  &amp;.swiper-wrapper {<br/>                    .entry-list-unit {<br/>                      display: table !important;<br/>                      height: initial;<br/>                      margin: 0 20px 0 0;<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>            // 再生・停止ボタン<br/>            &amp;.stop_btn {<br/>              margin-top: 30px;<br/>              .button-cont {<br/>                a {<br/>                  display: inline-flex;<br/>                  justify-content: center;<br/>                  align-items: center;<br/>                  width: 30px;<br/>                  height: 30px;<br/>                  border-radius: 50vh;<br/>                  background: transparent;<br/>                  border: 2px solid #999;<br/>                  font-size: 0; //テキスト非表示<br/>                  letter-spacing: 0;<br/>                  line-height: 1;<br/>                  padding: 0;<br/>                  position: relative;<br/>                  &amp;::before {<br/>                    content: \"\\f04d\"; //停止アイコン<br/>                    font-family: $font_family_awsm5;<br/>                    font-weight: 900;<br/>                    font-size: 15px;<br/>                    color: #999;<br/>                    position: absolute;<br/>                    top: 50%;<br/>                    left: 50%;<br/>                    transform: translate(-50%, -50%);<br/>                  }<br/>                  // 停止時アイコン切り替え<br/>                  &amp;.-stop {<br/>                    &amp;::before {<br/>                      content: \"\\f04b\"; //再生アイコン<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>          // アローボタン<br/>          :is(.swiper-button-next, .swiper-button-prev) {<br/>            width: 70px;<br/>            height: 70px;<br/>            background: #ffad2f;<br/>            border-radius: 50vh;<br/>            opacity: $hover_opacity;<br/>            transform: translateY(-50%);<br/>            @include breakpoint-ssp {<br/>              width: 50px;<br/>              height: 50px;<br/>            }<br/>            &amp;:hover {<br/>              opacity: 1;<br/>            }<br/>            &amp;::after {<br/>              font-size: 20px;<br/>              color: #fff;<br/>            }<br/>          }<br/>          // 前へボタン<br/>          .swiper-button-prev {<br/>            left: -20px;<br/>            @include breakpoint-ssp {<br/>              left: -15px;<br/>            }<br/>          }<br/>          // 次へボタン<br/>          .swiper-button-next {<br/>            right: -20px;<br/>            @include breakpoint-ssp {<br/>              right: -15px;<br/>            }<br/>          }<br/>          // ページネーション<br/>          :is(.swiper-horizontal &gt; .swiper-pagination-bullets, .swiper-pagination-bullets.swiper-pagination-horizontal, .swiper-pagination-custom, .swiper-pagination-fraction) {<br/>            position: initial;<br/>            @include breakpoint-sp {<br/>              bottom: -20px;<br/>            }<br/>            .swiper-pagination-bullet {<br/>              width: 10px;<br/>              height: 10px;<br/>              background: #ffad2f;<br/>              margin: 0 5px;<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>    // 幅100%用（不要であれば削除）<br/>    &amp;.full_swiper_sec {<br/>      .inner {<br/>        max-width: 100%;<br/>        padding: 0;<br/>        .row {<br/>          .col {<br/>            @include breakpoint-pc {<br/>              padding: 0 0 10px;<br/>            }<br/>            .component {<br/>              &amp;.entry-list {<br/>                // スワイパー<br/>                &amp;.swiper {<br/>                  padding: 20px 0;<br/>                  .article-list {<br/>                    &amp;.swiper-wrapper {<br/>                      .entry-list-unit {<br/>                        //記事リスト間余白なし<br/>                        margin-right: 0 !important;<br/>                      }<br/>                    }<br/>                  }<br/>                  //カード型1列<br/>                  &amp;.entry-image-card-1-col {<br/>                    .article-list {<br/>                      .entry-list-unit {<br/>                        width: 100%;<br/>                      }<br/>                    }<br/>                  }<br/>                  //カード型2列<br/>                  &amp;.entry-image-card-2-col {<br/>                    .article-list {<br/>                      .entry-list-unit {<br/>                        @include breakpoint-pc {<br/>                          width: calc(100% / 2);<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                  //カード型3列<br/>                  &amp;.entry-image-card-3-col {<br/>                    .article-list {<br/>                      .entry-list-unit {<br/>                        @include breakpoint-pc {<br/>                          width: calc(100% / 3);<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>            // 前へボタン<br/>            .swiper-button-prev {<br/>              left: 0;<br/>            }<br/>            // 次へボタン<br/>            .swiper-button-next {<br/>              right: 0;<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- 記事リストスライダー END -----*/</section>\n\n<section class=\"content-element content-11\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2024-09-12更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- 記事リストスライダー 編集画面用 START v1.0.0​​​​​--*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root:root:root)) {<br/>  .inner {<br/>    .row {<br/>      .col {<br/>        .component {<br/>          &amp;.entry-list {<br/>            // スワイパー（カード型）<br/>            &amp;.swiper {<br/>              visibility: visible;<br/>              height: initial;<br/>            }<br/>            // スワイパー（リスト型）<br/>            &amp;.list_swiper {<br/>              visibility: visible;<br/>              height: initial;<br/>              .article-list {<br/>                display: block !important;<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>  &amp;.full_swiper_sec {<br/>    .inner {<br/>      padding: 20px;<br/>      .row {<br/>        .col {<br/>          .component {<br/>            &amp;.entry-list {<br/>              &amp;.swiper {<br/>                .article-list {<br/>                  gap: 0;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- 記事リストスライダー 編集画面用 END --*/</section>\n\n<section class=\"content-element content-12\"><h2>①jQueryを設定</h2><p>JavaScript埋め込みパーツを設置し、CDNで読み込んだ最新バージョンのjQueryを反映させます。<br/>\n※jQueryコンフリクト回避 のため<br/>\n<br/>\n複数のJSパーツを使用する場合は、こちらの①jQueryの読み込みは一度だけで大丈夫です。</p>\n<p><strong>2024-01更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script<br/>  src=\"https://code.jquery.com/jquery-3.6.0.min.js\"<br/>  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"<br/>  crossorigin=\"anonymous\"<br/>&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  'use strict';<br/>  /*--- jQueryコンフリクト回避 v1.0.0---*/<br/>  jQuery.noConflict();<br/><br/>  /*--- この下にJavaScriptを記述していく---*/<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-13\"><h2>②JavaScript</h2><p>①の下に新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p>\n<p><strong>2024-04-12更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css\" /&gt;<br/>&lt;script src=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js\"&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  /* -----------------------------------------------<br/>    記事リストスライダー（自動スライドver. ）停止ボタン付き v1.0.0​​​​​<br/>  ----------------------------------------------- */<br/>  /* 画像等すべて読み込んでから実行 */<br/>  jQuery(window).on('load', function () {<br/>    /* 0.5秒後に実行 */<br/>    setTimeout(function () {<br/>      /*------------- 変数定義 【変更可能】 START -------------*/<br/>      const delay = 4000; /* 自動再生にかかる秒数(ms) */<br/>      const speed = 300; /* スライド自体のスピード設定(ms / デフォルト→300) */<br/>      /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>      const swiperList = jQuery('.js-swiper');/* スライダー*/<br/>      swiperList.closest('.col').css('position', 'relative'); /* 前へ・次へボタンを内側に入れるために指定 */<br/>      const swiperRow = swiperList.closest('.row');/* スライダーが入ったrow */<br/><br/>      for (let i = 0; i &lt; swiperRow.length; i++) {<br/>        const index = i + 1;<br/>        const targetSlideSwiper = swiperRow.eq(i).find('.js-swiper');/* 各スライダー要素を取得 */<br/>        const targetSlide = swiperRow.eq(i).find('.js-swiper .entry-list-unit');/* 各スライダー内の記事リストを取得 */<br/>        const targetSlideBtn = swiperRow.eq(i).find('.js-stop_btn a');/* 各スライダー停止ボタンを取得 */<br/>        /* ページネーションとアローボタン */<br/>        const swiperPaginationEl = jQuery(<br/>          `&lt;div class=\"swiper-pagination swiper-pagination-${index}\"&gt;&lt;/div&gt;` +<br/>            `&lt;div class=\"swiper-button-prev swiper-button-prev-${index}\"&gt;&lt;/div&gt;` +<br/>            `&lt;div class=\"swiper-button-next swiper-button-next-${index}\"&gt;&lt;/div&gt;`<br/>        );<br/><br/>        /* 各スライダーのクラス名にindex付与（複数設置対応） */<br/>        const swiperWrapper = jQuery('.js-swiper .article-list');<br/>        swiperWrapper.addClass('swiper-wrapper');<br/>        targetSlide.addClass('swiper-slide');<br/>        targetSlideSwiper.addClass(`swiper-${index}`);<br/>        targetSlideBtn.addClass(`swiperBtn-${index}`);<br/>        /* 要素配置 */<br/>        swiperPaginationEl.insertAfter(`.swiper-${index}`);<br/><br/>        const swiper = new Swiper(`.swiper-${index}`, {<br/>          loop: true, /* ループさせる */<br/>          slidesPerView: 'auto',/* 一画面に表示する枚数（自動・CSSでの幅設定に依存） */<br/>          speed: speed,/* スライド自体のスピード設定 */<br/>          /* 自動再生 */<br/>          autoplay: {<br/>            delay: delay,/* 自動再生にかかる秒数 */<br/>            disableOnInteraction: false,/* ページネーションをクリック後に自動再生を再開 */<br/>          },<br/>          /* ページネーション */<br/>          pagination: {<br/>            el: `.swiper-pagination-${index}`,<br/>            clickable: true, /* クリック可にする */<br/>          },<br/>          /* アローボタン */<br/>          navigation: {<br/>            nextEl: `.swiper-button-next-${index}`,<br/>            prevEl: `.swiper-button-prev-${index}`<br/>          },<br/>        });<br/><br/>        /* 再生・停止ボタン */<br/>        targetSlideBtn.on('click', function(e) {<br/>          e.preventDefault();<br/>          if (jQuery(this).hasClass('-stop')) {<br/>            jQuery(this)<br/>              .addClass('-start')<br/>              .removeClass('-stop');<br/>              swiper.autoplay.start();<br/>            } else {<br/>              jQuery(this)<br/>              .addClass('-stop')<br/>              .removeClass('-start');<br/>              swiper.autoplay.stop();<br/>          }<br/>        });<br/><br/>      }<br/><br/>      swiperList.css('visibility', 'initial');/* ちらつき防止 */<br/>      swiperList.css('height', 'initial');/* 記事リスト数分の高さが出るのを阻止 */<br/><br/>      /* 記事リスト画像を取得（loading=\"lazy\"外し） */<br/>      jQuery('.swiper-slide img').removeAttr('loading');<br/><br/>    }, 500);<br/>  });<br/>  /* -----------------------------------------------<br/>    記事リストスライダー（自動スライドver. ）停止ボタン付き END<br/>  ----------------------------------------------- */<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-14\">    </section>"
  },
  {
    "title": "記事リストスライダー（手動スライドver.）",
    "url": "https://js-part.hmup.jp/js/case_slider02",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>記事リストスライダー（手動スライドver.）</h2></section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>変更NG</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>×</p>\n</td>\n<td>\n<ul>\n<li>記事リスト間の余白</li>\n<li>ページネーションのサイズ/カラー/余白</li>\n<li>Prev,Nextボタンの位置/デザイン</li>\n<li>カード型（1~4列）orリスト型の選択※1</li>\n<li>SP時の表示枚数※2</li>\n<li>スライドの自動or手動の選択※3</li>\n</ul>\n<p><br/>\n<strong>JS変更箇所</strong></p>\n<ul>\n<li>\n<p>スライドの切り替わる速さ（デフォルトは0.3秒）<br/>\n    変数名：<strong>speed02</strong></p>\n</li>\n</ul>\n</td>\n<td>-</td>\n<td><strong>○</strong><br/>\n※4</td>\n<td>◯</td>\n</tr>\n<tr>\n<th>※留意事項</th>\n<th> </th>\n</tr>\n<tr>\n<td>\n<p>※1：編集画面の機能から変更可能（後から変更不可）<br/>\n   ※2：SP時はデフォルトで幅100%（1枚）表示になります。（CSSで変更可能）<br/>\n   ※3：後から[自動or手動]の変更は不可（使用するJSコードが異なるため）<br/>\n   ※4：以下の<strong>類似パーツ</strong>との併用は不可とさせていただきます。</p>\n</td>\n<td> </td>\n</tr>\n</tbody>\n</table>\n\n<p><strong>▼類似パーツ</strong></p>\n<ul>\n<li><a href=\"//js-part.hmup.jp/js/case_slider/fade\">記事リストスライダー（フェード）</a></li>\n<li><a href=\"//js-part.hmup.jp/js/row-slider\">画像+テキスト（row）のスライド</a></li>\n</ul>\n<a href=\"#structure\">構造図を見る</a></section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>カード型（3列）</h2><p>手動でスライドver.</p>\n</section>\n\n<section class=\"content-element content-4\"><h2>カード型（2列）</h2><p>手動でスライドver.</p>\n</section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fbf9ef\"><h2>カード型（1列）</h2><p>手動でスライドver.</p>\n</section>\n\n<section class=\"content-element content-6\"><h2>リスト型</h2><p>手動でスライドver.</p>\n</section>\n\n<section class=\"content-element content-7 full_swiper_sec\" style=\"background-color:#fbf9ef\"><h2>幅100%</h2></section>\n\n<section class=\"content-element content-8\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-9\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>パーツとクラス名をデモに合わせて設置する。​​​​</li>\n</ul>\n<ol>\n<li>記事リストパーツにそれぞれ用途にあったクラス名を追加。<br/>\n カード型（1~3列）の場合、「<strong>swiper</strong> <strong>js-swiper02</strong>」を追加。<br/>\n リスト型の場合、「<strong>list_swiper</strong> <strong>js-swiper02</strong>」を追加。\n\n <ul>\n<li>幅を100%化したい場合→セクションにクラス名「<strong>full_swiper_sec</strong>」を追加。</li>\n<li>必要に応じて、記事リストカスタム用のクラス名「<strong>caseContent_style</strong>」を追加。</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>\n<p>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。</p>\n</li>\n</ul>\n<h2>注意点</h2>※以下の類似パーツとの併用はできません。<p><strong>▼類似パーツ</strong></p>\n<ul>\n<li><a href=\"//js-part.hmup.jp/js/case_slider/fade\">記事リストスライダー（フェード）</a></li>\n<li><a href=\"//js-part.hmup.jp/js/row-slider\">画像+テキスト（row）のスライド</a></li>\n</ul>\n</section>\n\n<section class=\"content-element content-10\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-11-08更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- 記事リストスライダー START v1.0.0-----*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>    .inner {<br/>      .row {<br/>        .col {<br/>          .component {<br/>            &amp;.entry-list {<br/>              // スワイパー（カード型）<br/>              &amp;.swiper {<br/>                visibility: hidden;//ちらつき防止<br/>                height: 0;//記事リスト数分の高さが出るのを阻止<br/>                margin-bottom: 35px;<br/>                padding: 20px;//シャドウが隠れる対策<br/>                @include breakpoint-sp {<br/>                  margin-bottom: 55px;<br/>                }<br/>                @include breakpoint-ssp {<br/>                  padding: 20px 10px;<br/>                }<br/>                .article-list {<br/>                  &amp;.swiper-wrapper {<br/>                    flex-wrap: nowrap !important;<br/>                    gap: 0;<br/>                    .entry-list-unit {<br/>                      height: initial;<br/>                      margin-right: $case_list_space !important;<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>              // スワイパー（リスト型）<br/>              &amp;.list_swiper {<br/>                overflow: hidden;<br/>                visibility: hidden;//ちらつき防止<br/>                height: 0;//記事リスト数分の高さが出るのを阻止<br/>                margin-bottom: 35px;<br/>                padding: 20px;//シャドウが隠れる対策<br/>                @include breakpoint-sp {<br/>                  margin-bottom: 55px;<br/>                }<br/>                @include breakpoint-ssp {<br/>                  padding: 20px 10px;<br/>                }<br/>                .article-list {<br/>                  display: flex !important;<br/>                  &amp;.swiper-wrapper {<br/>                    .entry-list-unit {<br/>                      display: table !important;<br/>                      height: initial;<br/>                      margin: 0 20px 0 0;<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>          // アローボタン<br/>          :is(.swiper-button-next, .swiper-button-prev) {<br/>            width: 70px;<br/>            height: 70px;<br/>            background: #ffad2f;<br/>            border-radius: 50vh;<br/>            opacity: $hover_opacity;<br/>            @include breakpoint-ssp {<br/>              width: 50px;<br/>              height: 50px;<br/>            }<br/>            &amp;:hover {<br/>              opacity: 1;<br/>            }<br/>            &amp;::after {<br/>              font-size: 20px;<br/>              color: #fff;<br/>            }<br/>          }<br/>          // 前へボタン<br/>          .swiper-button-prev {<br/>            left: -20px;<br/>            @include breakpoint-ssp {<br/>              left: -15px;<br/>            }<br/>          }<br/>          // 次へボタン<br/>          .swiper-button-next {<br/>            right: -20px;<br/>            @include breakpoint-ssp {<br/>              right: -15px;<br/>            }<br/>          }<br/>          // ページネーション<br/>          :is(<br/>            .swiper-horizontal &gt; .swiper-pagination-bullets,<br/>            .swiper-pagination-bullets.swiper-pagination-horizontal,<br/>            .swiper-pagination-custom,<br/>            .swiper-pagination-fraction<br/>          ) {<br/>            @include breakpoint-sp {<br/>              bottom: -20px;<br/>            }<br/>            .swiper-pagination-bullet {<br/>              width: 10px;<br/>              height: 10px;<br/>              background: #ffad2f;<br/>              margin: 0 5px;<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>    // 幅100%用（不要であれば削除）<br/>    &amp;.full_swiper_sec {<br/>      .inner {<br/>        max-width: 100%;<br/>        padding: 0;<br/>        .row {<br/>          .col {<br/>            @include breakpoint-pc {<br/>              padding: 0 0 10px;<br/>            }<br/>            .component {<br/>              &amp;.entry-list {<br/>                // スワイパー<br/>                &amp;.swiper {<br/>                  padding: 20px 0;<br/>                  .article-list {<br/>                    &amp;.swiper-wrapper {<br/>                      .entry-list-unit {<br/>                        //記事リスト間余白なし<br/>                        margin-right: 0 !important;<br/>                      }<br/>                    }<br/>                  }<br/>                  //カード型1列<br/>                  &amp;.entry-image-card-1-col {<br/>                    .article-list {<br/>                      .entry-list-unit {<br/>                        width: 100%;<br/>                      }<br/>                    }<br/>                  }<br/>                  //カード型2列<br/>                  &amp;.entry-image-card-2-col {<br/>                    .article-list {<br/>                      .entry-list-unit {<br/>                        @include breakpoint-pc {<br/>                          width: calc(100% / 2);<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                  //カード型3列<br/>                  &amp;.entry-image-card-3-col {<br/>                    .article-list {<br/>                      .entry-list-unit {<br/>                        @include breakpoint-pc {<br/>                          width: calc(100% / 3);<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>            // 前へボタン<br/>            .swiper-button-prev {<br/>              left: 0;<br/>            }<br/>            // 次へボタン<br/>            .swiper-button-next {<br/>              right: 0;<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- 記事リストスライダー END -----*/</section>\n\n<section class=\"content-element content-11\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2024-09-12更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- 記事リストスライダー 編集画面用 START v1.0.0--*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root:root:root)) {<br/>  .inner {<br/>    .row {<br/>      .col {<br/>        .component {<br/>          &amp;.entry-list {<br/>            // スワイパー（カード型）<br/>            &amp;.swiper {<br/>              visibility: visible;<br/>              height: initial;<br/>            }<br/>            // スワイパー（リスト型）<br/>            &amp;.list_swiper {<br/>              visibility: visible;<br/>              height: initial;<br/>              .article-list {<br/>                display: block !important;<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>  &amp;.full_swiper_sec {<br/>    .inner {<br/>      padding: 20px;<br/>      .row {<br/>        .col {<br/>          .component {<br/>            &amp;.entry-list {<br/>              &amp;.swiper {<br/>                .article-list {<br/>                  gap: 0;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- 記事リストスライダー 編集画面用 END --*/</section>\n\n<section class=\"content-element content-12\"><h2>①jQueryを設定</h2><p>JavaScript埋め込みパーツを設置し、CDNで読み込んだ最新バージョンのjQueryを反映させます。<br/>\n※jQueryコンフリクト回避 のため<br/>\n<br/>\n複数のJSパーツを使用する場合は、こちらの①jQueryの読み込みは一度だけで大丈夫です。</p>\n<p><strong>2024-01更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script<br/>  src=\"https://code.jquery.com/jquery-3.6.0.min.js\"<br/>  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"<br/>  crossorigin=\"anonymous\"<br/>&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  'use strict';<br/>  /*--- jQueryコンフリクト回避 v1.0.0---*/<br/>  jQuery.noConflict();<br/><br/>  /*--- この下にJavaScriptを記述していく---*/<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-13\"><h2>②JavaScript</h2><p>①の下に新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p>\n<p><strong>2024-04-12更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css\" /&gt;<br/>&lt;script src=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js\"&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  /* -----------------------------------<br/>    記事リストスライダー（手動スライドver. ）v1.0.0<br/>  ----------------------------------- */<br/>  /* 画像等すべて読み込んでから実行 */<br/>  jQuery(window).on('load', function () {<br/>    /* 1秒後に実行 */<br/>    setTimeout(function () {<br/>      /*------------- 変数定義 【変更可能】 START -------------*/<br/>      const speed02 = 300; /* スライド自体のスピード設定(ms / デフォルト→300) */<br/>      /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>      const swiperList02 = jQuery('.js-swiper02');/* スワイパー */<br/>      swiperList02.closest('.col').css('position', 'relative'); /* アローアイコンを内側に入れるために指定 */<br/>      const swiperRow02 = swiperList02.closest('.row');/* スワイパーが入ったrow */<br/> <br/>      for (let i = 0; i &lt; swiperRow02.length; i++) {<br/>        const index = i + 1;<br/>        const targetSlide02Swiper02 = swiperRow02.eq(i).find('.js-swiper02');/* 各スワイパー要素を取得 */<br/>        const targetSlide02 = swiperRow02.eq(i).find('.js-swiper02 .entry-list-unit');/* 各スワイパー内の記事リストを取得 */<br/>        /* ページネーションとアローボタン */<br/>        const swiperPaginationEl02 = jQuery(<br/>          `&lt;div class=\"swiper-pagination swiper02-pagination-${index}\"&gt;&lt;/div&gt;` +<br/>            `&lt;div class=\"swiper-button-prev swiper02-button-prev-${index}\"&gt;&lt;/div&gt;` +<br/>            `&lt;div class=\"swiper-button-next swiper02-button-next-${index}\"&gt;&lt;/div&gt;`<br/>        );<br/><br/>        /* 各スワイパーのクラス名にindex付与（複数設置対応） */<br/>        const swiperWrapper02 = jQuery('.js-swiper02 .article-list');<br/>        swiperWrapper02.addClass('swiper-wrapper');<br/>        targetSlide02.addClass('swiper-slide');<br/>        targetSlide02Swiper02.addClass(`swiper02-${index}`);<br/>        swiperPaginationEl02.insertAfter(`.swiper02-${index}`);<br/><br/>        const swiper02 = new Swiper(`.swiper02-${index}`, {<br/>          slidesPerView: 'auto', /* 一画面に表示する枚数 */<br/>          loop: true, /* ループさせる */<br/>          speed: speed02,/* スライド自体のスピード設定 */<br/>          /* ページネーション */<br/>          pagination: {<br/>            el: `.swiper02-pagination-${index}`,<br/>            clickable: true, /* クリック可にする */<br/>          },<br/>          /* アローボタン */<br/>          navigation: {<br/>            nextEl: `.swiper02-button-next-${index}`,<br/>            prevEl: `.swiper02-button-prev-${index}`<br/>          },<br/>        });<br/>      }<br/><br/>      swiperList02.css('visibility', 'initial');/* ちらつき防止 */<br/>      swiperList02.css('height', 'initial');/* 記事リスト数分の高さが出るのを阻止 */<br/><br/>      /* 記事リスト画像を取得（loading=\"lazy\"外し） */<br/>      jQuery('.swiper-slide img').removeAttr('loading');<br/>    }, 500);<br/><br/>  });<br/>  /* -----------------------------------<br/>    記事リストスライダー（手動スライドver. ） END<br/>  ----------------------------------- */<br/>&lt;/script&gt;<br/><br/></section>\n\n<section class=\"content-element content-14\">    </section>"
  },
  {
    "title": "記事リストスライダー (フェード)",
    "url": "https://js-part.hmup.jp/js/case_slider/fade",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>記事リストスライダー<br/>（フェード）<br/></h2></section>\n\n<section class=\"content-element content-2\"><p><strong>※手動スライドverは以下より工数マイナス1hとなります</strong></p>\n\n<table>\n<thead>\n<tr>\n<th>追加可能<br/>\n   パーツ</th>\n<th>変更可能箇所</th>\n<th>変更NG</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード<br/>\n   使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>×</p>\n</td>\n<td>\n<ul>\n<li>ページネーションのサイズ/カラー/余白</li>\n<li>Prev,Nextボタンの位置/デザイン</li>\n<li>スライドの自動or手動の選択※1</li>\n<li>[再生/停止]ボタンのデザイン\n<ul>\n<li>ボタンの枠組みの形</li>\n<li>アイコンの色味・サイズ</li>\n<li>枠線の色</li>\n<li>ボタンの位置</li>\n<li>ボタンの有無</li>\n</ul>\n</li>\n</ul>\n<p><br/>\n<strong>JS変更箇所</strong></p>\n<ul>\n<li>\n<p>各スライドの表示時間（デフォルトでは4秒）<br/>\n変数名：<strong>fadeDelay</strong></p>\n</li>\n<li>\n<p>スライドの切り替わる速さ（デフォルトでは2.5秒）<br/>\n変数名：<strong>f</strong><strong>adeSpeed</strong></p>\n</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>一画面で表示する枚数※2（1枚表示のみ）</li>\n<li>[再生/停止]ボタンに使用する<br/>\n    アイコンの変更※3</li>\n<li>[再生/停止]ボタンパーツ使用時の<br/>\n    テキスト表示</li>\n</ul>\n</td>\n<td>○<br/>\n※4</td>\n<td><strong>○</strong></td>\n</tr>\n<tr>\n<th>※留意事項 </th>\n</tr>\n<tr>\n<td>\n<p>※1：後から[自動or手動]の変更は不可（使用するJSコードが異なるため）<br/>\n   ※2：記事リストのカード型（1~4列）・リスト型の機能は使用できません。どれを選択しても一枚表示固定になります。<br/>\n   ※3：現状使用しているアイコン（疑似要素）で固定となります。<br/>\n   ※4：以下の<strong>類似パーツ</strong>との併用は不可とさせていただきます。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n<p><strong>▼類似パーツ</strong></p>\n<ul>\n<li><a href=\"//js-part.hmup.jp/js/case_slider\">記事リストスライダー（自動スライドver.）</a></li>\n<li><a href=\"//js-part.hmup.jp/js/case_slider02\">記事リストスライダー（手動スライドver.）</a></li>\n<li><a href=\"//js-part.hmup.jp/js/row-slider\">画像+テキスト（row）のスライド</a></li>\n</ul>\n<a href=\"#structure\">構造図を見る</a></section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ01</h2><p>自動でスライドver.</p>\n<a href=\"#\">再生・停止ボタン</a></section>\n\n<section class=\"content-element content-4\" style=\"background-color:#fbeff6\"><h2>デモ02</h2><p>手動でスライドver.</p>\n</section>\n\n<section class=\"content-element content-5\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-6\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>パーツとクラス名をデモに合わせて設置する。</li>\n</ul>\n<ol>\n<li>記事リストを自動でスライドさせたい場合と手動でスライドさせたい場合でコピーするJavaScriptが異なります。<br/>\n それぞれ用途にあった方をコピーして下さい。​​​​\n\n <ul>\n<li>自動でスライドさせたい場合は<a href=\"#js01\">こちらをコピー</a></li>\n<li>手動でスライドさせたい場合は<a href=\"#js02\">こちらをコピー</a></li>\n</ul>\n</li>\n<li>記事リストパーツにそれぞれ用途にあったクラス名を追加。\n <ul>\n<li>自動スライドver.の場合→クラス名「<strong>swiper op_fade js-swiper</strong>」</li>\n<li>手動スライドver.の場合→クラス名「<strong>swiper op_fade js-swiper02</strong>」<br/>\n  ※必要に応じて、記事リストカスタム用のクラス名「<strong>caseContent_style</strong>」を追加。<br/>\n  ※記事リストの型はどれを選択しても一枚表示固定になりますので、編集画面のスクロール量を抑えるため3型で設定しておくと良いかと思います。</li>\n</ul>\n</li>\n<li>（自動スライドver.の場合）[再生/停止]ボタンを用意します。<br/>\n 記事リストのすぐ下に、[単体パーツ＞デフォルト＞ボタンパーツ]を配置し、クラス名「<strong>js-stop_btn stop_btn</strong>」を追加。<br/>\n リンク先を[このページの一番上に遷移]に設定する。※リンク先を設定しないと表示されません。<br/>\n ※古いページ内リンク対策が入ったJSパーツと併用している場合、上記のリンク設定[#]だと正しく動かない場合があります。その際はTOPページ等に設定してください。（URLが[#]以外になれば問題ありません）<br/>\n ※必ずデフォルトパーツを使用してください。デザインパーツを使用した場合、打ち消すスタイルが必要になります。<br/>\n ※ボタンテキストは表示されませんが、適当に「再生・停止ボタン」などと設定しておくと良いかと思います。</li>\n</ol>\n<ul>\n<li>\n<p>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。<br/>\n ※再生・停止ボタン以外</p>\n</li>\n</ul>\n<h2>注意点</h2><p>※以下の類似パーツとの併用はできません。</p>\n<p><strong>▼類似パーツ</strong></p>\n<ul>\n<li><a href=\"//js-part.hmup.jp/js/case_slider\">記事リストスライダー（自動スライドver.）</a></li>\n<li><a href=\"//js-part.hmup.jp/js/case_slider02\">記事リストスライダー（手動スライドver.）</a></li>\n<li><a href=\"//js-part.hmup.jp/js/row-slider\">画像+テキスト（row）のスライド</a></li>\n</ul>\n</section>\n\n<section class=\"content-element content-7\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-12-26更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- 記事リストスライダー（フェード） START v1.0.0-----*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>    .inner {<br/>      .row {<br/>        .col {<br/>          .component {<br/>            &amp;.entry-list {<br/>              // スワイパー<br/>              &amp;.swiper {<br/>                visibility: hidden; //ちらつき防止<br/>                height: 0; //記事リスト数分の高さが出るのを阻止<br/>                margin-bottom: 10px;<br/>                padding: 20px; //シャドウが隠れる対策<br/>                @include breakpoint-ssp {<br/>                  padding: 20px 10px;<br/>                }<br/>                .article-list {<br/>                  &amp;.swiper-wrapper {<br/>                    flex-wrap: nowrap !important;<br/>                    gap: 0;<br/>                    .entry-list-unit {<br/>                      height: initial;<br/>                      margin-right: $case_list_space !important;<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>              // フェード 透過対策<br/>              &amp;.op_fade {<br/>                .article-list {<br/>                  &amp;.swiper-wrapper {<br/>                    .swiper-slide {<br/>                      opacity: 0 !important;<br/>                      &amp;.swiper-slide-active {<br/>                        opacity: 1 !important;<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>            // 再生・停止ボタン<br/>            &amp;.stop_btn {<br/>              margin-top: 30px;<br/>              .button-cont {<br/>                a {<br/>                  display: inline-flex;<br/>                  justify-content: center;<br/>                  align-items: center;<br/>                  width: 30px;<br/>                  height: 30px;<br/>                  border-radius: 50vh;<br/>                  background: transparent;<br/>                  border: 2px solid #999;<br/>                  font-size: 0; //テキスト非表示<br/>                  letter-spacing: 0;<br/>                  line-height: 1;<br/>                  padding: 0;<br/>                  position: relative;<br/>                  &amp;::before {<br/>                    content: \"\\f04d\"; //停止アイコン<br/>                    font-family: $font_family_awsm5;<br/>                    font-weight: 900;<br/>                    font-size: 15px;<br/>                    color: #999;<br/>                    position: absolute;<br/>                    top: 50%;<br/>                    left: 50%;<br/>                    transform: translate(-50%, -50%);<br/>                  }<br/>                  // 停止時アイコン切り替え<br/>                  &amp;.-stop {<br/>                    &amp;::before {<br/>                      content: \"\\f04b\"; //再生アイコン<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>          // アローボタン<br/>          :is(.swiper-button-next, .swiper-button-prev) {<br/>            width: 70px;<br/>            height: 70px;<br/>            background: #ffad2f;<br/>            border-radius: 50vh;<br/>            opacity: $hover_opacity;<br/>            transform: translateY(-50%);<br/>            @include breakpoint-ssp {<br/>              width: 50px;<br/>              height: 50px;<br/>            }<br/>            &amp;:hover {<br/>              opacity: 1;<br/>            }<br/>            &amp;::after {<br/>              font-size: 20px;<br/>              color: #fff;<br/>            }<br/>          }<br/>          // 前へボタン<br/>          .swiper-button-prev {<br/>            left: -20px;<br/>            @include breakpoint-ssp {<br/>              left: -15px;<br/>            }<br/>          }<br/>          // 次へボタン<br/>          .swiper-button-next {<br/>            right: -20px;<br/>            @include breakpoint-ssp {<br/>              right: -15px;<br/>            }<br/>          }<br/>          // ページネーション<br/>          :is(.swiper-horizontal &gt; .swiper-pagination-bullets, .swiper-pagination-bullets.swiper-pagination-horizontal, .swiper-pagination-custom, .swiper-pagination-fraction) {<br/>            position: initial;<br/>            @include breakpoint-sp {<br/>              bottom: -20px;<br/>            }<br/>            .swiper-pagination-bullet {<br/>              width: 10px;<br/>              height: 10px;<br/>              background: #ffad2f;<br/>              margin: 0 5px;<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- 記事リストスライダー（フェード） END -----*/</section>\n\n<section class=\"content-element content-8\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2024-09-12更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- 記事リストスライダー（フェード） 編集画面用 START v1.0.0--*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root:root:root)) {<br/>  .inner {<br/>    .row {<br/>      .col {<br/>        .component {<br/>          &amp;.entry-list {<br/>            &amp;.swiper {<br/>              visibility: visible;<br/>              height: initial;<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- 記事リストスライダー（フェード） 編集画面用 END --*/</section>\n\n<section class=\"content-element content-9\"><h2>①jQueryを設定</h2><p>JavaScript埋め込みパーツを設置し、CDNで読み込んだ最新バージョンのjQueryを反映させます。<br/>\n※jQueryコンフリクト回避 のため<br/>\n<br/>\n複数のJSパーツを使用する場合は、こちらの①jQueryの読み込みは一度だけで大丈夫です。</p>\n<p><strong>2024-01更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script<br/>  src=\"https://code.jquery.com/jquery-3.6.0.min.js\"<br/>  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"<br/>  crossorigin=\"anonymous\"<br/>&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  'use strict';<br/>  /*--- jQueryコンフリクト回避 v1.0.0---*/<br/>  jQuery.noConflict();<br/><br/>  /*--- この下にJavaScriptを記述していく---*/<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-10\"><h2>②JavaScript（自動ver）</h2><p>①の下に新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p>\n<p>自動でスライドさせたい場合はこちらをコピー</p>\n<p><strong>2024-04-12更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css\" /&gt;<br/>&lt;script src=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js\"&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  /* -------------------------------------------------------<br/>    記事リストスライダー（フェード）※自動スライドver. 停止ボタン付き v1.0.0<br/>  ------------------------------------------------------- */<br/>  /* 画像等すべて読み込んでから実行 */<br/>  jQuery(window).on('load', function () {<br/>    /* 0.5秒後に実行 */<br/>    setTimeout(function () {<br/>      /*------------- 変数定義 【変更可能】 START -------------*/<br/>      const fadeSpeed = 2500; /* スライド切り替えのスピード設定(ms) */<br/>      const fadeDelay = 4000; /* 自動再生にかかる秒数(ms) */<br/>      /*------------- 変数定義 【変更可能】 END -------------*/<br/> <br/>      const swiperList = jQuery('.js-swiper');/* スライダー */<br/>      swiperList.closest('.col').css('position', 'relative'); /* 前へ・次へボタンを内側に入れるために指定 */<br/>      const swiperRow = swiperList.closest('.row');/* スライダーが入ったrow */<br/><br/>      for (let i = 0; i &lt; swiperRow.length; i++) {<br/>        const index = i + 1;<br/>        const targetSlideSwiper = swiperRow.eq(i).find('.js-swiper');/* 各スライダー要素を取得 */<br/>        const targetSlide = swiperRow.eq(i).find('.js-swiper .entry-list-unit');/* 各スライダー内の記事リストを取得 */<br/>        const targetSlideBtn = swiperRow.eq(i).find('.js-stop_btn a');/* 各スライダー停止ボタンを取得 */<br/>        /* ページネーションとアローボタン */<br/>        const swiperPaginationEl = jQuery(<br/>          `&lt;div class=\"swiper-pagination swiper-pagination-${index}\"&gt;&lt;/div&gt;` +<br/>            `&lt;div class=\"swiper-button-prev swiper-button-prev-${index}\"&gt;&lt;/div&gt;` +<br/>            `&lt;div class=\"swiper-button-next swiper-button-next-${index}\"&gt;&lt;/div&gt;`<br/>        );<br/><br/>        /* 各スライダーのクラス名にindex付与（複数設置対応） */<br/>        const swiperWrapper = jQuery('.js-swiper .article-list');<br/>        swiperWrapper.addClass('swiper-wrapper');<br/>        targetSlide.addClass('swiper-slide');<br/>        targetSlideSwiper.addClass(`swiper-${index}`);<br/>        targetSlideBtn.addClass(`swiperBtn-${index}`);<br/>        swiperPaginationEl.insertAfter(`.swiper-${index}`);<br/><br/>        const swiper = new Swiper(`.swiper-${index}`, {<br/>          loop: true, /* ループさせる */<br/>          speed: fadeSpeed,/* 切り替えスピード*/<br/>          effect: 'fade', /* フェードアニメーション */<br/>          fadeEffect: {<br/>            crossFade: true,/* 重なり対策 */<br/>          },<br/>          /* 自動再生 */<br/>          autoplay: {<br/>            delay: fadeDelay,/* 自動再生にかかる秒数 */<br/>            disableOnInteraction: false,/* ページネーションをクリック後に自動再生を再開 */<br/>          },<br/>          /* ページネーション */<br/>          pagination: {<br/>            el: `.swiper-pagination-${index}`,<br/>            clickable: true, /* クリック可にする */<br/>          },<br/>          /* アローボタン */<br/>          navigation: {<br/>            nextEl: `.swiper-button-next-${index}`,<br/>            prevEl: `.swiper-button-prev-${index}`<br/>          },<br/>        });<br/><br/>        /* 再生・停止ボタン */<br/>        targetSlideBtn.on('click', function(e) {<br/>          e.preventDefault();<br/>          if (jQuery(this).hasClass('-stop')) {<br/>            jQuery(this)<br/>              .addClass('-start')<br/>              .removeClass('-stop');<br/>              swiper.autoplay.start();<br/>          } else {<br/>            jQuery(this)<br/>            .addClass('-stop')<br/>            .removeClass('-start');<br/>            swiper.autoplay.stop();<br/>          }<br/>        });<br/><br/>      }<br/><br/>      swiperList.css('visibility', 'initial');/* ちらつき防止 */<br/>      swiperList.css('height', 'initial');/* 記事リスト数分の高さが出るのを阻止 */<br/><br/>      /* 記事リスト画像を取得（loading=\"lazy\"外し） */<br/>      jQuery('.swiper-slide img').removeAttr('loading');<br/>    }, 500);<br/><br/>  });<br/>  /* -------------------------------------------------------<br/>    記事リストスライダー（フェード）※自動スライドver. 停止ボタン付き END<br/>  ------------------------------------------------------- */<br/>&lt;/script&gt;<br/><br/></section>\n\n<section class=\"content-element content-11\"><h2>②JavaScript（手動ver）</h2><p>①の下に新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p>\n<p>手動でスライドさせたい場合はこちらをコピー</p>\n<p><strong>2024-04-12更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css\" /&gt;<br/>&lt;script src=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js\"&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  /* ---------------------------------------------<br/>    記事リストスライダー（フェード）※手動スライドver. v1.0.0<br/>  --------------------------------------------- */<br/>  /* 画像等すべて読み込んでから実行 */<br/>  jQuery(window).on('load', function () {<br/>    /* 1秒後に実行 */<br/>    setTimeout(function () {<br/>      /*------------- 変数定義 【変更可能】 START -------------*/<br/>      const fadeSpeed02 = 2500; /* スライド自体のスピード設定(ms) */<br/>      /*------------- 変数定義 【変更可能】 END -------------*/<br/> <br/>      const swiperList02 = jQuery('.js-swiper02');/* スワイパー */<br/>      swiperList02.closest('.col').css('position', 'relative'); /* アローアイコンを内側に入れるために指定 */<br/>      const swiperRow02 = swiperList02.closest('.row');/* スワイパーが入ったrow */<br/><br/>      for (let i = 0; i &lt; swiperRow02.length; i++) {<br/>        const index = i + 1;<br/>        const targetSlide02Swiper02 = swiperRow02.eq(i).find('.js-swiper02');/* 各スワイパー要素を取得 */<br/>        const targetSlide02 = swiperRow02.eq(i).find('.js-swiper02 .entry-list-unit');/* 各スワイパー内の記事リストを取得 */<br/>        /* ページネーションとアローボタン */<br/>        const swiperPaginationEl02 = jQuery(<br/>          `&lt;div class=\"swiper-pagination swiper02-pagination-${index}\"&gt;&lt;/div&gt;` +<br/>            `&lt;div class=\"swiper-button-prev swiper02-button-prev-${index}\"&gt;&lt;/div&gt;` +<br/>            `&lt;div class=\"swiper-button-next swiper02-button-next-${index}\"&gt;&lt;/div&gt;`<br/>        );<br/><br/>        /* 各スワイパーのクラス名にindex付与（複数設置対応） */<br/>        const swiperWrapper02 = jQuery('.js-swiper02 .article-list');<br/>        swiperWrapper02.addClass('swiper-wrapper');<br/>        targetSlide02.addClass('swiper-slide');<br/>        targetSlide02Swiper02.addClass(`swiper02-${index}`);<br/>        swiperPaginationEl02.insertAfter(`.swiper02-${index}`);<br/><br/>        const swiper02 = new Swiper(`.swiper02-${index}`, {<br/>          loop: true, /* ループさせる */<br/>          speed: fadeSpeed02,/* 切り替えスピード*/<br/>          effect: 'fade', /* フェードアニメーション */<br/>          fadeEffect: {<br/>            crossFade: true,/* 重なり対策 */<br/>          },<br/>          /* ページネーション */<br/>          pagination: {<br/>            el: `.swiper02-pagination-${index}`,<br/>            clickable: true, /* クリック可にする */<br/>          },<br/>          /* アローボタン */<br/>          navigation: {<br/>            nextEl: `.swiper02-button-next-${index}`,<br/>            prevEl: `.swiper02-button-prev-${index}`<br/>          },<br/>        });<br/>      }<br/><br/>      swiperList02.css('visibility', 'initial');/* ちらつき防止 */<br/>      swiperList02.css('height', 'initial');/* 記事リスト数分の高さが出るのを阻止 */<br/><br/>      /* 記事リスト画像を取得（loading=\"lazy\"外し） */<br/>      jQuery('.swiper-slide img').removeAttr('loading');<br/>    }, 500);<br/><br/>  });<br/>  /* ---------------------------------------------<br/>    記事リストスライダー（フェード）※手動スライドver. END<br/>  --------------------------------------------- */<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-12\">        </section>"
  },
  {
    "title": "横スライドアニメーション",
    "url": "https://js-part.hmup.jp/js/shutter",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>横スライドアニメーション</h2><p>指定のクラス名をつけた要素がウィンドウ画面内に入ったら、<br/>\n横からスライドアニメーションする</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>変更NG箇所</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>（適用可能パーツ）</p>\n<ul>\n<li>セクション</li>\n<li>行（row）</li>\n<li>カラム（col）</li>\n<li>画像パーツ</li>\n<li>リッチテキスト etc...</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>シャッターの色</li>\n<li>シャッターの閉じる方向<br/>\n    （※左右どちらかのみ）</li>\n<li>アニメーションの速度</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>実行タイミング<br/>\n（スクロール交差範囲）</li>\n<li>処理の繰り返し有無</li>\n</ul>\n</td>\n<td>〇</td>\n<td>〇</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ01</h2><h3>見出しが入ります。</h3><p>テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<h3>見出しが入ります。</h3><p>テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<h3>見出しが入ります。</h3><p>テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<h3>見出しが入ります。</h3><p>テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<h3>見出しが入ります。</h3><p>テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n</section>\n\n<section class=\"content-element content-4 js-shutter shutter-left\" style=\"background-color:#fbeff6\"><h2>デモ02</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p>\n<h3>機能１の見出し（h3）</h3><h3>機能２の見出し（h3）</h3><h3>機能3の見出し（h3）</h3><a href=\"/service\">ボタン</a></section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。</li>\n</ul>\n<ol>\n<li>アニメーションさせたい要素（パーツ）にクラス名「<strong>js-shutter</strong>」を追加。<br/>\n 用途に応じて、下記クラスを更に追加。\n <ul>\n<li>\n<p>左から右にスライドイン→「<strong>shutter-right</strong>」</p>\n</li>\n<li>\n<p>右から左にスライドイン→「<strong>shutter-left</strong>」</p>\n</li>\n</ul>\n</li>\n<li>\n<p>シャッターの色を複数作りたい場合<br/>\n →オプションクラス「<strong>shutter02-color</strong>」を追加。<br/>\n ※3色目以降は各自でクラス追加して対応してください。<br/>\n ※シャッターの色はカスタムCSSで変更可能。</p>\n</li>\n</ol>\n<ul>\n<li>\n<p>SPも同様の挙動になります。</p>\n</li>\n</ul>\n<h2>注意点</h2><ul>\n<li>デザインがある箇所にスライドアニメーションを付ける際は、「シャッター要素をつける用のクラス」とは別に、「デザインを当てる用のクラス」（※例で「column02_row」を追加しています）を付与し、後者にデザイン用のスタイルを調整するようにしてください。</li>\n<li>現状はafter要素をシャッターに設定しているので、別用途でafter要素を使用される場合は、違う要素をシャッターにする必要があるためご注意ください。※擬似要素が望ましいです。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-6\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-07-24更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- 横スライドアニメーション START v1.0.0-----*/<br/>.theme-fo-base .wrapper .contents {<br/>  // どこでも使えるように紐付けなし<br/>  .shutter {<br/>    position: relative;<br/>    &amp;::after {<br/>      content: '';<br/>      display: block;<br/>      position: absolute;<br/>      top: 0;<br/>      z-index: 10;<br/>      width: 100%;<br/>      height: 100%;<br/>      background: #fff;//シャッターの色<br/>      transition: width 800ms cubic-bezier(.9,.1,.1,.9);<br/>    }<br/>    // 右に向かって閉じる<br/>    &amp;-right {<br/>      @extend .shutter;<br/>      &amp;::after {<br/>        right: 0;<br/>      }<br/>    }<br/>    // 左に向かって閉じる<br/>    &amp;-left {<br/>      @extend .shutter;<br/>      &amp;::after {<br/>        left: 0;<br/>      }<br/>    }<br/>    //「is-in」がついたらシャッターを閉める<br/>    &amp;-right,<br/>    &amp;-left {<br/>      &amp;.is-in {<br/>        &amp;::after {<br/>          width: 0;<br/>        }<br/>      }<br/>      &amp;.shutter02-color {<br/>        &amp;::after {<br/>          background: #ffad2f;//シャッターの色<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- 横スライドアニメーション END -----*/</section>\n\n<section class=\"content-element content-7\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-07-24更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- 横スライドアニメーション 編集画面用 START v1.0.0--*/<br/>.theme-fo-base .wrapper .contents {<br/>  .shutter-right,<br/>  .shutter-left {<br/>    border: 1px solid #000;<br/>    &amp;::after {<br/>      content: \"横スライドアニメーションがつきます（カラー①）\";<br/>      position: absolute;<br/>      color: #fff;<br/>      background: #000;<br/>      padding: 5px 5px;<br/>      right: 0;<br/>      left: initial !important;<br/>      top: -24px;<br/>      font-size: 14px;<br/>      line-height: 1;<br/>      width: initial;<br/>      height: initial;<br/>    }<br/>    &amp;.shutter02-color {<br/>      &amp;::after {<br/>        content: \"横スライドアニメーションがつきます（カラー②）\";<br/>        background: #ffad2f;<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- 横スライドアニメーション 編集画面用 END --*/</section>\n\n<section class=\"content-element content-8\"><h2>JavaScript</h2><p><strong>2022-10-12更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  'use strict';<br/>  /* -----------------------<br/>    横スライドアニメーション v1.0.0<br/>  ----------------------- */<br/>  document.addEventListener('DOMContentLoaded', function () {<br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    let scrollShutter = document.querySelectorAll('.js-shutter');/* 監視対象要素 */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/>    if ('IntersectionObserver' in window) {<br/>      /* オプション */<br/>      const options = {<br/>        root: null,/* viewport（ブラウザの画面全体）を交差監視範囲とする */<br/>        rootMargin: '-70% 0px -30%',/* 「root要素に設けるmargin」と「対象」が交差したらイベントを発火 */<br/>        threshold: 0/* 対象がどの程度の割合交差した場合に実行するか */<br/>      };<br/>      /* 監視対象要素がスクロール範囲に入ったら実行 */<br/>      const observer = new IntersectionObserver(doWhenIntersect, options);<br/>      function doWhenIntersect(entries) {<br/>        entries.forEach((entry) =&gt; {<br/>          if (entry.isIntersecting) {<br/>            let object = entry.target;<br/>            object.classList.add('is-in');/* スクロール範囲内に入ったら対象にクラス「is-in」をつける */<br/>            observer.unobserve(object);/* 処理が終わったら監視を止める */<br/>          }<br/>        });<br/>      }<br/>      /* 監視対象要素の監視をスタート */<br/>      scrollShutter.forEach(function (object) {<br/>        observer.observe(object);<br/>      });<br/>    }<br/>  });<br/>  /* -----------------------<br/>    横スライドアニメーション END<br/>  ----------------------- */<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-9\"></section>"
  },
  {
    "title": "アコーディオン(faq)",
    "url": "https://js-part.hmup.jp/js/faq",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>アコーディオン（FAQ）</h2></section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p><strong>△</strong><br/>\n※リッチテキストの機能で<br/>\n   追加可能なもの</p>\n</td>\n<td>\n<ul>\n<li>カラム\n    <ul>\n<li>背景色/角丸/余白/ボックスシャドウ</li>\n</ul>\n</li>\n<li>テキストカラー</li>\n<li>QAのカラー</li>\n<li>QAのリッチテキスト間のボーダー</li>\n<li><strong>[＋]</strong>アイコンのデザイン<br/>\n     </li>\n</ul>\n<p><strong>JS変更箇所</strong></p>\n<ul>\n<li>\n<p>アコーディオンの開閉時間※①<br/>\n    変数名 : <strong>duration</strong></p>\n</li>\n</ul>\n</td>\n<td>〇</td>\n<td>〇</td>\n</tr>\n<tr>\n<th>※留意事項</th>\n<th> </th>\n</tr>\n<tr>\n<td>\n<p>▼<strong>リッチテキストの機能</strong>で追加可能なもの</p>\n<ul>\n<li>画像（※サイズや細かいスタイル指定不可。画像パーツ機能ではないため、クラスの付与ができません）</li>\n<li>テーブル</li>\n<li>リスト</li>\n</ul>\n<p>※：リッチテキストパーツの機能を使って画像の挿入等をすることは可能。<br/>\n   ※：2カラムなどの複雑なレイアウトは不可。</p>\n<p><br/>\n<strong>【JS】</strong><br/>\n    ※①：デフォルトの開閉速度は0.3秒です。</p>\n<ul>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><p>どのようにして設立された協会なのでしょうか？</p><p>リッチテキストを入力してください（アコーディオンデモ）</p><p>どのようにして設立された協会なのでしょうか？</p><p>リッチテキストを入力してください（アコーディオンデモ）</p><p>どのようにして設立された協会なのでしょうか？</p><p>リッチテキストを入力してください（アコーディオンデモ）</p><p>リッチテキストの画像挿入機能を使用しています↓</p><p></p><p>どのようにして設立された協会なのでしょうか？</p><p>リッチテキストを入力してください（アコーディオンデモ）</p><ul><li>リッチテキストのリスト機能です</li><li>ダミーテキスト</li><li>ダミーテキスト</li></ul><table><tbody><tr><td><p>リッチテキストのテーブル機能です</p></td><td><p>ダミーテキスト</p></td></tr><tr><td><p>ダミーテキスト</p></td><td><p>ダミーテキスト</p></td></tr><tr><td><p>ダミーテキスト</p></td><td><p>ダミーテキスト</p></td></tr></tbody></table><p><strong>1</strong></p><p>どのようにして設立された協会なのでしょうか？</p><p>リッチテキストを入力してください（アコーディオンデモ）</p></section>\n\n<section class=\"content-element content-5\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-6\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>\n<p>編集画面用CSSを適切な位置に記述。</p>\n</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。</li>\n</ul>\n<ol>\n<li>新規行（row）を作成し、中のカラム（col）にスタイル調整用のクラス名「<strong>faq_col</strong>」を追加。</li>\n<li>上記行の中にリッチテキストパーツを挿入し、クラス名「<strong>js-faq_qu faq_qu</strong>」の２つを追加。<br/>\n ※Qの内容[トリガー部分]</li>\n<li>その下に更にリッチテキストパーツを挿入し、クラス名「<strong>js-faq_an faq_an</strong>」の２つを追加。<br/>\n ※Aの内容[開閉する部分]</li>\n<li>プラス[＋]アイコンなどの挙動は、各自カスタムCSSで調整してください。</li>\n</ol>\n<p> </p>\n<ul>\n<li>新CMSの場合：複合パーツ[Q&amp;A]は従来のものと構造が異なるため、使用できません。デフォルトパーツを使用し、上記フローに沿って構築するようにしてください。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-7\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2024-01-26更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- よくあるご質問 【JSアコーディオン】 START v1.0.0-----*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>    .inner {<br/>      .row {<br/>        .col {<br/>          &amp;.faq_col {<br/>            display: block;<br/>            background: #fff;<br/>            box-shadow: $box_shadow_common;<br/>            border-radius: $border_radius_common;<br/>            padding: 0;<br/>            .component {<br/>              //リッチテキスト<br/>              &amp;.richtext {<br/>                &amp;.faq_qu,<br/>                &amp;.faq_an {<br/>                  position: relative;<br/>                  margin: 0 20px;<br/>                  padding: 25px 50px;<br/>                  &amp;::before {<br/>                    display: inline-block;<br/>                    font-size: 28px;<br/>                    font-weight: bold;<br/>                    line-height: 1;<br/>                    position: absolute;<br/>                    left: 4px;<br/>                    margin-top: -3px;<br/>                  }<br/>                  p {<br/>                    margin: 0;<br/>                    padding: 0;<br/>                  }<br/>                }<br/>                &amp;.faq_qu {<br/>                  cursor: pointer;<br/>                  &amp;::before {<br/>                    content: \"Q.\";<br/>                    color: #ffad2f;<br/>                  }<br/>                  // [＋]アイコン<br/>                  &amp;::after {<br/>                    content: \"\\f055\";<br/>                    font-family: $font_family_awsm6;<br/>                    display: inline-block;<br/>                    font-size: 28px;<br/>                    font-weight: 900;<br/>                    line-height: 1;<br/>                    color: #ffad2f;<br/>                    position: absolute;<br/>                    top: 50%;<br/>                    right: 4px;<br/>                    transform: translateY(-50%);<br/>                  }<br/>                  // [-]アイコン<br/>                  &amp;.is-active {<br/>                    &amp;::after {<br/>                      content: \"\\f056\";<br/>                    }<br/>                  }<br/>                }<br/>                &amp;.faq_an {<br/>                  border-top: 1px solid #ddd;<br/>                  &amp;:before {<br/>                    content: \"A.\";<br/>                    color: #333;<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- よくあるご質問 【JSアコーディオン】 END -----*/<br/></section>\n\n<section class=\"content-element content-8\"><h2>JavaScript</h2><p><strong>2024-09-06更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  'use strict';<br/>  /* -----------------------<br/>    アコーディオン（FAQ）v1.0.0<br/>  ----------------------- */<br/>  /*------------- 変数定義 【変更可能】 START -------------*/<br/>  const faqDuration = 300;/* アコーディオンが表示されるまでの時間 [ms] */<br/>  /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>  /* アコーディオンでスライドさせたい要素を取得 (クラス名を指定) */<br/>  const faqSlideToggleElements = document.querySelectorAll('.js-faq_an');<br/>  /* スライドを起動するトリガーのボタンを取得 (クラス名を指定) */<br/>  const faqSlideToggleBtns = document.querySelectorAll('.js-faq_qu');<br/><br/>  faqSlideToggleElements.forEach((an) =&gt; {<br/>    an.style.display = 'none';<br/>  });<br/><br/>  /* slideToggle */<br/>  faqSlideToggleBtns.forEach((faqSlideToggleBtn) =&gt; {<br/>    faqSlideToggleBtn.addEventListener('click', () =&gt; {<br/>      const el = faqSlideToggleBtn.nextElementSibling;<br/>      faqSlideToggle(el, faqDuration);<br/>    });<br/>  });<br/><br/>  /* slideUp */<br/>  const faqSlideUp = (el, faqDuration) =&gt; {<br/>    el.previousElementSibling.classList.remove('is-active');<br/>    el.style.height = el.offsetHeight + 'px';<br/>    el.offsetHeight;<br/>    el.style.transitionProperty = 'height, margin, padding';<br/>    el.style.transitionDuration = faqDuration + 'ms';<br/>    el.style.transitionTimingFunction = 'ease';<br/>    el.style.overflow = 'hidden';<br/>    el.style.height = 0;<br/>    el.style.paddingTop = 0;<br/>    el.style.paddingBottom = 0;<br/>    el.style.marginTop = 0;<br/>    el.style.marginBottom = 0;<br/>    setTimeout(() =&gt; {<br/>      el.style.display = 'none';<br/>      el.style.removeProperty('height');<br/>      el.style.removeProperty('padding-top');<br/>      el.style.removeProperty('padding-bottom');<br/>      el.style.removeProperty('margin-top');<br/>      el.style.removeProperty('margin-bottom');<br/>      el.style.removeProperty('overflow');<br/>      el.style.removeProperty('transition-duration');<br/>      el.style.removeProperty('transition-property');<br/>      el.style.removeProperty('transition-timing-function');<br/>    }, faqDuration);<br/>  };<br/><br/>  /* slideDown */<br/>  const faqSlideDown = (el, faqDuration) =&gt; {<br/>    el.previousElementSibling.classList.add('is-active');<br/>    el.style.removeProperty('display');<br/>    let display = window.getComputedStyle(el).display;<br/>    if (display === 'none') {<br/>      display = 'block';<br/>    }<br/>    el.style.display = display;<br/>    let height = el.offsetHeight;<br/>    el.style.overflow = 'hidden';<br/>    el.style.height = 0;<br/>    el.style.paddingTop = 0;<br/>    el.style.paddingBottom = 0;<br/>    el.style.marginTop = 0;<br/>    el.style.marginBottom = 0;<br/>    el.offsetHeight;<br/>    el.style.transitionProperty = 'height, margin, padding';<br/>    el.style.transitionDuration = faqDuration + 'ms';<br/>    el.style.transitionTimingFunction = 'ease';<br/>    el.style.height = height + 'px';<br/>    el.style.removeProperty('padding-top');<br/>    el.style.removeProperty('padding-bottom');<br/>    el.style.removeProperty('margin-top');<br/>    el.style.removeProperty('margin-bottom');<br/>    setTimeout(() =&gt; {<br/>      el.style.removeProperty('height');<br/>      el.style.removeProperty('overflow');<br/>      el.style.removeProperty('transition-duration');<br/>      el.style.removeProperty('transition-property');<br/>      el.style.removeProperty('transition-timing-function');<br/>    }, faqDuration);<br/>  };<br/><br/>  /* slideToggle */<br/>  const faqSlideToggle = (el, faqDuration) =&gt; {<br/>    if (window.getComputedStyle(el).display === 'none') {<br/>      return faqSlideDown(el, faqDuration);<br/>    } else {<br/>      return faqSlideUp(el, faqDuration);<br/>    }<br/>  };<br/>  /* -----------------------<br/>    アコーディオン（FAQ） END<br/>  ----------------------- */<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-9\"></section>"
  },
  {
    "title": "背景色ふわっと切り替え",
    "url": "https://js-part.hmup.jp/js/bgChange",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>背景色ふわっと切り替え</h2><p>ウィンドウ画面内に入ったら背景色がふわっと切り替わる</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>変更NG箇所</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>-</p>\n</td>\n<td>\n<ul>\n<li>背景色切り替え後の<br/>\n    背景色/テキストカラー</li>\n<li>切り替え時の速度<br/>\n※CSSで調整可能</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>実行タイミング<br/>\n（交差範囲）</li>\n<li>処理の繰り返しの<br/>\n    コントロール<br/>\n（繰り返し有のみ）</li>\n</ul>\n</td>\n<td>〇</td>\n<td>〇</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3 js-bg-change\" style=\"background-color:#fbf9ef\"><h2>背景色ふわっと切り替え デモ01</h2><h3>見出しが入ります。</h3><p>テキストテキストテキストテキスト</p>\n<p>テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<h3>見出しが入ります。</h3><p>テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n</section>\n\n<section class=\"content-element content-4\"><h2>見出しh2</h2><h3>見出しが入ります。</h3><p>テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<h3>見出しが入ります。</h3><p>テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n</section>\n\n<section class=\"content-element content-5 js-bg-change\" style=\"background-color:#fbeff6\"><h2>背景色ふわっと切り替え デモ02</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p>\n<h3>機能１の見出し（h3）</h3><h3>機能２の見出し（h3）</h3><h3>機能3の見出し（h3）</h3><a href=\"/service\">ボタン</a></section>\n\n<section class=\"content-element content-6\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。</li>\n</ul>\n<ol>\n<li>背景色を切り替せたセクションにクラス名「<strong>js-bg-change</strong>」を追加。</li>\n<li>デフォルトでは背景切り替えと同時に文字色が白になるように設定しているため、行（row）の背景色を白などに設定していて中の要素の文字色を変えたくない場合は、各自でカスタムCSSにて調整してください。<br/>\n ※例として「<strong>column02_row</strong>」の中の要素が白文字にならないように設定しています。不要であれば削除してください。<br/>\n ​​​​​​※切り替え後の[背景色/文字色]はカスタムCSSで変更可能。</li>\n</ol>\n<ul>\n<li>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。</li>\n</ul>\n<h2>注意点</h2><ul>\n<li> セクションのみ対応</li>\n</ul>\n</section>\n\n<section class=\"content-element content-7\"><h2>カスタムCSS</h2><p><strong>2023-07-24更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- 背景色ふわっと切り替え START v1.0.0-----*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>    &amp;.js-bg-change {<br/>      transition: color 800ms;<br/>      transition: background 800ms;<br/>      &amp;.is-change {<br/>        background: #333 !important;//切り替え後の背景色<br/>        color: #fff !important;//切り替え後の文字色<br/>        em,span {<br/>          color: inherit !important;<br/>        }<br/>        .inner {<br/>          .row {<br/>            .col {<br/>              .component {<br/>                &amp;.heading {<br/>                  :is(h1,h2,h3,h4,h5) {<br/>                    // 見出しのみ効かない為個別で指定<br/>                    color: #fff !important;<br/>                  }<br/>                }<br/>                &amp;.richtext {<br/>                  color: #fff !important;<br/>                }<br/>              }<br/>            }<br/>            // 不要であれば削除（白文字にしたくない要素）<br/>            &amp;.column02_row {//クラス名は適宜変更<br/>              .col {<br/>                .component {<br/>                  &amp;.heading {<br/>                    :is(h1,h2,h3,h4,h5) {<br/>                      color: #2d2d2d !important;<br/>                    }<br/>                  }<br/>                  &amp;.richtext {<br/>                    color: #333 !important;<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- 背景色ふわっと切り替え END -----*/</section>\n\n<section class=\"content-element content-9\"><h2>JavaScript</h2><p><strong>2022-01-25更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  'use strict';<br/>  /* -----------------------<br/>    背景色ふわっと切り替え v1.0.0<br/>  ----------------------- */<br/>  document.addEventListener('DOMContentLoaded', function () {<br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    let scrollBgChange = document.querySelectorAll('.js-bg-change');/* 監視対象要素 */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/>    if ('IntersectionObserver' in window) {<br/>      /* オプション */<br/>      const options = {<br/>        root: null,/* viewport（ブラウザの画面全体）を交差監視対象とする */<br/>        rootMargin: '-70% 0px -30%',/* 「root要素に設けるmargin」と「対象」が交差したらイベントを発火 */<br/>        threshold: 0/* 対象がどの程度の割合交差した場合に実行するか */<br/>      };<br/>      /* 監視対象要素がスクロール範囲に入ったら実行 */<br/>      const observer2 = new IntersectionObserver(doWhenIntersect2, options);<br/>      function doWhenIntersect2(entries) {<br/>        entries.forEach((entry) =&gt; {<br/>          let object = entry.target;<br/>          if (entry.isIntersecting) {<br/>            /* 交差し始めた要素の挙動 */<br/>            object.classList.add('is-change');/* 交差範囲内に入ったらクラス「is-change」をつける */<br/>          } else {<br/>            /* 交差し終えた要素の挙動 */<br/>            object.classList.remove('is-change');/* 交差範囲内から外れたらクラス「is-change」を外す */<br/>          }<br/>        });<br/>      }<br/>      /* 監視対象要素の監視をスタート */<br/>      scrollBgChange.forEach(function (object) {<br/>        observer2.observe(object);<br/>      });<br/>    }<br/>  });<br/>  /* -----------------------<br/>    背景色ふわっと切り替え END<br/>  ----------------------- */<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-10\"></section>"
  },
  {
    "title": "CTA・擬似フッター幅100%表示 【要素移動】",
    "url": "https://js-part.hmup.jp/js/g-footer",
    "html": "<section class=\"content-element content-1 js-move_top_sec width100_sec\" style=\"background-color:#ffd293\"><h2>MV下に横幅100%<br/>デモ</h2></section>\n\n<section class=\"content-element content-2\" style=\"border:dashed #ff0000 2px\"><h2>⇧デモ</h2><p>本来ここにあるセクションがコンテンツ外へ移動し、幅100%を実現</p>\n</section>\n\n<section class=\"content-element content-3\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能</th>\n<th>変更NG</th>\n<th>複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>（セクションに設置可能なパーツ）</p>\n<ul>\n<li>行</li>\n<li>カラム</li>\n<li>デザインパーツ</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>デザインに合わせて変更可能</li>\n<li>MV下 / フッター上に移動可能※1</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>セクションの<br/>\n    移動先※2</li>\n</ul>\n</td>\n<td>×</td>\n<td>〇</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：</p>\n<ul>\n<li>「<strong>js-move_top_sec</strong>」→コンテンツエリアの上（メインビジュアル下）にセクションが移動します。</li>\n<li>「<strong>js-move_bottom_sec</strong>」→コンテンツエリアの下にセクションが移動します。</li>\n</ul>\n<p><br/>\n   ※2：専用クラスを付与したセクションが、<strong>&lt;div class=\"wrapper\"&gt;&lt;/div&gt;</strong>の外に移動します。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-5\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n<p> </p>\n<ul>\n<li>専用クラスを付与したセクションが、<strong>&lt;div class=\"wrapper\"&gt;&lt;/div&gt;</strong>の外に移動します。\n\n <ul>\n<li>\n<p>「<strong>js-move_top_sec</strong>」→コンテンツエリアの上（メインビジュアル下）にセクションが移動します。</p>\n</li>\n<li>\n<p>「<strong>js-move_bottom_sec</strong>」→コンテンツエリアの下にセクションが移動します。</p>\n</li>\n</ul>\n</li>\n<li>これにより、サイドバーがある場合の幅100%表示に対応します。<br/>\n ※編集画面ではJavaScriptが効かないため、サイドバー表示時の幅が公開画面と異なって見えるのでご注意ください。</li>\n<li>更新性を考慮し、疑似フッター内のサイトマップエリアとコピーライトエリアを共通パーツで作成しています。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-6\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>デモ通りの位置（疑似フッター内の一番下）</strong>に配置。</li>\n<li>クラス名をデモとあわせる。\n <ul>\n</ul>\n</li>\n</ul>\n<ol>\n<li>セクションを作成し、必要に応じてクラス名「<strong>width100_sec</strong>」を追加。</li>\n<li>上記セクションの下に疑似フッター用セクションを作成し、スタイル調整用のクラス名「<strong>footer_sec</strong>」を追加。</li>\n<li>疑似フッター用セクション内で、行（row）を作成し、新規共通パーツを配置。<br/>\n ▼以下、共通パーツ内での作業▼\n \n<table>\n<tbody>\n<tr>\n<td>\n<p>※以下の流れはデモの例です。デザインによって配置パーツなど異なるかと思うので、必要に応じてクラス名の変更や用途にあったパーツを使用してください。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n<ul>\n<li>上記共通パーツ内で新規行（row）を作成し、クラス名「<strong>ftLink_row</strong>」を追加。</li>\n<li>上記行（row）を4分割し、一番左のカラム（col）にクラス名「<strong>info_col</strong>」を追加。2~4カラム目にはクラス名「<strong>site_map_col</strong>」を追加。</li>\n<li>カラム「<strong>info_col</strong>」の中にロゴ用の画像パーツを配置し、クラス名「<strong>footer_logo_img</strong>」を追加。</li>\n<li>カラム「<strong>site_map_col</strong>」の中にリッチテキストパーツを配置し、クラス名「<strong>site_map_list</strong>」を追加。リスト機能を使用してそれぞれリンクを設定。</li>\n</ul>\n</li>\n<li>共通パーツの行（row）の下に、新規行（row）を作成し、クラス名「<strong>page_top_row</strong>」を追加。中にページトップアイコン用の画像を配置する。</li>\n<li>更に下にコピーライト用の新規行（row）を作成し、クラス名「<strong>foot-copyright_row</strong>」を追加。<br/>\n 上記行（row）内に新規共通パーツを挿入し、共通パーツ内にリッチテキストパーツを配置してクラス名「<strong>foot-copyright</strong>」を追加。</li>\n<li>最後に、移動させたいセクションにクラス名「<strong>js-move_top_sec / js-move_bottom_sec</strong>」を追加。このクラスを付与した要素がコンテンツ外に移動し、幅100%表示されます。\n <ul>\n<li>（CTA含む）セクション</li>\n<li>疑似フッター用セクション</li>\n</ul>\n</li>\n</ol>\n<p> </p>\n<ul>\n<li>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。</li>\n</ul>\n<h2>注意点</h2><ul>\n<li>疑似フッターで使用している共通パーツ内のリッチテキストは時々意図しない挙動になり崩れる恐れがあるので注意してください。<br/>\n ※半角スペースが入っていると崩れたりなど<br/>\n  </li>\n<li>要素をtheme-fo-baseより外に移動すると構造が変わるため、本来のネストでは動かなくなる可能性があるのでセクションから直接紐付けるなどのCSS調整をしてください。<br/>\n また、fOのテーマCSS（fo-base.css）が当たらない場合もあり、CSSの書き方が通常と異なる場合があります。<br/>\n  </li>\n<li>JavaScriptの影響により表示順序が変わるのを防ぐため、コピーライトは擬似フッター用セクション内の一番下に入れてください。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-7\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-07-21更新（v1.0.0）</strong></p>\n<p>//旧CMS用（不要であれば削除）<br/>\n//新CMS用（不要であれば削除）<br/>\nと2つ記述を用意している箇所がいくつかありますので必要に応じて削除orコメントアウトを外してください。<br/>\n※デフォルトでは新CMS用の記述が当たるようにしています。</p>\n<a href=\"#\">CSSをコピーする</a>/*----- CTA・擬似フッター幅100%表示 START v1.0.0-----*/<br/>//要素移動させる場合・させない場合でも効くように両方指定<br/>/* CTA */<br/>.theme-fo-base .wrapper .contents:is(section,section[data-designpart-id]:not(:root:root:root:root)).cta_sec,<br/>.width100_sec {<br/>  .inner {<br/>    width: 100%;<br/>    max-width: 1100px;<br/>    margin: 0 auto;<br/>    padding: 20px;<br/>  }<br/>}<br/>/* 疑似フッター */<br/>.theme-fo-base .wrapper .contents:is(section,section[data-designpart-id]:not(:root:root:root:root)).footer_sec,<br/>.footer_sec {<br/>  padding: 0;<br/>  .inner {<br/>    padding: 0;<br/>    .row {<br/>      .col {<br/>        padding: 0;<br/>        .component {<br/>          &amp;.cta {<br/>            margin: 0;<br/>            padding: 0;<br/>            .cta-row {<br/>              margin: 0;<br/>              padding: 0;<br/>              &amp;.ftLink_row {<br/>                max-width: 1100px;<br/>                margin: 0 auto;<br/>                padding: 60px 20px;<br/>                @include breakpoint-msp {<br/>                  display: flex;<br/>                  flex-wrap: wrap;<br/>                  justify-content: center;<br/>                  padding: 40px 20px;<br/>                }<br/>                //各colの幅やスタイル部分<br/>                .cta-column {<br/>                  margin: 0;<br/>                  padding: 0;<br/>                  //ロゴの部分<br/>                  &amp;.info_col {<br/>                    @include breakpoint-pc {<br/>                      width: 28% !important;<br/>                    }<br/>                    @include breakpoint-pro_s {<br/>                      width: 100% !important;<br/>                    }<br/>                    @include breakpoint-msp {<br/>                      padding: 0 0 20px;<br/>                    }<br/>                  }<br/>                  //サイトマップ<br/>                  &amp;.site_map_col {<br/>                    @include breakpoint-pc {<br/>                      width: calc(72% / 3) !important;<br/>                    }<br/>                    @include breakpoint-pro_s {<br/>                      width: 33% !important;<br/>                    }<br/>                    @include breakpoint-msp {<br/>                      margin: 0;<br/>                      padding: 0;<br/>                    }<br/>                    @include breakpoint-tb {<br/>                      width: 33% !important;<br/>                      margin: 10px 0;<br/>                    }<br/>                    &amp;:empty {<br/>                      @include breakpoint-msp {<br/>                        display: none;<br/>                      }<br/>                    }<br/>                    &amp; + .site_map_col {<br/>                      @include breakpoint-ssp {<br/>                        margin-top: 10px;<br/>                      }<br/>                    }<br/><br/>                  }<br/>                  .component {<br/>                    &amp;.text {<br/>                      @include breakpoint-msp {<br/>                        padding: 10px 0;<br/>                      }<br/>                    }<br/>                    &amp;.richtext {<br/>                      //サイトマップ<br/>                      &amp;.site_map_list {<br/>                        ul {<br/>                          list-style: none;<br/>                          margin: 0;<br/>                          li {<br/>                            list-style-type: none;<br/>                            font-size: 16px;<br/>                            // color: $footCont_text_color;//旧CMS用（不要であれば削除）<br/>                            color: var(--fo-text-main-color);//新CMS用（不要であれば削除）<br/>                            // line-height: $base_line_height;//旧CMS用（不要であれば削除）<br/>                            line-height: var(--fo-text-line-height);//新CMS用（不要であれば削除）<br/>                            &amp;:not(:first-child) {<br/>                              margin: 10px 0 0;<br/>                            }<br/>                            a {<br/>                              display: block;<br/>                              color: inherit;<br/>                              line-height: inherit;<br/>                              text-decoration: none;<br/>                              padding: 0 5px;<br/>                              &amp;:hover {<br/>                                background: transparent;<br/>                                opacity: $hover_opacity;<br/>                              }<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                    &amp;.image {<br/>                      // フッターロゴ<br/>                      &amp;.footer_logo_img {<br/>                        margin: 0;<br/>                        img {<br/>                          max-width: 170px !important;<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>      /* ページトップアイコン */<br/>      &amp;.page_top_row {<br/>        @extend %page_top;<br/>      }<br/>      /* コピーライト */<br/>      &amp;.foot-copyright_row {<br/>        .col {<br/>          .component {<br/>            &amp;.cta {<br/>              .cta-row {<br/>                .cta-column {<br/>                  margin: 0;<br/>                  padding: 0;<br/>                  .component {<br/>                    &amp;.richtext {<br/>                      &amp;.foot-copyright {<br/>                        @extend %copyright_custom;<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- CTA・擬似フッター幅100%表示 END -----*/</section>\n\n<section class=\"content-element content-8\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2024-09-17更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- CTA・擬似フッター幅100%表示 編集画面用 START v1.0.0--*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;.footer_sec {<br/>    .inner {<br/>      padding: 20px;<br/>      .row {<br/>        &amp;.page_top_row {<br/>          .component {<br/>            &amp;.image {<br/>              position: static;<br/>              &amp;::before {<br/>                content: \"ページ右下に固定されます\";<br/>                background: #0987d4;<br/>                color: #fff;<br/>                position: absolute;<br/>                bottom: -24px;<br/>                left: 0;<br/>                padding: 0 5px;<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- CTA・擬似フッター幅100%表示 編集画面用 END --*/</section>\n\n<section class=\"content-element content-9\"><h2>JavaScript</h2><p><strong>2025-05-16更新（v1.1.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* ------------------------------------<br/>    CTA・擬似フッター幅100%表示【要素移動】）v1.1.0<br/>  ------------------------------------ */<br/>  'use strict';<br/><br/>  document.addEventListener('DOMContentLoaded', function() {<br/><br/>    /*------------- 変数定義 START -------------*/<br/>    const move_top = document.querySelectorAll('.js-move_top_sec');/* MV下に移動させるセクション */ <br/>    const move_bottom = document.querySelectorAll('.js-move_bottom_sec');/* コンテンツ下に移動させるセクション */ <br/>    const wrapper = document.querySelector('.wrapper');<br/>    const foot = document.querySelector('.foot');<br/>    /*------------- 変数定義 END -------------*/<br/><br/>    /*------------- MV下への処理 -------------*/<br/>    move_top.forEach(function(el) {<br/>      wrapper.parentNode.insertBefore(el, wrapper);<br/>    });<br/><br/>    /*------------- コンテンツ下への処理 -------------*/<br/>    move_bottom.forEach(function(el) {<br/>      if (foot) {<br/>        wrapper.parentNode.insertBefore(el, foot);<br/>      } else {<br/>        wrapper.parentNode.appendChild(el);<br/>      }<br/>    });<br/>  });<br/><br/>  /* ------------------------------------<br/>    CTA・擬似フッター幅100%表示【要素移動】）END<br/>  ------------------------------------ */<br/>&lt;/script&gt;</section>\n\n<section class=\"content-element content-10\">  <!--------------- スクリプトコピーボタン END ---------------></section>\n\n<section class=\"content-element content-11\" style=\"border:dashed #ff0000 2px\"><p>本来ここにあるセクションがコンテンツ外へ移動し、幅100%を実現</p>\n<h2>⇩デモ</h2></section>\n\n<section class=\"content-element content-12 width100_sec js-move_bottom_sec\" data-designpart=\"section-two-cta\" data-designpart-id=\"642f669ce4dc09621d945b19\" style=\"background-image:url(https://ferret-one.akamaized.net/images/61ee55bdbc5e710001487813/original.jpeg?utime=1643009469);background-size:cover;background-position:center\"><p><strong>CONTACT</strong></p>\n<h2>●●●でお悩みの方は、お気軽にご相談ください(H2)</h2><p><strong>ご不明な点はお気軽に<br/>\nお問い合わせください</strong></p>\n<a href=\"#\">お問い合わせ</a><p><strong>●●のお役立ち資料は<br/>\nこちらから</strong></p>\n<a href=\"#\">資料ダウンロード</a><p><strong>お電話でのお問い合わせはこちら</strong></p>\n<a href=\"#\">03-1234-5678</a><p><strong>平日 00:00~00:00</strong></p>\n</section>\n\n<section class=\"content-element content-13 footer_sec js-move_bottom_sec\" style=\"background-color:#fbf9ef\"><a href=\"/index\"></a><ul>\n<li><a href=\"//js-part.hmup.jp/js\">JSパーツ集</a></li>\n<li><a href=\"//js-part.hmup.jp/coverage\">フォロールール</a></li>\n<li>\n<p><a href=\"//js-part.hmup.jp/manual/01\">JS使用時のフロー</a></p>\n</li>\n<li>\n<p><a href=\"//js-part.hmup.jp/initialization\">JS使用時の初期設定</a></p>\n</li>\n</ul>\n<a href=\"#\"></a><p>© Basic Inc. All Rights Reserved.</p>\n</section>"
  },
  {
    "title": "タブ切り替え（colボタンver.）",
    "url": "https://js-part.hmup.jp/js/tab",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替え<br/>（colボタンver.）</h2>colをボタンとしてタブを切り替える</section>\n\n<section class=\"content-element content-2\"><p>※デザインにより工数変動あり</p>\n\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>変更NG</th>\n<th>同一ページに複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p><strong>■タブ</strong><br/>\n（カラムに設置可能なパーツ）</p>\n<ul>\n<li>リッチテキストパーツ</li>\n<li>見出しパーツ</li>\n<li>画像パーツ</li>\n</ul>\n<p><br/>\n<strong>■タブコンテンツ</strong><br/>\n<strong>（</strong>セクションに設置可能なパーツ）</p>\n<ul>\n<li>行</li>\n<li>カラム</li>\n<li>デザインパーツ</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>タブの数※1<br/>\n（編集画面で増減可能。一段につき4個まで/5個以上は2段）</li>\n<li>タブの背景色/テキストカラー/余白</li>\n<li>タブボタンのデザイン</li>\n<li>タブコンテンツ部分の背景色</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>タブコンテンツ部分の背景色を顧客側で変更※2</li>\n</ul>\n</td>\n<td>〇</td>\n<td>〇</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：タブ用のカラム（col）を増やす際には、クラス「<strong>js-tabNav_col</strong>」を付与する必要あり。<br/>\n   ※2：構造上、タブコンテンツエリアの背景色をinnerで指定しているため、顧客側で後から色を変更することはできません。<br/>\n   また、セクションの背景色が白だった場合はタブ切り替えパーツと同化して境界線がなくなってしまうため、顧客側でパーツを複製・配置される際はご注意ください。（元々タブコンテンツエリアの色が白以外の場合は特に問題ありません）<br/>\n   ※タブエリアとタブコンテンツエリアのセクションが分かれる形になります。<br/>\n   ※SP時はタブ部分がスクロールします。2段の場合は縦並びになります。（初期設定なのでCSSで適宜変更可）<br/>\n   ※<a href=\"//js-part.hmup.jp/js-private/tab02\">タブ切り替え（リストボタンver.）</a>と比べて置けるパーツの自由度は高いです。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n<p>フェレットワンで管理されたページのコンテンツ量の上限は、カラムにして大体150カラムが上限です。（個社ごとの扱い方によって変動します）<br/>\nこのタブ切り替えパーツでは、多くの情報をタブに分割・格納するパーツである特徴から、データ量の上限にあたりやすい特性を持ちます。<br/>\nデータ量の上限にあたると、「変更を保存できませんでした」というメッセージが表示されます。<br/>\n上記のエラーメッセージが表示された場合、パーツや行、カラム数を減らしていただく必要がございますので予めご了承ください。</p>\n<a href=\"#structure\">構造図を見る</a></section>\n\n<section class=\"content-element content-3 tabNav_sec js-tabNav_sec\" style=\"background-color:#fbf9ef\"><h2>2タブ デモ</h2><p><strong>タブメニュー１</strong></p><p><strong>タブメニュー2</strong></p></section>\n\n<section class=\"content-element content-4 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション01</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><h3>機能１の見出し（h3）</h3><h3>機能２の見出し（h3）</h3><h3>機能3の見出し（h3）</h3><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-5 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション02</h2><p>・ ダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキスト<br/>・ ダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキスト<br/>・ ダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキスト<br/>・ ダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキスト</p></section>\n\n<section class=\"content-element content-6 tabNav_sec js-tabNav_sec\" style=\"background-color:#fbeff6\"><h2>3タブ デモ</h2><p><strong>タブメニュー１</strong></p><p><strong>タブメニュー2</strong></p><p><strong>タブメニュー3</strong></p></section>\n\n<section class=\"content-element content-7 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション01</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><p><strong>・ ○○ができていない○○ができていない</strong></p><p><strong>・ ○○を改善したい○○を改善したい</strong></p><p><strong>・ ○○に不満を感じている○○に不満を感じている</strong></p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-8 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション02</h2><ul><li>○○ができていない</li><li>○○を改善したい</li><li>○○に不満を感じている</li></ul></section>\n\n<section class=\"content-element content-9 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション03</h2><ul><li>○○ができていない</li><li>○○を改善したい</li><li>○○に不満を感じている</li></ul></section>\n\n<section class=\"content-element content-10 tabNav_sec js-tabNav_sec\" style=\"background-color:#fbf9ef\"><h2>4タブ デモ</h2><p><strong>タブメニュー１</strong></p><p><strong>タブメニュー2</strong></p><p><strong>タブメニュー3</strong></p><p><strong>タブメニュー4</strong></p></section>\n\n<section class=\"content-element content-11 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション01</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><h3>機能１の見出し（h3）</h3><h3>機能２の見出し（h3）</h3><h3>機能3の見出し（h3）</h3><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-12 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション02</h2><ul><li>○○ができていない</li><li>○○を改善したい</li><li>○○に不満を感じている</li></ul></section>\n\n<section class=\"content-element content-13 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション03</h2><ul><li>○○ができていない</li><li>○○を改善したい</li><li>○○に不満を感じている</li></ul></section>\n\n<section class=\"content-element content-14 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション04</h2><ul><li>○○ができていない</li><li>○○を改善したい</li><li>○○に不満を感じている</li></ul></section>\n\n<section class=\"content-element content-15 tabNav_sec js-tabNav_sec\" style=\"background-color:#fbeff6\"><h2>5タブ デモ</h2><p>※上段3タブ、下段2タブも可能</p><p><strong>タブメニュー１</strong></p><p><strong>タブメニュー2</strong></p><p><strong>タブメニュー3</strong></p><p><strong>タブメニュー4</strong></p><p><strong>タブメニュー5</strong></p></section>\n\n<section class=\"content-element content-16 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション01</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><p>・ 〇〇〇〇〇〇〇〇〇を改善したい企業様<br/>・ 〇〇〇〇〇〇〇〇〇にお困りの担当者様<br/>・ 〇〇〇〇〇〇〇〇〇に興味がある方</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-17 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション02</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><h3>機能１の見出し（h3）</h3><h3>機能２の見出し（h3）</h3><h3>機能3の見出し（h3）</h3><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-18 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション03</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-19 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション04</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-20 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション05</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-21 tabNav_sec js-tabNav_sec\" style=\"background-color:#fbf9ef\"><h2>6タブ（3タブの2行） デモ</h2><p><strong>タブメニュー１</strong></p><p><strong>タブメニュー2</strong></p><p><strong>タブメニュー3</strong></p><p><strong>タブメニュー4</strong></p><p><strong>タブメニュー5</strong></p><p><strong>タブメニュー6</strong></p></section>\n\n<section class=\"content-element content-22 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション01</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><p>・ 〇〇〇〇〇〇〇〇〇を改善したい企業様<br/>・ 〇〇〇〇〇〇〇〇〇にお困りの担当者様<br/>・ 〇〇〇〇〇〇〇〇〇に興味がある方</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-23 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション02</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-24 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション03</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-25 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション04</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-26 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション05</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-27 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション06</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-28 tabNav_sec js-tabNav_sec\" style=\"background-color:#fbeff6\"><h2>6タブ（4タブ・2タブの2行） デモ</h2><p>※上段2タブ、下段4タブも可能</p><p><strong>タブメニュー１</strong></p><p><strong>タブメニュー2</strong></p><p><strong>タブメニュー3</strong></p><p><strong>タブメニュー4</strong></p><p><strong>タブメニュー5</strong></p><p><strong>タブメニュー6</strong></p></section>\n\n<section class=\"content-element content-29 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション01</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-30 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション02</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-31 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション03</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-32 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション04</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-33 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション05</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-34 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション06</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-35 tabNav_sec js-tabNav_sec\" style=\"background-color:#fbf9ef\"><h2>7タブ デモ</h2><p>※上段3タブ、下段4タブも可能</p><p><strong>タブメニュー１</strong></p><p><strong>タブメニュー2</strong></p><p><strong>タブメニュー3</strong></p><p><strong>タブメニュー4</strong></p><p><strong>タブメニュー5</strong></p><p><strong>タブメニュー6</strong></p><p><strong>タブメニュー7</strong></p></section>\n\n<section class=\"content-element content-36 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション01</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-37 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション02</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-38 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション03</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-39 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション04</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-40 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション05</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-41 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション06</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-42 tab_sec js-tab_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替えセクション06</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-43 tabNav_sec js-tabNav_sec\" style=\"background-color:#fbeff6\"><h2>8タブ デモ</h2><p><strong>タブメニュー１</strong></p><p><strong>タブメニュー2</strong></p><p><strong>タブメニュー3</strong></p><p><strong>タブメニュー4</strong></p><p><strong>タブメニュー5</strong></p><p><strong>タブメニュー6</strong></p><p><strong>タブメニュー7</strong></p><p><strong>タブメニュー8</strong></p></section>\n\n<section class=\"content-element content-44 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション01</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><p>・ 〇〇〇〇〇〇〇〇〇を改善したい企業様<br/>・ 〇〇〇〇〇〇〇〇〇にお困りの担当者様<br/>・ 〇〇〇〇〇〇〇〇〇に興味がある方</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-45 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション02</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><p>・ 〇〇〇〇〇〇〇〇〇を改善したい企業様<br/>・ 〇〇〇〇〇〇〇〇〇にお困りの担当者様<br/>・ 〇〇〇〇〇〇〇〇〇に興味がある方</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-46 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション03</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><p>・ 〇〇〇〇〇〇〇〇〇を改善したい企業様<br/>・ 〇〇〇〇〇〇〇〇〇にお困りの担当者様<br/>・ 〇〇〇〇〇〇〇〇〇に興味がある方</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-47 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション04</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><p>・ 〇〇〇〇〇〇〇〇〇を改善したい企業様<br/>・ 〇〇〇〇〇〇〇〇〇にお困りの担当者様<br/>・ 〇〇〇〇〇〇〇〇〇に興味がある方</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-48 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション05</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><p>・ 〇〇〇〇〇〇〇〇〇を改善したい企業様<br/>・ 〇〇〇〇〇〇〇〇〇にお困りの担当者様<br/>・ 〇〇〇〇〇〇〇〇〇に興味がある方</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-49 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション06</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><p>・ 〇〇〇〇〇〇〇〇〇を改善したい企業様<br/>・ 〇〇〇〇〇〇〇〇〇にお困りの担当者様<br/>・ 〇〇〇〇〇〇〇〇〇に興味がある方</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-50 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション07</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><p>・ 〇〇〇〇〇〇〇〇〇を改善したい企業様<br/>・ 〇〇〇〇〇〇〇〇〇にお困りの担当者様<br/>・ 〇〇〇〇〇〇〇〇〇に興味がある方</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-51 tab_sec js-tab_sec\" style=\"background-color:#fbeff6\"><h2>タブ切り替えセクション08</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p><p>・ 〇〇〇〇〇〇〇〇〇を改善したい企業様<br/>・ 〇〇〇〇〇〇〇〇〇にお困りの担当者様<br/>・ 〇〇〇〇〇〇〇〇〇に興味がある方</p><a href=\"/service\">サービスについて</a></section>\n\n<section class=\"content-element content-52\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-53\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSを適切な位置に記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。</li>\n</ul>\n<ol>\n<li>セクションを新規作成し、クラス名「<strong>tabNav_sec js-tabNav_sec</strong>」の２つを追加。[=タブエリア]</li>\n<li>上記セクション内に新規行（row）を作成し、クラス名「<strong>tabNav_row</strong>」を追加。</li>\n<li>上記行を配置したいタブの数だけ分割し、全てのカラム（col）にクラス名「<strong>js-tabNav_col</strong>」を追加。[=トリガー要素]<br/>\n ※4カラムまでしか分割できないため、5個以上置きたい場合は、2カラムor3カラムにして行ごと複製し、2段で構築するなどして下さい。※<a href=\"#categoryA\">デモ参照</a><br/>\n ※中のテキストは適宜設定してください。</li>\n<li>上記セクションのすぐ下にタブコンテンツ表示用のセクションを新規作成し、クラス名「<strong>tab_sec js-tab_sec</strong>」を追加。<br/>\n ※セクションの背景色は上で用意したタブエリア用のセクションと同じ色に設定してください。<br/>\n ※コンテンツ部分の背景色はカスタムCSSにて、innerに対して指定してください。</li>\n<li>上で用意したタブ切り替え用のボタン（カラム）「<strong>js-tabNav_col</strong>」の並び順とセクション「<strong>tab_sec js-tab_sec</strong>」の配置順が連動しているので、タブ切り替え用のボタン（カラム）の数だけセクションを下に順番に追加していってください。<br/>\n ※<a href=\"#structure\">構造図</a>参照</li>\n<li>SP時はタブ切り替え用のボタンを横スクロールさせています。ボタンが5個以上（行が2段以上）ある場合は「<strong>tabNav_row</strong>」にオプションクラス「<strong>tiered</strong>」を追加することで、SP時にタブが縦に並ぶようになります。</li>\n</ol>\n<p>※デフォルトではSP時タブ部分がスクロールします。2段の場合は縦並びになります。（CSSで適宜変更可能）<br/>\n※後からタブ切り替え用のボタン（カラム）を増やす場合、必ずクラス名「<strong>js-tabNav_col</strong>」を忘れずに追加してください。</p>\n<ul>\n<li>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。</li>\n</ul>\n<h2>注意点</h2><ul>\n<li><strong>innerの背景色はカスタムCSSから変更可能</strong>です。</li>\n<li>タブ切り替え用セクションの間にタブ切り替え以外のセクションを配置しないでください。</li>\n<li>スマホ編集画面機能との併用はできません。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-54\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2024-06-17更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- タブ切り替え（colボタンver.） START v1.0.0-----*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section, section[data-designpart-id]:not(:root:root:root:root)) {<br/>    // タブ切り替え ボタンエリア<br/>    &amp;.tabNav_sec {<br/>      padding-bottom: 0;<br/>      &amp; + .tab_sec {<br/>        display: block; // １つ目のタブコンテンツだけ初期読み込み時に表示<br/>      }<br/>      .inner {<br/>        padding-bottom: 0;<br/>        .row {<br/>          &amp;.tabNav_row {<br/>            display: flex;<br/>            gap: 5px;<br/>            @include breakpoint-pc {<br/>              width: calc(100% + 40px);<br/>              margin-inline: -20px;<br/>            }<br/>            @include breakpoint-pro_s {<br/>              width: auto;<br/>              margin-inline: auto;<br/>            }<br/>            @include breakpoint-ssp {<br/>              overflow: auto; //SP時横にスライド<br/>              padding-bottom: 5px;<br/>            }<br/>            &amp;::-webkit-scrollbar {<br/>              display: none; //スクロールバー非表示<br/>              -ms-overflow-style: none; //Edge対策<br/>              scrollbar-width: none; //Firefox対策<br/>            }<br/>            &amp; + .tabNav_row {<br/>              margin-top: 5px;<br/>              padding-bottom: 5px;<br/>              @include breakpoint-sp {<br/>                margin-top: 0;<br/>              }<br/>            }<br/>            .col {<br/>              cursor: pointer;<br/>              display: block;<br/>              background: #fff;<br/>              padding: 20px;<br/>              @include breakpoint-ssp {<br/>                min-width: 130px;<br/>                padding: 5px 10px;<br/>              }<br/>              &amp;:hover {<br/>                background: #ffc72e;<br/>                .component {<br/>                  &amp;.richtext {<br/>                    color: #fff;<br/>                  }<br/>                }<br/>              }<br/>              // タブ選択時の色指定<br/>              &amp;.is-active {<br/>                background: #ffad2f;<br/>                .component {<br/>                  &amp;.richtext {<br/>                    color: #fff;<br/>                  }<br/>                }<br/>              }<br/>              &amp;:empty {<br/>                cursor: auto;<br/>                pointer-events: none;<br/>                background: none;<br/>              }<br/>              .component {<br/>                &amp;.richtext {<br/>                  margin: 0;<br/>                  @include breakpoint-ssp {<br/>                    font-size: 14px;<br/>                  }<br/>                }<br/>                // 見出しにカーソル当たらない対策（不要であれば削除）<br/>                &amp;.heading {<br/>                  :is(h2, h3, h4, h5) {<br/>                    cursor: inherit;<br/>                  }<br/>                }<br/>              }<br/>            }<br/>            // rowが2個以上〜（SP時スクロールなし・縦並び）<br/>            &amp;.tiered {<br/>              @include breakpoint-ssp {<br/>                flex-wrap: wrap;<br/>              }<br/>              .col {<br/>                @include breakpoint-ssp {<br/>                  min-width: initial;<br/>                  width: 100% !important;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>    // タブ切り替え コンテンツエリア<br/>    &amp;.tab_sec {<br/>      display: none; // 2個目以降のタブコンテンツ初期読み込み時に非表示<br/>      padding-top: 0;<br/>      @include breakpoint-sp {<br/>        padding-bottom: 30px;<br/>      }<br/>      .inner {<br/>        width: calc(100% - 40px);<br/>        background: #fff;<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- タブ切り替え（colボタンver.） END -----*/</section>\n\n<section class=\"content-element content-55\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-07-25更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- タブ切り替え（colボタンver.） 編集画面用 START v1.0.0--*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;.tabNav_sec {<br/>    padding: 20px;<br/>    .inner {<br/>      padding: 20px;<br/>    }<br/>  }<br/>  &amp;.tab_sec {<br/>    display: block !important;<br/>    &amp;:hover {<br/>      outline: 2px solid #000 !important;<br/>      &amp;::before {<br/>        content: \"タブ切り替えセクション用\";<br/>        display: inline-block;<br/>        background-color: #000;<br/>        color: #fff;<br/>        position: absolute;<br/>        top: -34px;<br/>        left: 0;<br/>        padding: 5px 10px;<br/>      }<br/>    }<br/>    .inner {<br/>      padding: 20px;<br/>    }<br/>  }<br/>}<br/>/*-- タブ切り替え（colボタンver.） 編集画面用 END --*/</section>\n\n<section class=\"content-element content-56\"><h2>JavaScript</h2><p><strong>2025-06-20更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* ---------------------------------<br/>    タブ切り替え（colボタンver.）<br/>  --------------------------------- */<br/>  'use strict';<br/><br/>  document.addEventListener('DOMContentLoaded', function () {<br/>    /* ------------- 変数定義 【変更可能】 START ------------- */<br/>    const tabNavSec = document.querySelectorAll('.js-tabNav_sec'); /* タブ切り替えのボタンが入ったセクション */<br/>    const tabNavBtn = document.querySelectorAll('.js-tabNav_col'); /* タブ切り替えのボタン */<br/>    const tabSec = document.querySelectorAll('.js-tab_sec'); /* 切り替え対象のセクション */<br/>    /* ------------- 変数定義 【変更可能】 END ------------- */<br/><br/>    /* data属性を付与する関数 */<br/>    function assignDataAttributes() {<br/>      tabNavSec.forEach((navSec, i) =&gt; {<br/>        const tabNavButtons = navSec.querySelectorAll('.js-tabNav_col');<br/>        const tabSections = document.querySelectorAll('.js-tab_sec:not(.finish)');<br/>        tabNavButtons.forEach((button, m) =&gt; {<br/>          button.setAttribute('data-tab-target', `${i + 1}`);<br/>          button.setAttribute('data-tab-id', `${m + 1}`);<br/>          tabSections[m].setAttribute('data-tab-target', `${i + 1}`);<br/>          tabSections[m].classList.add('finish');<br/>        });<br/>      });<br/>      tabSec.forEach(sec =&gt; sec.classList.remove('finish')); /* 全て処理が終わったら.finishを外す */<br/>    }<br/><br/>    /* 初期設定を行う関数 */<br/>    function initializeTabs() {<br/>      tabNavSec.forEach((navSec, index) =&gt; {<br/>        const targetSec = document.querySelectorAll(`.js-tab_sec[data-tab-target=\"${index + 1}\"]`);<br/>        const targetBtn = document.querySelectorAll(`.js-tabNav_col[data-tab-target=\"${index + 1}\"]`);<br/>        if (targetSec.length &gt; 0) {<br/>          targetSec[0].style.display = 'block';<br/>          targetSec[0].classList.add('is-active');<br/>        }<br/>        if (targetBtn.length &gt; 0) {<br/>          targetBtn[0].classList.add('is-active');<br/>        }<br/>      });<br/>    }<br/><br/>    /* タブ切り替え用のクリックイベントを設定する関数 */<br/>    function setupTabClickEvents() {<br/>      tabNavBtn.forEach(button =&gt; {<br/>        button.addEventListener('click', function () {<br/>          const targetNumber = this.getAttribute('data-tab-target');<br/>          const targetId = this.getAttribute('data-tab-id') - 1;<br/><br/>          const targetSec = document.querySelectorAll(`.js-tab_sec[data-tab-target=\"${targetNumber}\"]`);<br/>          const targetBtn = document.querySelectorAll(`.js-tabNav_col[data-tab-target=\"${targetNumber}\"]`);<br/><br/>          targetSec.forEach(sec =&gt; {<br/>            sec.style.display = 'none';<br/>            sec.classList.remove('is-active');<br/>          });<br/>          targetBtn.forEach(btn =&gt; btn.classList.remove('is-active'));<br/><br/>          this.classList.add('is-active');<br/>          if (targetSec[targetId]) {<br/>            targetSec[targetId].style.display = 'block';<br/>            targetSec[targetId].classList.add('is-active');<br/>          }<br/>        });<br/>      });<br/>    }<br/><br/>    /* 初期化処理 */<br/>    assignDataAttributes();<br/>    initializeTabs();<br/>    setupTabClickEvents();<br/>  });<br/>  /* ---------------------------------<br/>    タブ切り替え（colボタンver.） END<br/>  --------------------------------- */<br/>&lt;/script&gt;</section>\n\n<section class=\"content-element content-57\"></section>"
  },
  {
    "title": "カレントナビゲーションハイライト表示",
    "url": "https://js-part.hmup.jp/js/current_page_highlight",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>カレントナビゲーションハイライト表示</h2></section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>-</p>\n</td>\n<td>\n<ul>\n<li>カレントページのアクセントのスタイル<br/>\n    （該当ページと親階層につくアクセント）</li>\n</ul>\n</td>\n<td>-</td>\n<td>✕</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><p>現在開いているページと同じグローバルナビゲーションのリンクにアクセントが付きます。<br/>\n（該当ページ：<strong>オレンジカラーのスタイル、</strong>親階層には<strong>オレンジの下線</strong>）※詳細は<a href=\"#structure\">構造図</a>参照</p>\n<a href=\"#\">ナビに注目</a></section>\n\n<section class=\"content-element content-4\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n<ul><li><a href=\"https://ferret-one.akamaized.net/images/64c0adcb2f9d7d036c07ccae/large.png?utime=1690349003\"></a></li><li><a href=\"https://ferret-one.akamaized.net/images/64c0adcb08ce0301d8a2ea3b/large.png?utime=1690349003\"></a></li></ul></section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>\n<p>CSSをカスタムCSSに記述。</p>\n</li>\n<li>JavaScriptを<strong>共通フッターの一番下</strong>に配置。</li>\n<li>\n<p>JavaScriptにて自動で以下のクラスが付与されます。</p>\n</li>\n</ul>\n<ol>\n<li>現在開いているページにはクラス名「<strong>current</strong>」が付与されます。</li>\n<li>現在開いているページの親ページ（第2階層目）にはクラス名「<strong>currentParent</strong>」が付与されます。</li>\n<li>カレントページのスタイルはカスタムCSSで適宜調整してください。</li>\n</ol>\n</section>\n\n<section class=\"content-element content-6\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-09-25更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- カレントナビゲーションハイライト表示 START v1.0.0-----*/<br/>.navi-002-01.navi_base_custom {<br/>  header#navigations {<br/>    .inner {<br/>      .main-menu {<br/>        ul.clearfix {<br/>          li {<br/>            // 該当ページの親（第2階層目）につくアクセント<br/>            &amp;.currentParent {<br/>              @include breakpoint-pc {<br/>                border-bottom: 2px solid #ffad2f !important;<br/>              }<br/>            }<br/>            // 該当ページにつくアクセント<br/>            &amp;.current {<br/>              &amp;::after {<br/>                color: #ffad2f !important;<br/>              }<br/>              &gt; a {<br/>                color: #ffad2f !important;<br/>              }<br/>              &amp;:hover {<br/>                &amp; &gt; a {<br/>                  color: #fff !important;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- カレントナビゲーションハイライト表示 END -----*/</section>\n\n<section class=\"content-element content-7\"><h2>JavaScript</h2><p><strong>2025-06-20更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* ---------------------------------<br/>    カレントナビゲーションハイライト表示<br/>  --------------------------------- */<br/>  'use strict';<br/><br/>  document.addEventListener('DOMContentLoaded', function () {<br/>    const gnav = document.querySelectorAll('.main-menu a');<br/><br/>    gnav.forEach(function (link) {<br/>      /* gnavのパスと現在のページのパスが一致したらクラスを付与 */<br/>      if (link.pathname === location.pathname) {<br/>        link.parentElement.classList.add('current');<br/>        if (!link.closest(\"li[class^='level-01']\").classList.contains('current')) {<br/>          /* グロナビの第2階層にクラスを付与 */<br/>          link.closest(\"li[class^='level-01']\").classList.add('currentParent');<br/>        }<br/>      }<br/>      /* TOPページかどうかを判定してカレントクラスを付与 */<br/>      if (window.location.pathname === \"/\" &amp;&amp; link.pathname === \"/index\") {<br/>        link.parentElement.classList.add('current');<br/>      }<br/>    });<br/>  });<br/>  /* ---------------------------------<br/>    カレントナビゲーションハイライト表示 END<br/>  --------------------------------- */<br/>&lt;/script&gt;<br/><br/></section>\n\n<section class=\"content-element content-8\"></section>"
  },
  {
    "title": "カレント表示（リンクテキスト）",
    "url": "https://js-part.hmup.jp/js/current-link",
    "html": "<section class=\"content-element content-1\" style=\"padding:0px 0px 0px 0px\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>同一ページに複数設置</th>\n<th>ページ複製・クリップボード<br/>\n   使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<ul>\n<li>リッチテキスト</li>\n<li>リンクリスト</li>\n</ul>\n<p>※リンク追加のみ</p>\n</td>\n<td>\n<ul>\n<li>カレント表示対象のリンクにつくアクセントスタイル</li>\n</ul>\n</td>\n<td>〇</td>\n<td>〇<br/>\n※サイドバーの中身を持っていく形です。</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>※サイドバーは<strong>834px以下</strong>で縦並びになります。<br/>\n<br/>\n<strong>◆操作について</strong>\n<ul>\n<li>[＃ページの一番上に遷移]に設定すると、どのページでもアクセントがついてしまうので、必ずページを指定してください。</li>\n<li>リッチテキストは操作上崩れやすいので、コピペでリスト追加するのはおすすめしません。できるだけ一つ一つ設定するようにしてください。<br/>\n<a href=\"#structure\">リストの構造・編集方法はこちら▼</a></li>\n<li>編集画面では操作性を考慮し、デザインを反映させていません。公開画面と見た目が異なるのでご注意下さい。</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-2\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><p>左サイドバー内のリストの挙動をご参照ください。</p>\n<p>現在開いているページと同じURLのリンクテキストに、<br/>\nアクセント（デフォルト：オレンジの背景色に白文字カラー）が付きます。</p>\n</section>\n\n<section class=\"content-element content-3\"><h2>構造図・編集方法</h2><p>リッチテキストパーツ使用の場合の編集方法になります。</p>\n</section>\n\n<section class=\"content-element content-4\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>\n<p>CSSをカスタムCSSに記述。</p>\n</li>\n<li>\n<p>編集画面用CSSを適切な位置に記述。</p>\n</li>\n<li>JavaScriptを<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>共通パーツを新規作成し、リッチテキストパーツを配置。<br/>\n or<br/>\n 共通サイドバー等でリンクリストパーツを配置。<br/>\n※リッチテキストパーツは操作性が非常に悪いので、共通パーツで作成する必要がなさそうな場合はリンクリストを推奨します。</li>\n<li>上記パーツに、クラス名「<strong>js-current_list current_list</strong>」を追加。</li>\n<li>現在開いているページと同じURLのリンクテキストに、クラス名「<strong>current</strong>」が自動で付与されます。</li>\n<li>カレント表示時のアクセントスタイルはカスタムCSSで適宜調整してください。</li>\n</ol>\n<h2>注意点</h2><ul>\n<li>リンクを設定しないとインデントがつきませんのでご注意下さい。（デザインの構造上）</li>\n<li>[＃ページの一番上に遷移]に設定すると、どのページでもアクセントがついてしまうので、必ずページを指定してください。</li>\n<li>リッチテキストは操作上崩れやすいので、コピペでリスト追加するのはおすすめしません。<br/>\n できるだけ一つ一つ設定するようにしてください。</li>\n<li>編集画面では操作性を考慮し、デザインを反映させていません。公開画面と見た目が異なるのでご注意下さい。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-5\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2025-07-02更新（v1.1.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- カレント表示（リンクテキスト） v1.0.0-----*/<br/>.theme-fo-base {<br/>  :is(<br/>    .main-visual,<br/>    .wrapper .contents,<br/>    .wrapper .side,<br/>    .foot<br/>  ) {<br/>    // サイドバー等でも使えるようにネスト略<br/>    .component:not(:root:root)  {<br/>      &amp;:is(<br/>        .richtext,/*使用しないパーツは削除*/<br/>        .list/*使用しないパーツは削除*/<br/>      ) {<br/>        &amp;.current_list {<br/>          ul {<br/>            list-style-type: none;<br/>            margin: 0;<br/>            li {<br/>              a {<br/>                display: block;<br/>                text-decoration: none;<br/>                padding: 5px 30px;<br/>                &amp;:hover {<br/>                  background-color: #ffc72e;<br/>                  color: #fff;<br/>                  opacity: 1;<br/>                }<br/>                // 該当ページリンクにつくアクセント<br/>                &amp;.current {<br/>                  background-color: #ffad2f;<br/>                  color: #fff;<br/>                }<br/>              }<br/>              ul {<br/>                li {<br/>                  a {<br/>                    padding-left: 50px;<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- カレント表示（リンクテキスト） END -----*/</section>\n\n<section class=\"content-element content-6\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-09-13更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- カレント表示（リンクテキスト）編集画面用 v1.0.0-----*/<br/>:is(<br/>  .main-visual,<br/>  .wrapper .contents,<br/>  .wrapper .side,<br/>  .foot<br/>) {<br/>  .component {<br/>    &amp;.richtext/*リッチテキスト使用の場合、操作性が悪くなるので対策*/{<br/>      &amp;.current_list {<br/>        ul {<br/>          list-style-type: disc;<br/>          margin-left: 40px;<br/>          li {<br/>            a {<br/>              display: initial;<br/>              text-decoration: underline;<br/>              padding: 0;<br/>              &amp;:hover {<br/>                background-color: initial;<br/>                color: initial;<br/>                opacity: initial;<br/>              }<br/>            }<br/>            ul {<br/>              li {<br/>                a {<br/>                  padding-left: 0;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- カレント表示（リンクテキスト）編集画面用 END -----*/</section>\n\n<section class=\"content-element content-7\"><h2>JavaScript</h2><p><strong>2025-05-30更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* -------------------------------<br/>   カレント表示（リンクテキスト） v1.0.0<br/>  ------------------------------- */<br/>  'use strict';<br/><br/>  document.addEventListener('DOMContentLoaded', function () {<br/><br/>    const curretList = document.querySelectorAll('.js-current_list a'); /* カレント表示対象とするaタグ一覧を取得 */<br/><br/>    curretList.forEach(function (link) {<br/>      /* aタグのパスと現在のページのパスが一致したらクラスを付与 */<br/>      if (link.pathname === location.pathname) {<br/>        link.classList.add('current');<br/>      }<br/><br/>      /* TOPページかどうかを判定してカレント表示用クラスを付与 */<br/>      if (window.location.pathname === \"/\" &amp;&amp; link.pathname === \"/index\") {<br/>        link.classList.add('current');<br/>      }<br/>    });<br/><br/>  });<br/>  /* -------------------------------<br/>   カレント表示（リンクテキスト） END<br/>  ------------------------------- */<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-8\"></section>"
  },
  {
    "title": "スクロールしたら追従セクションを表示",
    "url": "https://js-part.hmup.jp/js/fixed-section",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>スクロールしたら追従セクションを表示<br/></h2><p>700pxスクロールしたら表示、特定のセクションに到達したら非表示</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>セクションに入れられる範囲<br/>\n   のパーツは基本OK</p>\n</td>\n<td>\n<ul>\n<li>追従セクション内のレイアウトはデザインに応じて変更可能（カラムは4つまで）※1</li>\n<li>追従セクションを非表示にするタイミング（セクションで指定）※2</li>\n<li>表示・非表示時のフェードアニメーションの有無（CSS）</li>\n</ul>\n<p> </p>\n<ul>\n</ul>\n<p><strong>JS変更箇所</strong></p>\n<ul>\n<li>表示させたい位置を変更可能※①<br/>\n    変数名 : <strong>scroll_open</strong></li>\n</ul>\n</td>\n<td>×</td>\n<td>〇</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：カラム数や中に入れるパーツが多いと、レスポンシブ調整で崩れる可能性が高いです。~3カラムくらいに収める事を推奨します。<br/>\n   ※2：特定のクラス「<strong>js-stop_sec</strong>」を付与したセクションに到達すると再び非表示になります。非表示にする必要がない場合、このクラスをつけなければ700pxスクロール後は表示されたままになります。<br/>\n<br/>\n<strong>【JS】</strong></p>\n<p>※①デフォルトは700pxスクロールしたら表示されます。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><p>700pxスクロールしたら追従セクションが表示され、<br/>\n<a href=\"#stop\">クラス名「js-stop_sec」が付与されたセクション</a>に到達したら非表示になります。</p>\n</section>\n\n<section class=\"content-element content-4 js-fixed_sec fixed_sec\"><p><strong>ご不明な点はお気軽に<br/>お問い合わせください</strong></p><h3>テキストが入ります。</h3><p><strong>ご不明な点はお気軽に<br/>お問い合わせください</strong></p><a href=\"#\">資料ダウンロード</a><p><strong>ご不明な点はお気軽に<br/>お問い合わせください</strong></p><a href=\"#\">お問い合わせ</a></section>\n\n<section class=\"content-element content-5\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-6\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>\n<p>CSSをカスタムCSSに記述。</p>\n</li>\n<li>\n<p>編集画面用CSSをカスタムCSSに記述。</p>\n</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>追従用セクションを新規作成し、クラス名「<strong>js-fixed_sec fixed_sec</strong>」を追加。デザインに合わせてパーツを配置します。<br/>\n ※必要に応じて、デフォルトで用意しているスタイル調整用のクラス名「<strong>fixed_btn_row</strong>」を追加。<br/>\n ※複数ページで同パーツを配置する場合は、共通パーツ作成をおすすめします。（別途CSS調整は各自でお願いします）</li>\n<li>追従セクションを非表示にしたいタイミングに置くセクションにクラス名「<strong>js-stop_sec</strong>」を追加。</li>\n<li>スタイルやアニメーション等は適宜カスタムCSSで変更してください。</li>\n</ol>\n<ul>\n<li>\n<p>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。<br/>\n rowは新規で作成した方がCSSの影響を受けないので安心かと思います。</p>\n</li>\n</ul>\n</section>\n\n<section class=\"content-element content-7\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-09-08更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- スクロールしたら追従セクションを表示 START v1.0.0--*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>    // JSでコントロールするスタイル<br/>    &amp;.js-fixed_sec {<br/>      //非表示（デフォルト）<br/>      opacity: 0;<br/>      pointer-events: none;<br/>      transition: .2s all;<br/>      //表示（300pxスクロール後）<br/>      &amp;.-visible {<br/>        opacity: 1;<br/>        pointer-events: auto;<br/>      }<br/>    }<br/>    // セクションのデザインを当てるスタイル<br/>    &amp;.fixed_sec {<br/>      position: fixed;<br/>      right: 0;<br/>      left: 0;<br/>      bottom: 0;<br/>      z-index: 1000;<br/>      background-color: rgba(243,243,243,.8);<br/>      margin: 0 auto;<br/>      padding: 0;<br/>      .inner {<br/>        @include breakpoint-sp {<br/>          padding: 0 15px;<br/>        }<br/>        .row {<br/>          &amp;.fixed_btn_row {<br/>            @include breakpoint-sp {<br/>              display: flex;<br/>              flex-wrap: wrap;<br/>            }<br/>            .col {<br/>              padding-bottom: 0;<br/>              &amp;:not(:first-child) {<br/>                @include breakpoint-sp {<br/>                  width: 50% !important;<br/>                }<br/>              }<br/>              .component {<br/>                &amp;.richtext {<br/>                  @include breakpoint-sp {<br/>                    font-size: 12px;<br/>                  }<br/>                }<br/>                &amp;.button {<br/>                  .button-cont {<br/>                    a {<br/>                      @include breakpoint-pc {<br/>                        width: 100%;<br/>                        min-width: initial;<br/>                        max-width: 280px;<br/>                      }<br/>                      @include breakpoint-ssp {<br/>                        font-size: 12px;<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- スクロールしたら追従セクションを表示 END --*/<br/></section>\n\n<section class=\"content-element content-8\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2024-09-17更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- スクロールしたら追従セクションを表示 編集画面用 START v1.0.0--*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;.js-fixed_sec {<br/>    opacity: 1;<br/>    pointer-events: auto;<br/>    transition: none;<br/>  }<br/>  &amp;.fixed_sec {<br/>    position: relative;<br/>    right: initial;<br/>    left: initial;<br/>    bottom: initial;<br/>    z-index: initial;<br/>    border: 1px solid red;<br/>    &amp;::before {<br/>      content: \"画面下に追従するセクション\";<br/>      position: absolute;<br/>      color: #fff;<br/>      background: red;<br/>      right: 0;<br/>      top: 0;<br/>      padding: 0 5px;<br/>    }<br/>  }<br/>}<br/>/*-- スクロールしたら追従セクションを表示 編集画面用 END --*/<br/></section>\n\n<section class=\"content-element content-9\"><h2>JavaScript</h2><p><strong>2025-05-30更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* -------------------------------<br/>    スクロールしたら追従セクションを表示 v1.0.0<br/>  ------------------------------- */<br/>  'use strict';<br/><br/>  document.addEventListener('DOMContentLoaded', function () {<br/><br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    const scroll_open = 700; /* 表示させたい位置を変更可能（px単位） */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    const fixedSec = document.querySelector('.js-fixed_sec'); /* スクロール追従対象（セクション） */<br/>    const stopSec = document.querySelector('.js-stop_sec'); /* 非表示になるタイミングを指定（セクション） */<br/><br/>    if (fixedSec) {<br/>      /* スクロールするたびに実行 */<br/>      window.addEventListener('scroll', function () {<br/>        let scroll = window.pageYOffset; /* windowのスクロール位置を取得 */<br/><br/>        /* 700pxスクロールしたら表示 */<br/>        if (scroll &gt; scroll_open) {<br/>          fixedSec.classList.add('-visible'); /* CSS付与・アニメーション付与などに使用 */<br/>        } else {<br/>          /* 700pxに達してない場合は非表示 */<br/>          fixedSec.classList.remove('-visible');<br/>        }<br/><br/>        /* 非表示タイミングに指定したセクションがあった場合、スクロール追従対象セクションの下部分が該当セクションに達したら非表示 */<br/>        if (stopSec &amp;&amp; fixedSec.getBoundingClientRect().bottom &gt; stopSec.getBoundingClientRect().top) {<br/>          fixedSec.classList.remove('-visible');<br/>        }<br/>      });<br/>    }<br/>  });<br/>  /* -------------------------------<br/>    スクロールしたら追従セクションを表示 END<br/>  ------------------------------- */<br/>&lt;/script&gt;</section>\n\n<section class=\"content-element content-10 js-stop_sec\" style=\"background-color:#fcdddd\"><h2>※ここに到達すると追従カラムが非表示になります<br/>セクション「js-stop_sec」</h2></section>"
  },
  {
    "title": "スクロールしたらページTOPボタンを表示",
    "url": "https://js-part.hmup.jp/js/pagetop",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>スクロールしたらページTOPボタンを表示</h2><p>300pxスクロールしたら表示、特定のセクションに到達したら非表示</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>変更NG</th>\n<th>複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>×</p>\n</td>\n<td>\n<ul>\n<li>ページTOPアイコンの画像</li>\n<li>ページTOPアイコンを非表示にする<br/>\n    タイミング（セクションで指定）※1</li>\n<li>表示・非表示時のフェードアニメーションの有無（CSS）</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>スクロール量の指定※300px固定</li>\n</ul>\n</td>\n<td>×</td>\n<td>〇</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：特定のクラス「<strong>js-stop_sec</strong>」を付与したセクションに到達すると再び非表示になります。非表示にする必要がない場合、このクラスをつけなければ300pxスクロール後は表示されたままになります。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><p>右下のページTOPボタンの挙動をご参照ください。<br/>\n<br/>\n300pxスクロールしたらページTOPアイコンが表示され、<br/>\nCTAセクション（デフォルト設定）に到達したら非表示になります。</p>\n</section>\n\n<section class=\"content-element content-4\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>\n<p>CSSをカスタムCSSに記述（共通パーツで使用する場合はCSSの構造を書き換え必須）。</p>\n</li>\n<li>\n<p>編集画面用CSSをカスタムCSSに記述（共通パーツで使用する場合はCSSの構造を書き換え必須）。</p>\n</li>\n<li>JavaScriptを<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>通常通り、ページTOPアイコン用の画像パーツをフッターに配置します。</li>\n<li>画像パーツを配置した行（row）にクラス名「<strong>js-page_top_row</strong>」を追加。<br/>\n ※必要に応じて、スタイル調整用のクラス名「<strong>page_top_row</strong>」を追加。</li>\n<li>ページTOPアイコンを非表示にしたいタイミングに置くセクションにクラス名「<strong>js-stop_sec</strong>」を追加。</li>\n<li>アニメーションは適宜カスタムCSSで変更してください。</li>\n</ol>\n<ul>\n<li>\n<p>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。</p>\n</li>\n</ul>\n</section>\n\n<section class=\"content-element content-5\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。<br/>\n※共通パーツで使用する場合はCSSの構造を共通パーツ用に書き換えてください。</p>\n<p><strong>2023-07-26更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- スクロールしたらページTOPボタンを表示 START v1.0.0--*/<br/>.row {<br/>  &amp;.js-page_top_row {<br/>    .col {<br/>      .component {<br/>        &amp;.image {<br/>          //非表示（デフォルト）<br/>          opacity: 0;<br/>          pointer-events: none;<br/>          transition: all cubic-bezier(.215,.61,.355,1) .6s;<br/>          //表示（300pxスクロール後）<br/>          &amp;.-visible {<br/>            opacity: 1;<br/>            pointer-events: auto;<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- スクロールしたらページTOPボタンを表示 END --*/<br/></section>\n\n<section class=\"content-element content-6\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※共通パーツで使用する場合はCSSの構造を共通パーツ用に書き換えてください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-07-26更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- スクロールしたらページTOPボタンを表示 編集画面用 START v1.0.0--*/<br/>.row {<br/>  &amp;.js-page_top_row {<br/>    .col {<br/>      .component {<br/>        &amp;.image {<br/>          opacity: 1;<br/>          pointer-events: auto;<br/>          transition: none;<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- スクロールしたらページTOPボタンを表示 編集画面用 END --*/<br/></section>\n\n<section class=\"content-element content-7\"><h2>JavaScript</h2><p><strong>2025-05-30更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* -------------------------------------<br/>    スクロールしたらページTOPボタンを表示 v1.0.0<br/>  ------------------------------------- */<br/>  'use strict';<br/><br/>  document.addEventListener('DOMContentLoaded', function () {<br/><br/>    const pageTop = document.querySelector('.js-page_top_row .component.image'); /* ページトップアイコン */<br/>    const stopSec = document.querySelector('.js-stop_sec'); /* 非表示になるタイミングを指定（セクション） */<br/><br/>    if (pageTop) {<br/>      /* スクロールするたびに実行 */<br/>      window.addEventListener('scroll', function () {<br/>        let scroll = window.pageYOffset; /* windowのスクロール位置を取得 */<br/><br/>        /* 300pxスクロールしたら表示 */<br/>        if (scroll &gt; 300) {<br/>          pageTop.classList.add('-visible'); /* CSS付与・アニメーション付与などに使用 */<br/>        } else {<br/>          /* 300pxに達してない場合は非表示 */<br/>          pageTop.classList.remove('-visible');<br/>        }<br/><br/>        /* 非表示タイミングに指定したセクションがあった場合、ページトップアイコンの下部分が該当セクションに達したら非表示 */<br/>        if (stopSec &amp;&amp; pageTop.getBoundingClientRect().bottom &gt; stopSec.getBoundingClientRect().top) {<br/>          pageTop.classList.remove('-visible');<br/>        }<br/>      });<br/>    }<br/>  });<br/>  /* -------------------------------------<br/>    スクロールしたらページTOPボタンを表示 END<br/>  ------------------------------------- */<br/>&lt;/script&gt;</section>\n\n<section class=\"content-element content-8 js-stop_sec\" data-designpart=\"section-two-cta2\" data-designpart-id=\"642f669ce4dc09621d945b1a\" style=\"background-image:url(https://ferret-one.akamaized.net/images/61ee55bfbc5e710001487817/original.png?utime=1643009471);background-size:cover;background-position:center\"><h2>※ここに到達するとpagetopが非表示になります<br/>セクション「js-stop_sec」</h2><p><strong>ご不明な点はお気軽に<br/>\nお問い合わせください</strong></p>\n<a href=\"#\">お問い合わせ</a><p><strong>●●のお役立ち資料は<br/>\nこちらから</strong></p>\n<a href=\"#\">資料ダウンロード</a><p><strong>お電話でのお問い合わせはこちら</strong></p>\n<a href=\"#\">03-1234-5678</a><p><strong>平日 00:00~00:00</strong></p>\n</section>\n\n<section class=\"content-element content-9\"> </section>"
  },
  {
    "title": "クリックでリンクリストの表示",
    "url": "https://js-part.hmup.jp/js/click-open-link",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>クリックでリンクリストの表示</h2><p>言語切り替えボタン等を実装する際に使用</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>同一ページに<br/>\n   複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>×</p>\n</td>\n<td>\n<ul>\n<li>表示位置</li>\n<li>テキストカラー</li>\n<li>背景カラー</li>\n<li>フォントスタイル</li>\n<li>余白</li>\n</ul>\n</td>\n<td>×</td>\n<td>〇</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><p>※右下の【デモ】ボタンをクリックして、挙動をご参照ください。</p>\n<p><strong>【デモ】</strong></p><ul><li><a href=\"/index\">日本語</a></li><li><a href=\"/coverage\">English</a></li></ul></section>\n\n<section class=\"content-element content-4\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSを適切な位置に記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。</li>\n</ul>\n<ol>\n<li>行（row）を新規作成し、クラス名「<strong>js-elementOpen-trigger</strong>」を追加。</li>\n<li>上記の中にリッチテキストパーツとリンクリストパーツを<strong>1つずつ</strong>配置。</li>\n<li>リッチテキストパーツにクラス名「<strong>trigger_text</strong>」を追加。※トリガーとなるボタンになります</li>\n<li>リンクリストには、クリック後に表示されるものが入ります。用途に合わせてリンク設定をしてください。</li>\n<li>デザインに合わせてカスタムCSSは適宜変更してください。</li>\n</ol>\n<h2>注意点</h2><ul>\n<li>共通パーツでは使用できません。</li>\n<li>編集画面では操作性考慮するために、幅100%で表示しています。必要あれば適宜調整＆引き継ぎしてください。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-6\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-07-26更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- クリックでリンクリストの表示 START v1.0.0-----*/<br/>.row {<br/>  &amp;.js-elementOpen-trigger {<br/>    position: fixed;<br/>    bottom: 70px;<br/>    right: 10px;<br/>    z-index: 1000;<br/>    width: max-content;<br/>    background: #ffad2f;<br/>    border-radius: 5px;<br/>    cursor: pointer;<br/>    &amp;.is-open {<br/>      cursor: auto;<br/>      .col {<br/>        .component {<br/>          &amp;.list {<br/>            width: auto;<br/>            height: auto;<br/>            opacity: 1;<br/>            pointer-events: auto;<br/>            transition: all .2s cubic-bezier(.02,.42,.24,.74);<br/>          }<br/>        }<br/>      }<br/>    }<br/>    .col {<br/>      padding: 10px;<br/>      .component {<br/>        &amp;.richtext {<br/>          &amp;.trigger_text {<br/>            margin: 0;<br/>            padding: 10px;<br/>          }<br/>        }<br/>        &amp;.list {<br/>          width: 0;<br/>          height: 0;<br/>          opacity: 0;<br/>          margin: 0;<br/>          pointer-events: none;<br/>          transition: none;<br/>          ul {<br/>            li {<br/>              font-size: inherit;<br/>              a {<br/>                &amp;:hover {<br/>                  background: inherit;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- クリックでリンクリストの表示 END -----*/</section>\n\n<section class=\"content-element content-7\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-03-27更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- クリックでリンクリストの表示 編集画面用 START v1.0.0--*/<br/>.row {<br/>  &amp;.js-elementOpen-trigger {<br/>    position: relative;<br/>    top: auto;<br/>    bottom: auto;<br/>    right: auto;<br/>    width: 100%;<br/>    margin-top: 30px;<br/>    .col {<br/>      .component {<br/>        &amp;.list {<br/>          width: auto;<br/>          height: auto;<br/>          opacity: 1;<br/>          pointer-events: auto;<br/>          ul {<br/>            li {<br/>              a {<br/>                &amp;:hover {<br/>                  opacity: 1;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- クリックでリンクリストの表示 編集画面用 END --*/</section>\n\n<section class=\"content-element content-9\"><h2>JavaScript</h2><p><strong>2025-05-30更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* ----------------------------<br/>    クリックでリンクリストの表示 v1.0.0<br/>  ---------------------------- */<br/>  'use strict';<br/><br/>  document.addEventListener('DOMContentLoaded', function() {<br/>    const trigger = document.querySelector(\".js-elementOpen-trigger\");<br/>    const className = \"is-open\";<br/><br/>    /* 閉じる処理 */<br/>    function elementClose() {<br/>      /* 要素が表示されていたら非表示 */<br/>      if (trigger.classList.contains(className)) {<br/>        trigger.classList.remove(className);<br/>      }<br/>    }<br/><br/>    /* トリガーをクリックした時の処理 */<br/>    trigger.addEventListener(\"click\", function() {<br/>      trigger.classList.add(className);<br/>    });<br/><br/>    /* トリガー以外をクリックした時の処理 */<br/>    document.addEventListener(\"click\", function(e) {<br/>      if (!e.target.closest(\".js-elementOpen-trigger\")) {<br/>        elementClose();<br/>      }<br/>    });<br/><br/>    /* ページ内リンクをクリックした時 */<br/>    document.querySelectorAll(\"a[href^='#']\").forEach(function(link) {<br/>      link.addEventListener(\"click\", function() {<br/>        elementClose();<br/>      });<br/>    });<br/>  });<br/>  /* ----------------------------<br/>    クリックでリンクリストの表示 END<br/>  ---------------------------- */<br/>&lt;/script&gt;</section>\n\n<section class=\"content-element content-10\"></section>"
  },
  {
    "title": "ブログのパンくず名称変更",
    "url": "https://js-part.hmup.jp/js/breadcrumbs-change",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>ブログのパンくず名称変更</h2>※初期設定では「全ての記事」を「ブログ【変更後】」という名称に変更しています。<br/>任意の文言に変更可能です。<br/><a href=\"/blog\">実際のページで確認</a></section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>\n<ul>\n<li>ブログページのパンくずの文言（※JS側で変更）</li>\n</ul>\n</td>\n<td>-</td>\n<td>✕</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#f5f5f5\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>\n<p>編集画面用CSSを適切な位置に記述。</p>\n</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。</li>\n</ul>\n<ol>\n<li>ブログ編集ページのメンビジにクラス名「<strong>js-breadcrumbs</strong>」を追加。</li>\n<li>初期設定では「<strong>全ての記事</strong>」を「<strong>ブログ【変更後】</strong>」という名称に変更しています。<br/>\n JavaScript内で「<strong>任意の文言に変換 </strong>」と検索し、該当箇所を全て任意の文言に変更してください。</li>\n</ol>\n<ul><li><a href=\"https://ferret-one.akamaized.net/images/64c1fc78068ff7054bafde01/large.png?utime=1690434680\"></a></li></ul></section>\n\n<section class=\"content-element content-4\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-09-06更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- ブログのパンくず名称変更 START v1.0.0-----*/<br/>.theme-fo-base {<br/>  .js-breadcrumbs {<br/>    &amp; + .breadcrumbs {<br/>      visibility: hidden;//ちらつき防止<br/>    }<br/>  }<br/>}<br/>/*----- ブログのパンくず名称変更 END -----*/</section>\n\n<section class=\"content-element content-5\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-09-06更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- ブログのパンくず名称変更 編集画面用 START v1.0.0--*/<br/>.theme-fo-base {<br/>  .js-breadcrumbs {<br/>    &amp; + .breadcrumbs {<br/>      visibility: initial;//ちらつき防止解除<br/>    }<br/>  }<br/>}<br/>/*-- ブログのパンくず名称変更 編集画面用 END --*/</section>\n\n<section class=\"content-element content-6\"><h2>JavaScript</h2><p><strong>2025-05-30更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* -------------------------------------<br/>    ブログのパンくず名称変更 v1.0.0<br/>  ------------------------------------- */<br/>  'use strict';<br/><br/>  document.addEventListener('DOMContentLoaded', function() {<br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    const breadcrumbName = \"ブログ【変更後】\";<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    document.querySelectorAll('.js-breadcrumbs + .breadcrumbs ul li').forEach(function(el) {<br/>      if(el.textContent.trim() === '全ての記事') {<br/>        let breadcrumb = el.querySelector('a');<br/>        /* リンクがついている場合 */<br/>        if(breadcrumb) {<br/>          breadcrumb.textContent = breadcrumbName;/* 任意の文言に変換 */<br/>        } else {<br/>          /* リンクがついていない場合 */<br/>          el.querySelector('span').textContent = breadcrumbName;/* 任意の文言に変換 */<br/>        }<br/>      }<br/>      /* ちらつき防止 */<br/>      document.querySelector('.js-breadcrumbs + .breadcrumbs').style.visibility = 'visible';<br/>    });<br/>  });<br/>  /* -------------------------------------<br/>    ブログのパンくず名称変更 END<br/>  ------------------------------------- */<br/>&lt;/script&gt;<br/></section>"
  },
  {
    "title": "検索結果画面でメンビジとサイドバー非表示",
    "url": "https://js-part.hmup.jp/js/search-hidden",
    "html": "<section class=\"content-element content-1\">\n<table>\n<thead>\n<tr>\n<th>表示可能<br/>\n   パーツ</th>\n<th>変更可能</th>\n<th>変更NG</th>\n<th>複数設置</th>\n<th>ページ複製・クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<ul>\n<li>サムネ画像</li>\n<li>TD</li>\n<li>公開日時</li>\n<li>検索ボタン</li>\n</ul>\n<p>〜の表示・非表示</p>\n</td>\n<td>\n<ul>\n<li>サムネ画像サイズ</li>\n<li>TDのフォントサイズ</li>\n</ul>\n<p>※CSSで調整可</p>\n</td>\n<td>\n<ul>\n<li>検索結果画面の<br/>\n    レイアウト※2</li>\n</ul>\n</td>\n<td>-</td>\n<td>\n<p>-</p>\n<p>※自動で全ての検索結果画面に適用されます</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：<a href=\"#structure\">構造図参照</a><br/>\n   ※2：検索結果の内容によって、ページのレイアウトを変更することはできません。<br/>\n   （メンビジとパンくずとサイドバーが非表示になるレイアウトのみになります）</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-2\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n<p>検索結果画面で表示される記事リスト部分のレイアウトについては、<br/>\n編集画面から検索パーツの機能にて設定・変更可能です。</p>\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>JavaScriptを共通フッターの<strong>一番下</strong>に配置。</li>\n<li>クラスの付与は必要ありません。<br/>\n それぞれメンビジ・パンくずリスト・サイドバーが自動で非表示になります。</li>\n</ul>\n<ol>\n<li>検索結果画面で表示される記事リスト部分のデザインを変更する場合は、元からカスタムCSSで準備されている「//検索結果画面」を参考に、「.<strong>search</strong>」から紐づけた記事リストに対してスタイルを当ててください。</li>\n</ol>\n</section>\n\n<section class=\"content-element content-4\"><h2>JavaScript</h2><p><strong>2025-05-29更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* ------------------------------------<br/>    検索結果画面でメンビジとサイドバー非表示 v1.0.0<br/>  ------------------------------------ */<br/>  'use strict';<br/><br/>  document.addEventListener('DOMContentLoaded', function() {<br/>    const locationPath = location.pathname;<br/>    /* 検索結果画面でメンビジとサイドバー非表示 */<br/>    if(locationPath === '/__/search') {<br/>      document.querySelector('.main-visual').style.display = 'none'; /* メンビジ */<br/>      document.querySelector('.breadcrumbs').style.display = 'none'; /* パンくず */<br/>      document.querySelector('.side').style.display = 'none'; /* サイドバー */<br/>    }<br/>  });<br/>  /* ------------------------------------<br/>    検索結果画面でメンビジとサイドバー非表示 END<br/>  ------------------------------------ */<br/>&lt;/script&gt;<br/></section>"
  },
  {
    "title": "パンくずの移動",
    "url": "https://js-part.hmup.jp/js/breadcrumbs-move",
    "html": "<section class=\"content-element content-1\"><p>※React18へのアプデの際に崩れの可能性あり</p>\n\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-</td>\n<td>\n<ul>\n<li>移動場所（好きな場所に配置可能）</li>\n</ul>\n</td>\n<td>×</td>\n<td>\n<p>✕</p>\n<p>※パンくず移動させたいページにて<br/>\n   クラス付与の対応する形になります。</p>\n</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※複数ページで使用する場合、クラス付与のために1ページずつ編集画面に入る必要がありますので、工数は【＋（ページ数*2分）】で算出いただければと思います。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-2\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#f5f5f5\"><h2>設定方法</h2><ul>\n<li>\n<p>編集画面用CSSを適切な位置に記述。</p>\n</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n</ul>\n<ol>\n<li>「パンくずを移動させたい場所」のすぐ下にあるメンビジ（orセクション）にクラス名「<strong>js-breadcrumbsMove</strong>」を追加。<br/>\n ※このクラスが付与されたページのみパンくずの移動が適用されます。<br/>\n ※初期設定では、パンくずをメンビジの上に移動させているためメンビジに上記クラスを付与しています。</li>\n</ol>\n</section>\n\n<section class=\"content-element content-4\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2024-01-16更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- パンくずの移動 START v1.0.0--*/<br/>.theme-fo-base {<br/>  .js-breadcrumbsMove {<br/>    + .breadcrumbs {<br/>      display: none;//ちらつき防止（JS側で後から表示）<br/>    }<br/>  }<br/>}<br/>/*-- パンくずの移動 END --*/</section>\n\n<section class=\"content-element content-5\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2025-05-29更新（v1.0.1）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- パンくずの移動 編集画面用 START v1.0.0--*/<br/>.theme-fo-base {<br/>  .js-breadcrumbsMove {<br/>    border: 1px solid red;<br/>    + .breadcrumbs {<br/>      display: block;<br/>    }<br/>    &amp;::before {<br/>      content: \"この上にパンくずが表示（移動）されます\";<br/>      position: absolute;<br/>      color: #fff;<br/>      background: red;<br/>      right: 0;<br/>      top: 0;<br/>      padding: 0 5px;<br/>    }<br/>  }<br/>}<br/>/*-- パンくずの移動 編集画面用 END --*/</section>\n\n<section class=\"content-element content-6\"><h2>JavaScript</h2><p><strong>2025-05-29更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* ---------------<br/>    パンくずの移動 v1.0.0<br/>  --------------- */<br/>  'use strict';<br/><br/>  document.addEventListener('DOMContentLoaded', function() {<br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    const breadcrumbsMove = document.querySelector('.js-breadcrumbsMove');<br/>    const breadcrumbs = document.querySelector('.breadcrumbs');<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    /* パンくずリストを任意の場所に移動 */<br/>    if(breadcrumbsMove &amp;&amp; breadcrumbs) {<br/>      const parent = breadcrumbsMove.parentNode;<br/>      parent.insertBefore(breadcrumbs, breadcrumbsMove);<br/>      breadcrumbs.style.display = 'block';/* ちらつき防止CSS解除 */<br/>    }<br/>  });<br/>  /* ---------------<br/>    パンくずの移動 END<br/>  --------------- */<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-7\"></section>"
  },
  {
    "title": "右側にフォーム追従",
    "url": "https://js-part.hmup.jp/js/form-right",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>右側フォーム追従</h2><p>※1024px以下で縦並び</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能<br/>\n   パーツ</th>\n<th>変更可能箇所</th>\n<th>変更NG</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>×</p>\n</td>\n<td>\n<ul>\n<li>フォームの背景色</li>\n<li>フォームの幅</li>\n<li>文字サイズ</li>\n<li>送信ボタンのデザイン</li>\n<li>SP表示・非表示※1</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>縦並び表示になる<br/>\n    タイミング（幅）※2</li>\n</ul>\n</td>\n<td>\n<p>×</p>\n</td>\n<td>◯</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：PCのみ表示したい場合、フォームの入ったセクションにクラス「<strong>pcOnly</strong>」追加でコントロール可能です。<br/>\n   　（他のブレイクポイントの場合、別途CSS追記）<br/>\n   ※2：1024px以下で強制的に縦並びになります（変更不可）。<br/>\n   ※縦並びになる際、フォームは編集画面上で置いた位置（並び）に配置されます。セクションで作成しているパーツのため、コンテンツ外には配置できませんのでご注意ください。（例：フッターより下など）<br/>\n<br/>\n   ※ナビに電話番号がある場合、1024px~1100pxでアイコン化する仕様になります。<br/>\n   ※全ページに入れる場合、ページによってはコンテンツ内のレイアウト、CSSの組み方により崩れが発生する可能性があるので、都度CSS調整等が必要です。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3 js-side_form_sec\" style=\"background-color:#fbf9ef\"><h2>デモ</h2>会社名お名前メールアドレス会社でお使いのメールアドレスをご記入ください。目的を入力してくださいーーーーーーに課題があるーーーーーーに課題があるその他具体的なお悩み・お問い合わせ事項があればご記入ください。プライバシーポリシー<!-- -->(<a href=\"https://subdomain20090122505.hmup.jp/privacy\">https://subdomain20090122505.hmup.jp/privacy</a>)上記に同意する</section>\n\n<section class=\"content-element content-4\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>\n<p>編集画面用CSSを適切な位置に記述。</p>\n</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。</li>\n</ul>\n<ol>\n<li>追従させたいフォームを設置したセクションにクラス名「<strong>js-side_form_sec</strong>」を追加。<br/>\n ※クラス「is-show_form」は幅調整するためにJS側で自動で付与されるクラスなので編集画面で設定は不要です。<br/>\n ※クラス「is-show_form_img」はページトップボタンの位置調整のためにJS側で自動で付与されるクラスなので編集画面で設定は不要です。</li>\n<li>フォームパーツにクラス名「<strong>side_form</strong>」を追加。<br/>\n ※旧CMSやフォームをカスタムする場合、必要に応じてクラス「<strong>form_custom form_btn_custom01</strong>」等を追加。</li>\n<li>PCのみ表示したい場合、フォームの入ったセクションにクラス「<strong>pcOnly</strong>」追加でコントロール可能です。</li>\n</ol>\n<ul>\n<li>新CMSの場合：基本デザインパーツを使用しても問題ありません。</li>\n</ul>\n<ol>\n</ol>\n<h2>注意点</h2><ul>\n<li>コンテンツ内のレイアウト、CSSの組み方によって崩れやデザイン崩れが起こるので都度調整してください。</li>\n<li>フォームを表示した際にコンテンツ部分の表示が崩れる際は、フォーム表示時のみにセクションにJS側で付与されるクラス「<strong>is-show_form</strong>」に紐づけてCSSを追記するようにしてください。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-6\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-07-05更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- 右側フォーム追従 START v1.0.0-----*/<br/>//右側フォーム追従用 ブレークポイント<br/>@mixin breakpoint-mpc {<br/>  @media screen and (min-width: 1000px) and (max-width: 1100px) {<br/>    @content;<br/>  }<br/>}<br/>@mixin breakpoint-u-pro {<br/>  @media screen and (max-width: 1024px) {<br/>    @content;<br/>  }<br/>}<br/>@mixin breakpoint-o-pro {<br/>  @media screen and (min-width: 1025px) {<br/>    @content;<br/>  }<br/>}<br/>@mixin breakpoint-u-1200 {<br/>  @media screen and (min-width: 1025px) and (max-width: 1200px) {<br/>    @content;<br/>  }<br/>}<br/><br/>.theme-fo-base .wrapper .contents {<br/>  :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>    // 右側フォーム追従セクション<br/>    &amp;.js-side_form_sec {<br/>      padding: 20px 0;<br/>      @include breakpoint-o-pro {<br/>        overflow-y: auto;<br/>        display: flex;<br/>        flex-direction: column;<br/>        align-items: center;<br/>        justify-content: center;<br/>        position: fixed;<br/>        top: 0;<br/>        right: 0;<br/>        width: 420px !important;<br/>        height: 100%;<br/>        margin: 0 !important;<br/>        padding: 20px 0;<br/>      }<br/>      @include breakpoint-u-1200 {<br/>        width: 320px !important;<br/>      }<br/>      .inner {<br/>        .row {<br/>          .col {<br/>            .component {<br/>              &amp;.form {<br/>                &amp;.side_form {<br/>                  @include breakpoint-o-pro {<br/>                    overflow-y: auto;<br/>                    max-height: 80vh;<br/>                    font-size: 14px;<br/>                  }<br/>                  .service_term_link {<br/>                    @include breakpoint-o-pro {<br/>                      font-size: 12px;<br/>                    }<br/>                    a {<br/>                      word-break: break-word;<br/>                    }<br/>                  }<br/>                  .contact_form {<br/>                    .form-label {<br/>                      @include breakpoint-o-pro {<br/>                        font-size: 12px;<br/>                      }<br/>                      //フォームの必須<br/>                      &amp;.require {<br/>                        &amp;:after {<br/>                          @include breakpoint-o-pro {<br/>                            margin-left: 10px;<br/>                            font-size: 10px;<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                    input[type=\"text\"],<br/>                    input[type=\"email\"],<br/>                    input[type=\"password\"],<br/>                    input[type=\"date\"],<br/>                    input[type=\"search\"],<br/>                    input[type=\"url\"],<br/>                    select,<br/>                    textarea {<br/>                      @include breakpoint-o-pro {<br/>                        padding: 0.5rem 0.75rem;<br/>                        font-size: 14px;<br/>                      }<br/>                    }<br/>                    .group {<br/>                      .form-submit {<br/>                        @include breakpoint-o-pro {<br/>                          padding-top: 0;<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>// ページに右側フォーム追従セクションが存在する場合の幅調整用（JS側で付与しているクラス）<br/>.is-show_form {<br/>  &amp;:is(.navi_base_custom, .main-visual, section, .foot) {<br/>    width: calc(100% - 420px) !important;<br/>    margin-right: auto !important;<br/>    @include breakpoint-u-1200 {<br/>      width: calc(100% - 320px) !important;<br/>    }<br/>  }<br/>}<br/>// ページに右側フォーム追従セクションが存在する場合のナビ調整（必要に応じて調整）<br/>.navi-002-01.navi_base_custom {<br/>  &amp;.is-show_form {<br/>    header#navigations {<br/>      .inner {<br/>        // ヘッダーロゴ＆CTAボタン<br/>        .navigation-cont {<br/>          .logo {<br/>            width: 20%;<br/>          }<br/>          .cont {<br/>            .row {<br/>              .col {<br/>                .component {<br/>                  &amp;:is([data-designpart-id=\"642f669ce4dc09621d945abc\"],.btn_custom_tel) {<br/>                    .button-cont {<br/>                      a {<br/>                        &amp;.size-s {<br/>                          @include breakpoint-mpc {<br/>                            font-size: 0;<br/>                          }<br/>                          &amp;::before {<br/>                            @include breakpoint-mpc {<br/>                              position: relative;<br/>                              top: 2px;<br/>                              margin: 0;<br/>                              font-size: 22px;<br/>                            }<br/>                          }<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>        // ヘッダーナビゲーション<br/>        .main-menu {<br/>          ul {<br/>            li {<br/>              @include breakpoint-mpc {<br/>                min-width: 80px;<br/>                font-size: 12px;<br/>              }<br/>              a {<br/>                @include breakpoint-mpc {<br/>                  font-size: 12px;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>// ページトップへ戻るボタン調整<br/>.is-show_form_img {<br/>  @include breakpoint-o-pro {<br/>    right: 420px !important;<br/>  }<br/>  @include breakpoint-u-1200 {<br/>    right: 320px !important;<br/>  }<br/>}<br/>/*----- 右側フォーム追従 END -----*/</section>\n\n<section class=\"content-element content-7\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2024-09-17更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- 右側フォーム追従 編集画面用 START v1.0.0-----*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  &amp;.js-side_form_sec {<br/>    overflow-y: initial;<br/>    position: relative;<br/>    top: initial;<br/>    right: initial;<br/>    width: 100% !important;<br/>    padding: 40px 0;<br/>    .inner {<br/>      .row {<br/>        .col {<br/>          .component {<br/>            &amp;.form {<br/>              &amp;.side_form {<br/>                overflow-y: initial;<br/>                max-height: initial;<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- 右側フォーム追従 編集画面用 END -----*/</section>\n\n<section class=\"content-element content-8\"><h2>JavaScript</h2><p><strong>2022-05-17更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>/* ---------------------------<br/>  右側フォーム追従 v1.0.0<br/>--------------------------- */<br/>  'use strict';<br/><br/>  document.addEventListener('DOMContentLoaded', function(){<br/>    /* すべてのセクションを取得 */<br/>    const allSecArray = document.querySelectorAll('section');<br/>    /* 共通ナビ（ヘッダー）を取得 */<br/>    const naveBaseCustom = document.querySelectorAll('.navi_base_custom');<br/>    /* 共通ナビ（ヘッダー）を取得 */<br/>    const mainVisual = document.querySelectorAll('.main-visual');<br/>    /* 共通フッターを取得 */<br/>    const footerEl = document.querySelectorAll('.foot');<br/>    /* 右側追従フォームのセクション取得 */<br/>    const sideFormSec = document.querySelectorAll('section.js-side_form_sec');<br/>    /* 右側追従フォームのセクション取得 */<br/>    const pageTopImage = document.querySelectorAll('.page_top_row .col .component.image');<br/>    /* グローバルナビゲーション取得 */<br/>    const mainMenu = document.querySelectorAll('.main-menu');<br/><br/>    const classAddShow = (elementArray) =&gt; {<br/>      if (elementArray.length &gt; 0) {<br/>        /* 配列に要素が存在する場合 */<br/>        elementArray.item(0).classList.add('is-show_form');<br/>      }<br/>    };<br/><br/>    const classRemoveShow = (elementArray) =&gt; {<br/>      if (elementArray.length &gt; 0) {<br/>        /* 配列に要素が存在する場合 */<br/>        elementArray.item(0).classList.remove('is-show_form');<br/>      }<br/>    };<br/><br/>    const windowSizePC = () =&gt; {<br/>      if (sideFormSec.length &gt; 0) {<br/>        for (let i = 0; i &lt; allSecArray.length; i++) {<br/>          allSecArray[i].classList.add('is-show_form');<br/>        }<br/>        classAddShow(naveBaseCustom);<br/>        classAddShow(mainVisual);<br/>        classAddShow(footerEl);<br/>        classAddShow(mainMenu);<br/>        sideFormSec.item(0).classList.remove('is-show_form');<br/>        if (pageTopImage.length &gt; 0) {<br/>          /* 配列に要素が存在する場合 */<br/>          pageTopImage.item(0).classList.add('is-show_form_img');<br/>        }<br/>      }<br/>    };<br/> <br/>    /*--- 画面幅が 1024以下のときの処理 ---*/<br/>    const windowSizeMPC = () =&gt; {<br/>      /* MPC表示（画面幅1024px以下）の時の処理 */<br/>      for (let i = 0; i &lt; allSecArray.length; i++) {<br/>        allSecArray[i].classList.remove('is-show_form');<br/>      }<br/>      classRemoveShow(naveBaseCustom);<br/>      classRemoveShow(mainVisual);<br/>      classRemoveShow(footerEl);<br/>      classRemoveShow(mainMenu);<br/>      if (pageTopImage.length &gt; 0) {<br/>        /* 配列に要素が存在する場合 */<br/>        pageTopImage.item(0).classList.remove('is-show_form_img');<br/>      }<br/>    };<br/><br/>    const windowPCorMPC = () =&gt; {<br/>      if (window.matchMedia('(max-width: 1024px)').matches) {<br/>        windowSizeMPC();<br/>      } else {<br/>        windowSizePC();<br/>      }<br/>    };<br/><br/>    /*--- ウィンドウのリサイズ完了後の処理 ---*/<br/>    const windowResize = () =&gt; {<br/>      let timer = 0;<br/>      let delay = 200;<br/>      window.addEventListener('resize', () =&gt; {<br/>        clearTimeout(timer);<br/>        timer = setTimeout(() =&gt; {<br/>          /* ウィンドウのリサイズ完了後に実行したい処理 */<br/>          windowPCorMPC();<br/>        }, delay);<br/>      }, false);<br/>    };<br/> <br/>    windowPCorMPC();<br/>    windowResize();<br/><br/>  });<br/>/* ---------------------------<br/>  右側フォーム追従 END<br/>--------------------------- */<br/>&lt;/script&gt;</section>"
  },
  {
    "title": "サイドメニュー開閉",
    "url": "https://js-part.hmup.jp/js/sidemenu-open",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>サイドメニュー開閉</h2>右サイドにあるメニューが1.5秒後に自動で閉じます。<br/></section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>×※1</p>\n</td>\n<td>\n<ul>\n<li>アイコン画像※2</li>\n<li>アイコン画像のサイズ※3</li>\n<li>ボックス全体のサイズ</li>\n<li>テキスト内容</li>\n<li>テキストカラー</li>\n<li>メニュー全体の背景色</li>\n<li>メニュー項目hover時の背景色</li>\n<li>メニュー項目の余白</li>\n<li>メニュー表示位置</li>\n<li>メニュー開閉速度</li>\n<li>SP表示・非表示※4</li>\n</ul>\n<p> </p>\n<ul>\n</ul>\n<p><strong>JS変更箇所</strong></p>\n<ul>\n<li>\n<p>開閉の秒数※①<br/>\n    変数名 : <strong>set_time</strong></p>\n</li>\n</ul>\n</td>\n<td>×</td>\n<td>〇</td>\n</tr>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：中に他のパーツを入れると崩れる可能性が高いので、テキスト・リンク編集、画像差し替えのみとしてください。<br/>\n※2：画像ではなくawesomeアイコンを使用する場合：こちらはリッチテキストのリスト機能で作ってるためawesomeだとアイコンを個別に設定できません（※やる場合はCSSで順番指定かリンクに対しての指定になる）更新性が少し悪くなりますが、それらをご了承頂いた上での実装であれば可能です。</p>\n   ※3：アイコン画像のサイズは縦横比を揃えてください。構造上、縦横比が異なる場合は見た目にバラつきが出ます。<br/>\n   ※4：SP非表示にする場合、サイドメニューパーツの入った行（row）にクラス「<strong>pcOnly</strong>」を追加。（初期設定ではSP非表示）\n<p>※共通パーツで作成する場合、共通パーツ内はカスタムCSSが効かないため見た目が崩れているように見えますが、ページの編集画面または公開ページにて正しい表示が確認できますので編集の際はご注意ください。</p>\n<p> </p>\n<p><strong>【JS】</strong><br/>\n   ※①：デフォルトの開閉速度は1.5秒です。<br/>\n   　　　ページ表示後1.5秒経つと自動で閉じます。hoverされても1.5秒後にまず強制的に閉じる挙動になります。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2>※右サイドにあるメニューの挙動をご参照ください。<ul><li><a href=\"#\">ダミーテキスト1</a></li><li><a href=\"#\">ダミーテキスト2</a></li><li><a href=\"#\">ダミーテキスト3</a></li><li><a href=\"#\">ダミーテキスト4</a></li><li><a href=\"#\">ダミーテキスト5</a></li></ul></section>\n\n<section class=\"content-element content-4\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>\n<p>編集画面用CSSを適切な位置に記述。</p>\n</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページある場合は<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>行（row）にクラス名「<strong>sidemenu_row js-sidemenu_row</strong>」を追加。</li>\n<li>共通パーツで作成する場合、上記の行（row）内に共通パーツを新規作成する。※「共通パーツ名：サイドメニュー開閉」参照</li>\n<li>リッチテキストを配置し、クラス名「<strong>sidemenu_list_text</strong>」を追加。</li>\n<li>リッチテキストの<strong>リスト機能</strong>を使用し、①アイコン画像を配置→②テキスト挿入＆リンク設定する。</li>\n<li>SP時の表示・非表示のコントロールは、行（row）に対してクラス名「<strong>pcOnly</strong>」の付け外しで可能。</li>\n</ol>\n<h2>注意点</h2><ul>\n<li>先にリンクを付けてしまうと画像が上手く入らないため、必ず画像を挿入してからテキストにリンクをつけてください。</li>\n<li>画像サイズ：縦横比を揃えるようにお願いしてください。構造上、縦横比が異なる場合は見た目にバラつきが出ます。</li>\n<li>共通パーツで作成する場合、共通パーツ内はカスタムCSSが効かないため見た目が崩れているように見えますが、ページの編集画面または公開ページにて正しい表示が確認できますので編集の際はご注意ください。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-6\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-07-27更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- サイドメニュー開閉 START v1.0.0-----*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>    .inner {<br/>      .row {<br/>        &amp;.sidemenu_row {<br/>          max-width: 240px;<br/>          position: fixed;<br/>          top: 305px;<br/>          right: 0;<br/>          z-index: 99;<br/>          transition: right .2s ease-out;<br/>          &amp;.is-close {<br/>            right: -180px;<br/>          }<br/>          .col {<br/>            padding: 0;<br/>            .component {<br/>              &amp;.richtext {<br/>                &amp;.sidemenu_list_text {<br/>                  margin: 0;<br/>                  ul {<br/>                    list-style-type: none;<br/>                    margin: 0;<br/>                    li {<br/>                      display: flex;<br/>                      align-items: center;<br/>                      background: #ffad2f;<br/>                      color: #fff;<br/>                      position: relative;<br/>                      padding: 10px;<br/>                      &amp;:hover {<br/>                        opacity: 0.7;<br/>                      }<br/>                      img {<br/>                        max-width: 40px !important;<br/>                      }<br/>                      a {<br/>                        display: flex;<br/>                        align-items: center;<br/>                        width: 100%;<br/>                        height: 100%;<br/>                        color: inherit;<br/>                        text-decoration: none;<br/>                        position: absolute;<br/>                        top: 0;<br/>                        left: 0;<br/>                        padding-left: 80px;<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- サイドメニュー開閉 END -----*/</section>\n\n<section class=\"content-element content-7\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2024-09-17更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- サイドメニュー開閉 編集画面用 START v1.0.0--*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  .inner {<br/>    .row {<br/>      &amp;.sidemenu_row {<br/>        max-width: 500px;<br/>        margin: 20px auto;<br/>        position: relative;<br/>        top: initial;<br/>        right: initial;<br/>        z-index: initial;<br/>        transition: none;<br/>        .col {<br/>          .component {<br/>            &amp;.richtext {<br/>              &amp;.sidemenu_list_text {<br/>                ul {<br/>                  li {<br/>                    &amp;:hover {<br/>                      opacity: 1;<br/>                    }<br/>                    a {<br/>                      position: relative;<br/>                      top: initial;<br/>                      left: initial;<br/>                      padding-left: 20px;<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- サイドメニュー開閉 編集画面用 END --*/</section>\n\n<section class=\"content-element content-8\"><h2>JavaScript</h2><p><strong>2025-05-29更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* --------------------<br/>    サイドメニュー開閉 v1.0.0<br/>  ---------------------- */<br/>  'use strict';<br/><br/>  document.addEventListener('DOMContentLoaded', function() {<br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>      const set_time = 1500;/* 開閉の秒数を変更可能（1秒 → 1000） */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    const sidemenu_list = document.querySelector('.js-sidemenu_row');/* サイドメニューを格納しているrow */<br/><br/>    setTimeout(function() {<br/>      /* 1.5秒後にクラス付与し強制的に閉じる */<br/>      sidemenu_list.classList.add('is-close');<br/><br/>      /* hover時にクラスつけ外しで開閉 */<br/>      sidemenu_list.addEventListener('mouseover', function() {<br/>        sidemenu_list.classList.remove('is-close');<br/>      });<br/>      sidemenu_list.addEventListener('mouseout', function() {<br/>        sidemenu_list.classList.add('is-close');<br/>      });<br/>    }, set_time);<br/>  });<br/>  /* --------------------<br/>    サイドメニュー開閉 END<br/>  ---------------------- */<br/>&lt;/script&gt;<br/><br/></section>\n\n<section class=\"content-element content-9\"></section>"
  },
  {
    "title": "スライドショー（ズーム＋フェード切り替え）",
    "url": "https://js-part.hmup.jp/js/fade-carousel",
    "html": "<section class=\"content-element content-1\">\n<table>\n<thead>\n<tr>\n<th>追加可能<br/>\n   パーツ</th>\n<th>変更可能箇所</th>\n<th>変更NG</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード<br/>\n   使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p><strong>■テキストカラム</strong><br/>\n（カラムに設置可能なパーツ）</p>\n<ul>\n<li>デザインパーツ\n    <ul>\n<li>見出し</li>\n<li>リッチテキスト</li>\n<li>画像</li>\n<li>ボタン　etc...</li>\n</ul>\n</li>\n</ul>\n<p> </p>\n<p><strong>■画像カラム</strong></p>\n<ul>\n<li>スライドに使用する<br/>\n    イメージパーツのみ</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>画像の枚数※1（特に制限なし）</li>\n<li>画像の差し替え</li>\n<li>画像の表示高さ</li>\n<li>MVの背景色</li>\n<li>テキストカラムのデザイン\n    <ul>\n<li>背景色</li>\n<li>幅</li>\n<li>余白</li>\n<li>文字スタイル</li>\n</ul>\n</li>\n<li>テキストカラムと画像の重なり範囲※2</li>\n<li>テキストカラムの有無</li>\n<li>ズームの有無</li>\n<li>画像パーツのリンク設定有無</li>\n</ul>\n<p> </p>\n<p><strong>JS変更箇所</strong></p>\n<ul>\n<li>各画像の表示時間（デフォルトでは4秒）<br/>\n    変数名：<strong>slideDelay</strong></li>\n</ul>\n<ul>\n<li>画像の切り替わる速さ（デフォルトでは2.5秒）<br/>\n変数名：<strong>slideSpeed</strong></li>\n</ul>\n</td>\n<td>\n<ul>\n<li>フェードの挙動</li>\n</ul>\n</td>\n<td>\n<p><strong>×</strong></p>\n</td>\n<td><strong>△</strong><br/>\n※3</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：一画面で表示する枚数は1枚限定になります。<strong>※2枚同時にフェード×</strong><br/>\n   ※2：画像100%表示も可能です。（別途CSS調整あり）<br/>\n   ※3：ヘッダー（メインビジュアル）自体はクリップボードで持っていけないため、パーツ毎に持っていく形になります。<br/>\n   ※挙動が安定しない可能性があるため、【<a href=\"//js-part.hmup.jp/js/case_slider\">記事リストスライダー</a>】や【<a href=\"//js-part.hmup.jp/js/row-slider\">画像+テキスト（row）のスライド</a>】と併用不可<strong>。</strong></p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-2\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>\n<p>編集画面用CSSを適切な位置に記述。</p>\n</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。</li>\n</ul>\n<ol>\n<li>ヘッダー（メインビジュアル）にクラス名「<strong>carouselImg_custom</strong>」を追加。</li>\n<li>行（row）を新規作成し、クラス名「<strong>js-carouselImg_row carouselImg_row</strong>」の２つを追加。</li>\n<li>カラム（col）を2分割し、テキストエリアのカラム（col）にクラス名「<strong>text_col</strong>」を追加。（※適宜必要があればでOK）</li>\n<li>スワイプさせたい画像を入れるカラム（col）にクラス名「<strong>img_col</strong>」を追加。</li>\n<li>カラム「<strong>img_col</strong>」の中に、表示させたい順番に上からスワイプさせたい画像を配置する。※<a href=\"#64053cdbd15fb94c7392ade2-4de1409a950f9ea5a287b7d1\">構造図</a>参照</li>\n</ol>\n<p> </p>\n<ul>\n<li>\n<p>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。</p>\n</li>\n</ul>\n<h2>注意点</h2><ul>\n<li>ヘッダー（メインビジュアル）に入れる用にスタイル調整しているため、セクションなどで使用する場合は別途CSS調整の必要あり。</li>\n<li>画像パーツにリンクを設定する際、hover時に次の画像が透過するのを防ぐため、画像パーツに対してカスタムCSSで<br/>\n 背景色（白）をデフォルトで設定しています。これを外すと次の画像が透けて見えてしまうためご注意ください。</li>\n<li>【<a href=\"//js-part.hmup.jp/js/case_slider\">記事リストスライダー</a>】や【<a href=\"//js-part.hmup.jp/js/row-slider\">画像+テキスト（row）のスライド</a>】と併用しないでください。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-4\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-12-19更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- スライドショー（フェード切り替え） START v1.0.0-----*/<br/>.theme-fo-base .main-visual {<br/>  &amp;.carouselImg_custom {<br/>    padding: 0;<br/>    .clearfix {<br/>      max-width: 100%;<br/>      padding: 0;<br/>      .row {<br/>        &amp;.carouselImg_row {<br/>          display: flex;<br/>          align-items: center;<br/>          position: relative;<br/>          z-index: 1;<br/>          visibility: hidden;//ちらつき防止<br/>          // overflow: hidden;//画像100%+テキストカラム表示の場合は追加（不要であれば削除）<br/>          // padding: 50px 0;//画像100%+テキストカラム表示の場合は追加（不要であれば削除）<br/>          @include breakpoint-msp {<br/>            flex-wrap: wrap;<br/>            flex-direction: column-reverse;<br/>          }<br/>          .col {<br/>            &amp;.text_col {<br/>              max-width: 600px;<br/>              background: #fff;<br/>              padding: 50px 60px;<br/>              @include breakpoint-pc {<br/>                margin-right: -200px;//画像100%表示の場合は削除<br/>              }<br/>              @include breakpoint-msp {<br/>                width: 100% !important;<br/>                margin-right: initial;<br/>                padding: 20px;<br/>              }<br/>            }<br/>            &amp;.img_col {<br/>              display: flex;<br/>              width: 100% !important;<br/>              overflow: hidden;<br/>              // position: absolute;//画像100%+テキストカラム表示の場合は追加（不要であれば削除）<br/>              z-index: -1;<br/>              padding: 0;<br/>              .component {<br/>                &amp;.image {<br/>                  margin: 0;<br/>                  &amp;.swiper-slide {<br/>                    background-color: #fff;//リンク設定時のhover透過防止<br/>                    overflow: hidden;<br/>                    img {<br/>                      display: block;<br/>                      width: 100% !important;<br/>                      height: 600px;<br/>                      object-fit: cover;<br/>                      //safari対策<br/>                      will-change: transform;<br/>                      backface-visibility: hidden;<br/>                      -webkit-backface-visibility: hidden;<br/>                      @include breakpoint-msp {<br/>                        height: 300px;<br/>                      }<br/>                    }<br/>                    a {<br/>                      img {<br/>                        &amp;:hover {<br/>                          opacity: 1;//二重透過防止<br/>                        }<br/>                      }<br/>                    }<br/>                    &amp;:is(<br/>                      .swiper-slide-active,<br/>                      .swiper-slide-duplicate-active,<br/>                      .swiper-slide-prev<br/>                    ) img {<br/>                      animation: zoomUp 8s linear 0s 1 normal both; //ズームアニメーション<br/>                      @keyframes zoomUp {<br/>                        0% {<br/>                          transform: scale(1);<br/>                        }<br/>                        100% {<br/>                          transform: scale(1.15);<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>          // 左から右に流れるアニメーション（不要であれば削除）<br/>          &amp;.op_flow {<br/>            .col {<br/>              .component {<br/>                &amp;.image {<br/>                  &amp;.swiper-slide {<br/>                    &amp;:is(<br/>                      .swiper-slide-active,<br/>                      .swiper-slide-duplicate-active,<br/>                      .swiper-slide-prev<br/>                    ) img {<br/>                      width: calc(100% + 100px) !important;//左から右にずらす幅分<br/>                      max-width: initial !important;<br/>                      animation: flowAnimation 8s linear 0s 1 normal both; //ズームアニメーション<br/>                      @keyframes flowAnimation {<br/>                        0% {<br/>                          transform: translateX(-100px);//左から右にずらす幅分<br/>                        }<br/>                        100% {<br/>                          transform: translateX(0);<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>        // カルーセル画像の上に配置する要素（不要であれば削除）<br/>        &amp;.absoluteImg_row {<br/>          width: max-content;<br/>          position: absolute;<br/>          right: 20px;<br/>          bottom: 100px;<br/>          z-index: 1;<br/>          @include breakpoint-pc {<br/>            display: flex;<br/>            gap: 20px;<br/>          }<br/>          @include breakpoint-sp {<br/>            top: 150px;<br/>            bottom: initial;<br/>          }<br/>          .col {<br/>            padding: 0;<br/>            .component {<br/>              &amp;.image {<br/>                background: red;<br/>                padding: 10px;<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- スライドショー（フェード切り替え） END -----*/</section>\n\n<section class=\"content-element content-5\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-07-24更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- スライドショー（フェード切り替え） 編集画面用 START v1.0.0--*/<br/>.theme-fo-base .main-visual {<br/>  &amp;.carouselImg_custom {<br/>    padding: 20px 0;<br/>    .clearfix {<br/>      padding: 20px;<br/>      .row {<br/>        &amp;.carouselImg_row {<br/>          z-index: initial;<br/>          visibility: visible;<br/>          .col {<br/>            &amp;.text_col {<br/>              margin-right: initial;<br/>              .component {<br/>                &amp;.richtext {<br/>                  //リッチの余分なスタイル削除<br/>                  .richtext_content {<br/>                    min-height: initial;<br/>                    padding: 0;<br/>                  }<br/>                }<br/>              }<br/>            }<br/>            &amp;.img_col {<br/>              display: block;<br/>              width: 50% !important;<br/>              max-width: initial;<br/>              margin-left: initial;<br/>              overflow: initial;<br/>              z-index: initial;<br/>              .component {<br/>                &amp;.image {<br/>                  margin: 10px 0;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>        &amp;.absoluteImg_row {<br/>          width: initial;<br/>          position: relative;<br/>          right: initial;<br/>          bottom: initial;<br/>          z-index: initial;<br/>          margin: 30px 0;<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- スライドショー（フェード切り替え） 編集画面用 END --*/</section>\n\n<section class=\"content-element content-6\"><h2>①jQueryを設定</h2><p>JavaScript埋め込みパーツを設置し、CDNで読み込んだ最新バージョンのjQueryを反映させます。<br/>\n※jQueryコンフリクト回避 のため<br/>\n<br/>\n複数のJSパーツを使用する場合は、こちらの①jQueryの読み込みは一度だけで大丈夫です。</p>\n<p><strong>2024-01更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script<br/>  src=\"https://code.jquery.com/jquery-3.6.0.min.js\"<br/>  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"<br/>  crossorigin=\"anonymous\"<br/>&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  'use strict';<br/>  /*--- jQueryコンフリクト回避 v1.0.0---*/<br/>  jQuery.noConflict();<br/><br/>  /*--- この下にJavaScriptを記述していく---*/<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-7\"><h2>②JavaScript</h2><p>①の下に新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p>\n<p><strong>2024-04-30更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css\" /&gt;<br/>&lt;script src=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js\"&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  /* ------------------------------------<br/>    スライドショー（ズーム＋フェード切り替え）v1.0.0<br/>  ------------------------------------ */<br/>  jQuery(function () {<br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    const slideDelay = 4000; /* 自動再生にかかる秒数(ms) */<br/>    const slideSpeed = 2500; /* スライド自体のスピード設定(ms / デフォルト→300) */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    const carouselRow = jQuery('.js-carouselImg_row');<br/>    const carouselCol = jQuery('.js-carouselImg_row .img_col');<br/>    const carouselImg = jQuery('.js-carouselImg_row .img_col .image');/* カルーセル対象の画像 */<br/><br/>    /* 必要なクラス付与 */<br/>    carouselCol.addClass('carousel-container');<br/>    carouselImg.wrapAll(`&lt;div class='swiper-wrapper'&gt;&lt;/div&gt;`);<br/>    carouselImg.addClass('swiper-slide');<br/><br/>    const swiper = new Swiper('.carousel-container', {<br/>      loop: true,<br/>      speed: slideSpeed,/* 切り替えスピード*/<br/>      effect: 'fade', /* フェードアニメーション */<br/>      fadeEffect: {<br/>        crossFade: true,/* 重なり対策 */<br/>      },<br/>      /* 自動再生 */<br/>      autoplay: {<br/>        delay: slideDelay,<br/>        disableOnInteraction: false,<br/>      },<br/>    });<br/><br/>    /* チラツキ防止 */<br/>    jQuery('.js-carouselImg_row').css('visibility', 'visible');<br/>    /* 「loading=\"lazy\"」対策 */<br/>    jQuery('.js-carouselImg_row .img_col img').removeAttr('loading');<br/>  });<br/>  /* ------------------------------------<br/>    スライドショー（ズーム＋フェード切り替え） END<br/>  ------------------------------------ */<br/>&lt;/script&gt;</section>\n\n<section class=\"content-element content-8\">    </section>"
  },
  {
    "title": "画像+テキスト（row）のスライド",
    "url": "https://js-part.hmup.jp/js/row-slider",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>画像+テキスト（row）のスライド</h2></section>\n\n<section class=\"content-element content-2\"><p><strong>※手動スライドverは以下より工数マイナス1hとなります</strong></p>\n\n<table>\n<thead>\n<tr>\n<th>追加可能<br/>\n   パーツ</th>\n<th>変更可能箇所</th>\n<th>変更NG</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード<br/>\n   使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<ul>\n<li>基本パーツ\n<ul>\n<li>見出し</li>\n<li>リッチテキスト</li>\n<li>画像</li>\n<li>ボタン※1　etc...</li>\n</ul>\n</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>文字サイズ/カラー</li>\n<li>カラム内の余白</li>\n<li>ページネーションの<br/>\n    サイズ/カラー/余白</li>\n<li>Prev,Nextボタンの<br/>\n    位置/デザイン</li>\n<li>リンク設定の有無※2 </li>\n<li>スライド自動or手動の選択※3</li>\n<li>一画面で表示する枚数※4（1~5枚）</li>\n<li>[再生/停止]ボタンデザイン\n<ul>\n<li>ボタンの枠組みの形</li>\n<li>アイコンの色味・サイズ</li>\n<li>枠線の色</li>\n<li>ボタンの位置</li>\n<li>ボタンの有無</li>\n</ul>\n</li>\n</ul>\n<p><br/>\n<strong>JS変更箇所</strong></p>\n<ul>\n<li>\n<p>各スライドの表示時間（デフォルトでは4秒）<br/>\n変数名：<strong>delay03</strong></p>\n</li>\n<li>\n<p>スライドの切り替わる速さ（デフォルトでは0.3秒）</p>\n変数名：<strong>speed03</strong></li>\n</ul>\n</td>\n<td>\n<ul>\n<li>スライドの挙動</li>\n<li>[再生/停止]ボタン使用するアイコンの変更※5</li>\n<li>[再生/停止]ボタンパーツ使用時のテキスト表示</li>\n</ul>\n</td>\n<td>〇<br/>\n※6</td>\n<td>〇</td>\n</tr>\n<tr>\n<th>※留意事項 </th>\n</tr>\n<tr>\n<td>\n<p>※1：ボタンを任意につける場合、ボックスリンク用ボタンと併用は不可。（ボタンだけにリンクがついている状態になります）<br/>\n   ※2：各カード（カラム）はボックスリンクとなっています。（リンク設定無しに変更も可能）<br/>\n   ※3：後から[自動or手動]の変更は不可。（使用するJSコードが異なるため）<br/>\n   ※4：一画面に表示するカード（カラム）の表示枚数はCSSでコントロール可能。枚数制限はありませんが、5枚以上だとレスポンシブ時に表示崩れが起きやすくなる可能性があるため1~5枚を推奨。<br/>\n   また、記事リストではないので[カード1~4型・リスト型]等の選択（枚数を顧客側で自由に変更）はできません。<br/>\n   ※5：現状使用しているアイコン（疑似要素）で固定となります。<br/>\n   ※6：以下の<strong>類似パーツと</strong>の併用は不可とさせていただきます。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n<p><strong>▼類似パーツ</strong></p>\n<ul>\n<li><a href=\"//js-part.hmup.jp/js/case_slider\">記事リストスライダー（自動スライドver.）</a></li>\n<li><a href=\"//js-part.hmup.jp/js/case_slider02\">記事リストスライダー（手動スライドver.）</a></li>\n<li><a href=\"//js-part.hmup.jp/js/case_slider/fade\">記事リストスライダー（フェード）</a></li>\n</ul>\n<a href=\"#structure\">構造図を見る</a></section>\n\n<section class=\"content-element content-3\" data-designpart=\"section-empty\" data-designpart-id=\"642f669ce4dc09621d945b2d\" style=\"background-color:#fbf9ef\"><h2>デモ01</h2><p>自動でスライドver.</p>\n<h3>記事タイトル01</h3><p>テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01</p><a href=\"#\">記事タイトル01</a><h3>記事タイトル02<br/></h3><p>テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキテキスト02スト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキストテキスト0202テキスト02テキスト02</p><a href=\"#\">記事タイトル02</a><h3>記事タイトル03</h3><p>テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキテキスト03テキスト03テキスト03スト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキストテキスト03テキスト03テキスト0303テキスト03</p><a href=\"#\">記事タイトル03</a><a href=\"#\">再生・停止ボタン</a></section>\n\n<section class=\"content-element content-4 swiper_full_sec\" data-designpart=\"section-empty\" data-designpart-id=\"642f669ce4dc09621d945b2d\" style=\"background-color:#fbf9ef\"><h2>デモ02</h2><p>自動でスライドver.</p>\n<h3>記事タイトル01</h3><p>テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01</p>\n<a href=\"#\">記事タイトル01</a><h3>記事タイトル02</h3><p>テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキテキスト02スト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキストテキスト0202テキスト02テキスト02</p>\n<a href=\"#\">記事タイトル02</a><h3>記事タイトル03</h3><p>テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキテキスト03テキスト03テキスト03スト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキストテキスト03テキスト03テキスト0303テキスト03</p>\n<a href=\"#\">記事タイトル03</a><h3>記事タイトル04</h3><p>テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキテキスト03テキスト03テキスト03スト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキストテキスト03テキスト03テキスト0303テキスト03</p>\n<a href=\"#\">記事タイトル03</a><h3>記事タイトル05</h3><p>テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキテキスト03テキスト03テキスト03スト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキストテキスト03テキスト03テキスト0303テキスト03</p>\n<a href=\"#\">記事タイトル03</a><a href=\"#\">再生・停止ボタン</a></section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fbeff6\"><h2>デモ03</h2><p>手動でスライドver.</p>\n<h3>記事タイトル01</h3><p>テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01</p>\n<a href=\"#\">記事タイトル01</a><h3>記事タイトル02</h3><p>テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキテキスト02スト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキストテキスト0202テキスト02テキスト02</p>\n<a href=\"#\">記事タイトル02</a><h3>記事タイトル03</h3><p>テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキテキスト03テキスト03テキスト03スト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキストテキスト03テキスト03テキスト0303テキスト03</p>\n<a href=\"#\">記事タイトル03</a></section>\n\n<section class=\"content-element content-6 swiper_full_sec\" style=\"background-color:#fbeff6\"><h2>デモ04</h2><p>手動でスライドver.</p>\n<h3>記事タイトル01</h3><p>テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01テキスト01</p>\n<a href=\"#\">記事タイトル01</a><h3>記事タイトル02</h3><p>テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキテキスト02スト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキスト02テキストテキスト0202テキスト02テキスト02</p>\n<a href=\"#\">記事タイトル02</a><h3>記事タイトル03</h3><p>テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキテキスト03テキスト03テキスト03スト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキストテキスト03テキスト03テキスト0303テキスト03</p>\n<a href=\"#\">記事タイトル03</a><h3>記事タイトル04</h3><p>テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキテキスト03テキスト03テキスト03スト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキストテキスト03テキスト03テキスト0303テキスト03</p>\n<a href=\"#\">記事タイトル04</a><h3>記事タイトル05</h3><p>テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキテキスト03テキスト03テキスト03スト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキスト03テキストテキスト03テキスト03テキスト0303テキスト03</p>\n<a href=\"#\">記事タイトル04</a></section>\n\n<section class=\"content-element content-7\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-8\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>パーツとクラス名をデモに合わせて設置する。</li>\n</ul>\n<ol>\n<li>自動でスライドさせたい場合と手動でスライドさせたい場合でコピーするJavaScriptが異なります。<br/>\n それぞれ用途にあった方をコピーして下さい。​​​​\n\n <ul>\n<li>自動でスライドさせたい場合は<a href=\"#js01\">こちらをコピー</a></li>\n<li>手動でスライドさせたい場合は<a href=\"#js02\">こちらをコピー</a></li>\n</ul>\n</li>\n<li>100%表示させたい場合、セクションにクラス名「<strong>swiper_full_sec</strong>」を追加。</li>\n<li>スワイプさせたい行（row）を1カラムで作成し、それぞれ用途にあったクラス名を追加。\n <ul>\n<li>自動スライドver.の場合→クラス名「<strong>js-swiper_row swiper_row</strong>」</li>\n<li>手動スライドver.の場合→クラス名「<strong>js-swiper02_row swiper_row</strong>」</li>\n<li>3枚表示→上記にクラス名「<strong>op_card03</strong>」を追加。</li>\n<li>5枚表示→上記にクラス名「<strong>op_card05</strong>」を追加。<br/>\n  ※デモ上では3・5枚表示のみ対応。表示枚数を変更したい場合、各自CSSで調整してください。<br/>\n  →カスタムCSS内で【//表示枚数コントロール】で検索</li>\n</ul>\n</li>\n<li>新CMSの場合\n<ul>\n<li>デザインパーツ（ボックスリンク）を使用しても問題ありませんが、1カラムでないと作動しないため、<br/>\n  ボックスリンク[3列（画像・見出し）]などを使用する場合、2カラム目と3カラム目を削除して1カラムになるように配置して下さい。</li>\n<li>デザインパーツ（ボックスリンク）を使用した場合、ボタンパーツが設置されてる事を確認し、リンク先を[任意のURL]に設定。</li>\n</ul>\n</li>\n<li>旧CMSの場合\n<ul>\n<li>必要に応じて、カラム（col）にボックスリンク用のクラス名「<strong>box_link_col</strong>」を追加。</li>\n<li>ボックスリンクを設置したカラム（col）の中の一番下に、「ボタンパーツ」を設置し、<br/>\n  クラス名「<strong>btn_custom_boxlink</strong>」を追加。リンク先を[任意のURL]に設定。</li>\n</ul>\n</li>\n<li>上記の行（row）を行ごと下に複製し、表示させたい順番に上から順に配置して下さい。</li>\n<li>[再生/停止]ボタンを用意します。<br/>\n 最後に置いたスライダー用のカラム「<strong>js-swiper_row</strong>」のすぐ下に、新規rowを用意。（クラスは不要）<br/>\n 中に[単体パーツ＞デフォルト＞ボタンパーツ]を配置し、クラス名「<strong>js-stop_btn stop_btn</strong>」を追加。<br/>\n リンク先を[このページの一番上に遷移]に設定する。※リンク先を設定しないと表示されません。<br/>\n ※古いページ内リンク対策が入ったJSパーツと併用している場合、上記のリンク設定[#]だと正しく動かない場合があります。その際はTOPページ等に設定してください。（URLが[#]以外になれば問題ありません）<br/>\n ※必ずデフォルトパーツを使用してください。デザインパーツを使用した場合、打ち消すスタイルが必要になります。<br/>\n ※ボタンテキストは表示されませんが、適当に「再生・停止ボタン」などと設定しておくと良いかと思います。</li>\n</ol>\n<h2>注意点</h2><ul>\n<li>カラム「<strong>swiper_row</strong>」と「<strong>swiper_row</strong>」の間に他の行をいれないでください。</li>\n</ul>\n<p> ※以下の類似パーツとの併用はできません。</p>\n<p><strong>▼類似パーツ</strong></p>\n<ul>\n<li><a href=\"//js-part.hmup.jp/js/case_slider\">記事リストスライダー（自動スライドver.）</a></li>\n<li><a href=\"//js-part.hmup.jp/js/case_slider02\">記事リストスライダー（手動スライドver.）</a></li>\n<li><a href=\"//js-part.hmup.jp/js/case_slider/fade\">記事リストスライダー（フェード）</a></li>\n</ul>\n</section>\n\n<section class=\"content-element content-9\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-12-26更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- 画像+テキスト（row）のスライド START v1.0.0-----*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section, section[data-designpart-id]:not(:root:root:root:root)) {<br/>    // 幅100%にしたい場合<br/>    &amp;.swiper_full_sec {<br/>      .inner {<br/>        max-width: 100%;<br/>      }<br/>    }<br/>    .inner {<br/>      .row {<br/>        //スワイパー<br/>        &amp;.swiper_row {<br/>          height: initial;<br/>          visibility: hidden; //ちらつき防止<br/>          box-shadow: $box_shadow_common;<br/>          background: #fff;<br/>          .col {<br/>            padding: 0 20px;<br/>            .component {<br/>              &amp;.image {<br/>                margin: 0 -20px;<br/>              }<br/>            }<br/>          }<br/>        }<br/>        //3枚表示<br/>        &amp;.op_card03 {<br/>          max-width: calc((100% / 3) - 20px); //表示枚数コントロール<br/>          margin: 0 10px;<br/>          @include breakpoint-sp {<br/>            max-width: 100%;<br/>          }<br/>        }<br/>        //5枚表示<br/>        &amp;.op_card05 {<br/>          max-width: calc((100% / 5) - 20px); //表示枚数コントロール<br/>          margin: 0 10px;<br/>          @include breakpoint-pro {<br/>            max-width: calc((100% / 3) - 20px);<br/>          }<br/>          @include breakpoint-sp {<br/>            max-width: 100%;<br/>          }<br/>        }<br/>        .col {<br/>          .component {<br/>            // 再生・停止ボタン<br/>            &amp;.stop_btn {<br/>              margin-top: 30px;<br/>              .button-cont {<br/>                a {<br/>                  display: inline-flex;<br/>                  justify-content: center;<br/>                  align-items: center;<br/>                  width: 30px;<br/>                  height: 30px;<br/>                  border-radius: 50vh;<br/>                  background: transparent;<br/>                  border: 2px solid #999;<br/>                  font-size: 0; //テキスト非表示<br/>                  letter-spacing: 0;<br/>                  line-height: 1;<br/>                  padding: 0;<br/>                  position: relative;<br/>                  &amp;::before {<br/>                    content: \"\\f04d\"; //停止アイコン<br/>                    font-family: $font_family_awsm5;<br/>                    font-weight: 900;<br/>                    font-size: 15px;<br/>                    color: #999;<br/>                    position: absolute;<br/>                    top: 50%;<br/>                    left: 50%;<br/>                    transform: translate(-50%, -50%);<br/>                  }<br/>                  // 停止時アイコン切り替え<br/>                  &amp;.-stop {<br/>                    &amp;::before {<br/>                      content: \"\\f04b\"; //再生アイコン<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>      .swiper-container {<br/>        position: relative;<br/>        border-bottom: 0.1px solid transparent; //親要素からはみ出してmarginが適用される対策<br/>        .swiper {<br/>          margin-bottom: 10px;<br/>          padding: 20px 0;<br/>        }<br/>        // アローボタン<br/>        :is(.swiper-button-next, .swiper-button-prev) {<br/>          width: 70px;<br/>          height: 70px;<br/>          background: #ffad2f;<br/>          border-radius: 50vh;<br/>          opacity: $hover_opacity;<br/>          transform: translateY(-50%);<br/>          @include breakpoint-ssp {<br/>            width: 50px;<br/>            height: 50px;<br/>          }<br/>          &amp;:hover {<br/>            opacity: 1;<br/>          }<br/>          &amp;::after {<br/>            font-size: 20px;<br/>            color: #fff;<br/>          }<br/>        }<br/>        // 前へボタン<br/>        .swiper-button-prev {<br/>          left: -20px;<br/>          @include breakpoint-ssp {<br/>            left: -15px;<br/>          }<br/>        }<br/>        // 次へボタン<br/>        .swiper-button-next {<br/>          right: -20px;<br/>          @include breakpoint-ssp {<br/>            right: -15px;<br/>          }<br/>        }<br/>        // ページネーション<br/>        :is(.swiper-horizontal &gt; .swiper-pagination-bullets, .swiper-pagination-bullets.swiper-pagination-horizontal, .swiper-pagination-custom, .swiper-pagination-fraction) {<br/>          position: initial;<br/>          .swiper-pagination-bullet {<br/>            width: 10px;<br/>            height: 10px;<br/>            background: #ffad2f;<br/>            margin: 0 5px;<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- 画像+テキスト（row）のスライド END -----*/</section>\n\n<section class=\"content-element content-10\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2024-09-12更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- 画像+テキスト（row）のスライド 編集画面用 START v1.0.0--*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root:root:root)) {<br/>  .inner {<br/>    .row {<br/>      &amp;.swiper_row {<br/>        visibility: visible;<br/>        width: calc(100% / 3);<br/>        min-width: 500px;<br/>        margin: 10px auto;<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- 画像+テキスト（row）のスライド 編集画面用 END --*/</section>\n\n<section class=\"content-element content-11\"><h2>①jQueryを設定</h2><p>JavaScript埋め込みパーツを設置し、CDNで読み込んだ最新バージョンのjQueryを反映させます。<br/>\n※jQueryコンフリクト回避 のため<br/>\n<br/>\n複数のJSパーツを使用する場合は、こちらの①jQueryの読み込みは一度だけで大丈夫です。</p>\n<p><strong>2024-01更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script<br/>  src=\"https://code.jquery.com/jquery-3.6.0.min.js\"<br/>  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"<br/>  crossorigin=\"anonymous\"<br/>&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  'use strict';<br/>  /*--- jQueryコンフリクト回避 v1.0.0---*/<br/>  jQuery.noConflict();<br/><br/>  /*--- この下にJavaScriptを記述していく---*/<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-12\"><h2>②JavaScript（自動ver）</h2><p>①の下に新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p>\n<p>自動でスライドさせたい場合はこちらをコピー</p>\n<p><strong>2024-04-12更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css\" /&gt;<br/>&lt;script src=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js\"&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  /* -----------------------------------------------------<br/>    画像+テキスト（row）のスライド ※自動スライドver. 停止ボタン付き v1.0.0<br/>  ----------------------------------------------------- */<br/>  /* 画像等すべて読み込んでから実行 */<br/>  jQuery(window).on('load', function () {<br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    const delay03 = 4000; /* 自動再生にかかる秒数(ms) */<br/>    const speed03 = 300; /* スライド自体のスピード設定(ms / デフォルト→300) */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    const swiper_row = jQuery('.js-swiper_row');/* スライダー要素*/<br/>    const swiper_sec = jQuery('.js-swiper_row').closest('section, .main-visual');/* スライダーが入ったセクションorメンビジ*/<br/><br/>    for (let i = 0; i &lt; swiper_sec.length; i++) {<br/>      const index = i + 1;<br/>      const targetRow = swiper_sec.eq(i).find('.js-swiper_row');/* 各スライダー要素を取得 */<br/>      const targetRowSlideBtn = swiper_sec.eq(i).find('.js-stop_btn a');/* 各スライダー停止ボタンを取得 */<br/>      const swiperPaginationElement = jQuery(`&lt;div class='swiper-pagination swiper-pagination-${index}'&gt;&lt;/div&gt;` +<br/>        `&lt;div class='swiper-button-prev swiper-button-prev-${index}'&gt;&lt;/div&gt;` +<br/>        `&lt;div class='swiper-button-next swiper-button-next-${index}'&gt;&lt;/div&gt;`);<br/> <br/>      targetRow.addClass('swiper-slide');<br/>      targetRow.wrapAll(`&lt;div class='swiper-container'&gt;&lt;div class='swiper swiper-${index}'&gt;&lt;div class='swiper-wrapper'&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;`);<br/>      targetRowSlideBtn.addClass(`swiperBtn-${index}`);<br/>      swiperPaginationElement.insertAfter(`.swiper-${index}`);<br/><br/>      const swiper = new Swiper(`.swiper-${index}`, {<br/>        slidesPerView: 'auto',/* 一画面に表示する枚数（自動・CSSでの幅設定に依存） */<br/>        loop: true,<br/>        centeredSlides: true,/* 中央寄せ */<br/>        speed: speed03,<br/>        /* 自動再生 */<br/>        autoplay: {<br/>          delay: delay03,/* 自動再生にかかる秒数 */<br/>          disableOnInteraction: false,/* ページネーションをクリック後に自動再生を再開 */<br/>        },<br/>        /* ページネーション */<br/>        pagination: {<br/>          el: `.swiper-pagination-${index}`,<br/>          clickable: true,<br/>        },<br/>        /* アローボタン */<br/>        navigation: {<br/>          nextEl: `.swiper-button-next-${index}`,<br/>          prevEl: `.swiper-button-prev-${index}`,<br/>        },<br/>      });<br/><br/>      /* 再生・停止ボタン */<br/>      targetRowSlideBtn.on('click', function(e) {<br/>        e.preventDefault();<br/>        if (jQuery(this).hasClass('-stop')) {<br/>          jQuery(this)<br/>            .addClass('-start')<br/>            .removeClass('-stop');<br/>            swiper.autoplay.start();<br/>        } else {<br/>          jQuery(this)<br/>          .addClass('-stop')<br/>          .removeClass('-start');<br/>          swiper.autoplay.stop();<br/>        }<br/>      });<br/>    }<br/><br/>    jQuery('.js-swiper_row').css('visibility', 'initial');/* ちらつき防止 */<br/>    jQuery('.js-swiper_row img').removeAttr('loading');/* 「loading=\"lazy\"」対策 */<br/>  });<br/>  /* ---------------------------------------------------------<br/>    画像+テキスト（row）のスライド ※自動スライドver. 停止ボタン付き END<br/>  --------------------------------------------------------- */<br/>&lt;/script&gt;<br/><br/></section>\n\n<section class=\"content-element content-13\"><h2>②JavaScript(手動ver)</h2><p>①の下に新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p>\n<p>手動でスライドさせたい場合はこちらをコピー</p>\n<p><strong>2024-04-12更新</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css\" /&gt;<br/>&lt;script src=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js\"&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  /* ------------------------------------------<br/>    画像+テキスト（row）のスライド ※手動スライドver.<br/>  ------------------------------------------ */<br/>  /* 画像等すべて読み込んでから実行 */<br/>  jQuery(window).on('load', function () {<br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    const speed04 = 300; /* スライド切り替えのスピード設定(ms / デフォルト→300) */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    const swiper02_row = jQuery('.js-swiper02_row');<br/>    const swiper02_sec = jQuery('.js-swiper02_row').closest('section, .main-visual');<br/><br/>    for (let i = 0; i &lt; swiper02_sec.length; i++) {<br/>      const index = i + 1;<br/>      const targetRow02 = swiper02_sec.eq(i).find('.js-swiper02_row');<br/>      const swiperPaginationElement02 = jQuery(`&lt;div class='swiper-pagination swiper02-pagination-${index}'&gt;&lt;/div&gt;` +<br/>        `&lt;div class='swiper-button-prev swiper02-button-prev-${index}'&gt;&lt;/div&gt;` +<br/>        `&lt;div class='swiper-button-next swiper02-button-next-${index}'&gt;&lt;/div&gt;`);<br/> <br/>      targetRow02.addClass('swiper-slide');<br/>      targetRow02.wrapAll(`&lt;div class='swiper-container'&gt;&lt;div class='swiper swiper02-${index}'&gt;&lt;div class='swiper-wrapper'&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;`);<br/>      swiperPaginationElement02.insertAfter(`.swiper02-${index}`);<br/><br/>      const swiper02 = new Swiper(`.swiper02-${index}`, {<br/>        slidesPerView: 'auto',/* 一画面に表示する枚数（自動・CSSでの幅設定に依存） */<br/>        loop: true,<br/>        centeredSlides: true,/* 中央寄せ */<br/>        speed: speed04,/* スライド切り替え*/<br/>        /* ページネーション */<br/>        pagination: {<br/>          el: `.swiper02-pagination-${index}`,<br/>          clickable: true, /* クリック可にする */<br/>        },<br/>        /* アローボタン */<br/>        navigation: {<br/>          nextEl: `.swiper02-button-next-${index}`,<br/>          prevEl: `.swiper02-button-prev-${index}`,<br/>        },<br/>      });<br/>    }<br/><br/>    jQuery('.js-swiper02_row').css('visibility', 'initial');/* ちらつき防止 */<br/>    jQuery('.js-swiper02_row img').removeAttr('loading');/* 「loading=\"lazy\"」対策 */<br/>  });<br/>  /* ------------------------------------------<br/>    画像+テキスト（row）のスライド ※手動スライドver. END<br/>  ------------------------------------------ */<br/>&lt;/script&gt;<br/><br/><br/></section>\n\n<section class=\"content-element content-14\">        </section>"
  },
  {
    "title": "スライドショー（ズーム＋フェード切り替え）※右側に画像固定ver.",
    "url": "https://js-part.hmup.jp/js/fade-carousel02",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#ffd1d1\"><h2>スライドショー（ズーム＋フェード切り替え） <br/>⇧　※右側に画像固定ver.  デモ　⇧</h2></section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>変更NG</th>\n<th>同一ページに<br/>\n   複数設置</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p><strong>■テキストカラム</strong><br/>\n（カラムに設置可能なパーツ）</p>\n<ul>\n<li>デザインパーツ</li>\n</ul>\n<p> </p>\n<p><strong>■画像カラム</strong></p>\n<ul>\n<li>カルーセルで使用する<br/>\n    イメージパーツのみ</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>画像の差し替え</li>\n<li>画像の表示高さ</li>\n<li>MVの背景色</li>\n<li>テキストカラムの背景色</li>\n<li>テキストカラムの幅</li>\n<li>テキストカラムの余白</li>\n<li>テキストの文字スタイル</li>\n<li>テキストカラムと画像の交差範囲</li>\n<li>\n<p>ズームの有無<br/>\n（CSSで調整可）</p>\n</li>\n<li>\n<p>アニメーションの追加<br/>\n（※CSSでできるもののみ）</p>\n</li>\n<li>固定表示する画像の個数※1</li>\n<li>固定表示する画像の表示位置</li>\n<li>\n<p>画像パーツのリンク設定の有無</p>\n</li>\n</ul>\n<p> </p>\n<p><strong>JS変更箇所</strong></p>\n<ul>\n<li>\n<p>各画像の表示時間（デフォルトでは4秒）<br/>\n    変数名：<strong>slideDelay</strong></p>\n</li>\n<li>\n<p>画像の切り替わる速さ（デフォルトでは2.5秒）</p>\n    変数名：<strong>slideSpeed</strong></li>\n</ul>\n</td>\n<td>\n<ul>\n<li>フェードの挙動※2</li>\n</ul>\n</td>\n<td>\n<p>×</p>\n</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：最大2個まで（レスポンシブ考慮のため）<br/>\n   ※2：一画面で表示する枚数は1枚限定になります。<strong>※2枚同時にフェード×</strong><br/>\n   ※挙動が安定しない可能性があるため、【<a href=\"//js-part.hmup.jp/js/case_slider\">記事リストスライダー</a>】【<a href=\"//js-part.hmup.jp/js/row-slider\">画像+テキスト（row）のスライド</a>】と併用不可。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-4\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>\n<p>編集画面用CSSを適切な位置に記述。</p>\n</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。</li>\n</ul>\n<ol>\n<li>メンビジにクラス名「<strong>carouselImg_custom</strong>」を追加。</li>\n<li>行（row）を新規作成し、クラス名「<strong>js-carouselImg_row carouselImg_row</strong>」の２つを追加。</li>\n<li>カラム（col）を2分割し、テキストエリアのカラム（col）にクラス名「<strong>text_col</strong>」を追加。（※適宜必要があればでOK）</li>\n<li>スワイプさせたい画像を入れるカラム（col）にクラス名「<strong>img_col</strong>」を追加。</li>\n<li>\n<p>カラム「<strong>img_col</strong>」の中に、表示させたい順番に上からスワイプさせたい画像を配置する。※<a href=\"#structure\">構造図</a>参照</p>\n</li>\n<li>カルーセル用の行（row）の下に新しく行を追加し、クラス名「<strong>absoluteImg_row</strong>」を追加。<br/>\n 中に固定表示したい画像を配置する。<br/>\n ※位置調整などは各自カスタムCSSで調整してください。</li>\n</ol>\n<ul>\n<li>\n<p>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。</p>\n</li>\n</ul>\n<h2>注意点</h2><ul>\n<li>メンビジに入れる用に調整しているため、セクションなどで使用する場合は別途CSS調整の必要あり。</li>\n<li>画像パーツにリンクを設定する際、hover時に次の画像が透過するのを防ぐため、画像パーツに対してカスタムCSSで<br/>\n 背景色（白）をデフォルトで設定しています。これを外すと次の画像が透けて見えてしまうためご注意ください。</li>\n<li>【<a href=\"//js-part.hmup.jp/js/case_slider\">記事リストスライダー</a>】【<a href=\"//js-part.hmup.jp/js/row-slider\">画像+テキスト（row）のスライド</a>】と併用しないでください。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-5\"><h2>カスタムCSS</h2><p><strong>2023-12-19更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- スライドショー（フェード切り替え） START v1.0.0-----*/<br/>.theme-fo-base .main-visual {<br/>  &amp;.carouselImg_custom {<br/>    padding: 0;<br/>    .clearfix {<br/>      max-width: 100%;<br/>      padding: 0;<br/>      .row {<br/>        &amp;.carouselImg_row {<br/>          display: flex;<br/>          align-items: center;<br/>          position: relative;<br/>          z-index: 1;<br/>          visibility: hidden;//ちらつき防止<br/>          // overflow: hidden;//画像100%+テキストカラム表示の場合は追加（不要であれば削除）<br/>          // padding: 50px 0;//画像100%+テキストカラム表示の場合は追加（不要であれば削除）<br/>          @include breakpoint-msp {<br/>            flex-wrap: wrap;<br/>            flex-direction: column-reverse;<br/>          }<br/>          .col {<br/>            &amp;.text_col {<br/>              max-width: 600px;<br/>              background: #fff;<br/>              padding: 50px 60px;<br/>              @include breakpoint-pc {<br/>                margin-right: -200px;//画像100%表示の場合は削除<br/>              }<br/>              @include breakpoint-msp {<br/>                width: 100% !important;<br/>                margin-right: initial;<br/>                padding: 20px;<br/>              }<br/>            }<br/>            &amp;.img_col {<br/>              display: flex;<br/>              width: 100% !important;<br/>              overflow: hidden;<br/>              // position: absolute;//画像100%+テキストカラム表示の場合は追加（不要であれば削除）<br/>              z-index: -1;<br/>              padding: 0;<br/>              .component {<br/>                &amp;.image {<br/>                  margin: 0;<br/>                  &amp;.swiper-slide {<br/>                    background-color: #fff;//リンク設定時のhover透過防止<br/>                    overflow: hidden;<br/>                    img {<br/>                      display: block;<br/>                      width: 100% !important;<br/>                      height: 600px;<br/>                      object-fit: cover;<br/>                      //safari対策<br/>                      will-change: transform;<br/>                      backface-visibility: hidden;<br/>                      -webkit-backface-visibility: hidden;<br/>                      @include breakpoint-msp {<br/>                        height: 300px;<br/>                      }<br/>                    }<br/>                    a {<br/>                      img {<br/>                        &amp;:hover {<br/>                          opacity: 1;//二重透過防止<br/>                        }<br/>                      }<br/>                    }<br/>                    &amp;:is(<br/>                      .swiper-slide-active,<br/>                      .swiper-slide-duplicate-active,<br/>                      .swiper-slide-prev<br/>                    ) img {<br/>                      animation: zoomUp 8s linear 0s 1 normal both; //ズームアニメーション<br/>                      @keyframes zoomUp {<br/>                        0% {<br/>                          transform: scale(1);<br/>                        }<br/>                        100% {<br/>                          transform: scale(1.15);<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>          // 左から右に流れるアニメーション（不要であれば削除）<br/>          &amp;.op_flow {<br/>            .col {<br/>              .component {<br/>                &amp;.image {<br/>                  &amp;.swiper-slide {<br/>                    &amp;:is(<br/>                      .swiper-slide-active,<br/>                      .swiper-slide-duplicate-active,<br/>                      .swiper-slide-prev<br/>                    ) img {<br/>                      width: calc(100% + 100px) !important;//左から右にずらす幅分<br/>                      max-width: initial !important;<br/>                      animation: flowAnimation 8s linear 0s 1 normal both; //ズームアニメーション<br/>                      @keyframes flowAnimation {<br/>                        0% {<br/>                          transform: translateX(-100px);//左から右にずらす幅分<br/>                        }<br/>                        100% {<br/>                          transform: translateX(0);<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>        // カルーセル画像の上に配置する要素（不要であれば削除）<br/>        &amp;.absoluteImg_row {<br/>          width: max-content;<br/>          position: absolute;<br/>          right: 20px;<br/>          bottom: 100px;<br/>          z-index: 1;<br/>          @include breakpoint-pc {<br/>            display: flex;<br/>            gap: 20px;<br/>          }<br/>          @include breakpoint-sp {<br/>            top: 150px;<br/>            bottom: initial;<br/>          }<br/>          .col {<br/>            padding: 0;<br/>            .component {<br/>              &amp;.image {<br/>                background: red;<br/>                padding: 10px;<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- スライドショー（フェード切り替え） END -----*/</section>\n\n<section class=\"content-element content-6\"><h2>編集画面用カスタムCSS</h2><p><strong>2023-07-24更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- スライドショー（フェード切り替え） 編集画面用 START v1.0.0--*/<br/>@include edit-page {<br/>  .theme-fo-base .main-visual {<br/>    &amp;.carouselImg_custom {<br/>      padding: 20px 0;<br/>      .clearfix {<br/>        padding: 20px;<br/>        .row {<br/>          &amp;.carouselImg_row {<br/>            z-index: initial;<br/>            visibility: visible;<br/>            .col {<br/>              &amp;.text_col {<br/>                margin-right: initial;<br/>                .component {<br/>                  &amp;.richtext {<br/>                    //リッチの余分なスタイル削除<br/>                    .richtext_content {<br/>                      min-height: initial;<br/>                      padding: 0;<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>              &amp;.img_col {<br/>                display: block;<br/>                width: 50% !important;<br/>                max-width: initial;<br/>                margin-left: initial;<br/>                overflow: initial;<br/>                z-index: initial;<br/>                .component {<br/>                  &amp;.image {<br/>                    margin: 10px 0;<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>          &amp;.absoluteImg_row {<br/>            width: initial;<br/>            position: relative;<br/>            right: initial;<br/>            bottom: initial;<br/>            z-index: initial;<br/>            margin: 30px 0;<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- スライドショー（フェード切り替え） 編集画面用 END --*/</section>\n\n<section class=\"content-element content-7\"><h2>JavaScript</h2><p><strong>2024-12-04更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script<br/>  src=\"https://code.jquery.com/jquery-3.6.0.min.js\"<br/>  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"<br/>  crossorigin=\"anonymous\"<br/>&gt;&lt;/script&gt;<br/>&lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css\" /&gt;<br/>&lt;script src=\"https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js\"&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  'use strict';<br/>  /*--- jQueryコンフリクト回避 ---*/<br/>  jQuery.noConflict();<br/><br/>  /*--- この下にJavaScriptを記述していく ---*/<br/>  /* ------------------------------------------------<br/>    スライドショー（ズーム＋フェード切り替え） ※右側に画像固定ver. v1.0.0<br/>  ------------------------------------------------ */<br/>  jQuery(function () {<br/><br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>     const slideDelay = 4000; /* 自動再生にかかる秒数(ms) */<br/>    const slideSpeed = 2500; /* スライド自体のスピード設定(ms / デフォルト→300) */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    const carouselRow = jQuery('.js-carouselImg_row');<br/>    const carouselCol = jQuery('.js-carouselImg_row .img_col');<br/>    const carouselImg = jQuery('.js-carouselImg_row .img_col .image');/* カルーセル対象の画像 */<br/><br/>    /* 必要なクラス付与 */<br/>    carouselCol.addClass('carousel-container');<br/>    carouselImg.wrapAll(`&lt;div class='swiper-wrapper'&gt;&lt;/div&gt;`);<br/>    carouselImg.addClass('swiper-slide');<br/><br/>    const swiper = new Swiper('.carousel-container', {<br/>      loop: true,<br/>      speed: slideSpeed,/* 切り替えスピード*/<br/>      effect: 'fade', /* フェードアニメーション */<br/>      fadeEffect: {<br/>        crossFade: true,/* 重なり対策 */<br/>      },<br/>      /* 自動再生 */<br/>      autoplay: {<br/>        delay: slideDelay,<br/>        disableOnInteraction: false,<br/>      },<br/>    });<br/><br/>    /* チラツキ防止 */<br/>    jQuery('.js-carouselImg_row').css('visibility', 'visible');<br/>    /* 「loading=\"lazy\"」対策 */<br/>    jQuery('.js-carouselImg_row .img_col img').removeAttr('loading');<br/>  });<br/>  /* ------------------------------------------------<br/>    スライドショー（ズーム＋フェード切り替え） ※右側に画像固定ver. END<br/>  ------------------------------------------------ */<br/>&lt;/script&gt;</section>\n\n<section class=\"content-element content-8\">   </section>"
  },
  {
    "title": "ロゴスクロール",
    "url": "https://js-part.hmup.jp/js/logo_scroll",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>ロゴスクロール</h2><p>行を横並びにしてロゴを無限にスライドさせる。</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>変更NG</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<ul>\n<li>イメージパーツ※1</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>ロゴの数※2</li>\n<li>ロゴの横幅/高さ</li>\n<li>ロゴ間の余白</li>\n<li>スクロールの速度</li>\n<li>スクロールの方向（逆再生）</li>\n<li>[再生/停止]ボタンのデザイン\n<ul>\n<li>ボタンの枠組みの形</li>\n<li>アイコンの色味・サイズ</li>\n<li>枠線の色</li>\n<li>ボタンの位置</li>\n<li>ボタンの有無</li>\n</ul>\n</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>[再生/停止]ボタンに使用する<br/>\n    アイコンの変更※3</li>\n<li>[再生/停止]ボタンパーツを<br/>\n    使用時のテキスト表示</li>\n</ul>\n</td>\n<td>〇</td>\n<td>〇</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：ロゴスクロールのセクションはコンテンツ幅を100%に広げているため、ロゴスクロール（画像）以外の要素を入れると崩れにつながる恐れがあります。<br/>\n   ※2：ロゴの掲載数は<strong>最少10個／最大30個</strong>でお願いします。</p>\n<ul>\n<li>画像サイズにもよりますが、ロゴの数が少ないとブラウザ幅によってはスクロールが途切れているように見えてしまうのでご注意ください。</li>\n<li>30個以上配置自体は可能ですが、画像が増えるとスクロール速度が速くなるためCSSで速度の調整が必要です。\n    <ul>\n<li>[画像幅✕個数]がブラウザ幅より小さくなる場合、正常に表示されない可能性がありますのでご注意ください。対策としては、余白を広げる/ロゴの幅を広げる/ロゴを繰り返し設置するなどディレクターと相談して対応してください。</li>\n<li>2つのcol（カラム）に同じ画像を同じ順番で入れないとループになりません。</li>\n<li>停止ボタンが複数行に対応していないため、ロゴスクロールの複数行配置は対応しておりません。</li>\n</ul>\n</li>\n</ul>\n<p>※3：現状使用しているアイコン（疑似要素）で固定となります。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3 logoScroll_sec js-logoScroll_sec\" style=\"background-color:#fbf9ef\"><p>　▼通常用</p>\n<a href=\"/index\"></a><a href=\"#\">再生・停止ボタン</a></section>\n\n<section class=\"content-element content-4 logoScroll_sec js-logoScroll_sec\"><p>　▼高速再生</p>\n<a href=\"#\">再生・停止ボタン</a></section>\n\n<section class=\"content-element content-5 logoScroll_sec js-logoScroll_sec\" style=\"background-color:#fbf9ef\"><p>　▼逆再生</p>\n<a href=\"#\">再生・停止ボタン</a></section>\n\n<section class=\"content-element content-6\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-7\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSを適切な位置に記述。</li>\n<li>JavaScriptを<strong>使用したいパーツ</strong>の<strong>セクションの一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>セクションにクラス名「<strong>logoScroll_sec js-logoScroll_sec</strong>」を追加。</li>\n<li>上記セクションの中に新規行（row）を作成し、クラス名「<strong>js-img_row img_row</strong>」の２つを追加。</li>\n<li>上記行を2分割し、2カラムの中にそれぞれ「画像の順番」と「画像の数」が同じになるようにしてロゴ用の画像パーツを配置。※<a href=\"#structure\">構造図</a>参照<br/>\n 画像の幅や高さ、スクロール速度は要件によって適宜カスタムCSSにて調整してください。<br/>\n<strong>【オプション】</strong>\n<ul>\n<li><strong>逆再生</strong>→行（row）にクラス名「<strong>op_reverse</strong>」を追加。</li>\n<li><strong>高速再生</strong>→行（row）にクラス名「<strong>op_highspeed</strong>」を追加。</li>\n</ul>\n</li>\n<li>[再生/停止]ボタンを用意します。<br/>\n ロゴスクロール用のカラム「<strong>js-img_row img_row</strong>」のすぐ下に、新規rowを用意。（クラスは不要）<br/>\n 中に、[単体パーツ＞デフォルト＞ボタンパーツ]を配置し、クラス名「<strong>js-loopStop_btn loopStop_btn</strong>」を追加。<br/>\n リンク先を[このページの一番上に遷移]に設定する。※リンク先を設定しないと表示されません。<br/>\n ※古いページ内リンク対策が入ったJSパーツと併用している場合、上記のリンク設定[#]だと正しく動かない場合があります。その際はTOPページ等に設定してください。（URLが[#]以外になれば問題ありません）<br/>\n ※必ずデフォルトパーツを使用してください。デザインパーツを使用した場合、打ち消すスタイルが必要になります。<br/>\n ※ボタンテキストは表示されませんが、適当に「再生・停止ボタン」などと設定しておくと良いかと思います。</li>\n</ol>\n<ul>\n<li>\n<ul>\n</ul>\n新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありませ<br/>\n ※再生・停止ボタン以外</li>\n</ul>\n<h2>注意点</h2><ul>\n<li>ロゴスクロールのセクションはコンテンツ幅を100%に広げているため、ロゴスクロール以外の要素を入れると崩れにつながる恐れがあります。</li>\n<li>2つのcol（カラム）に同じ画像を同じ順番で入れないとループになりません。</li>\n<li>[画像幅✕個数]がブラウザ幅より小さくなる場合、正常に表示されない可能性がありますのでご注意ください。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-8\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-12-26更新（1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- ロゴスクロール START v1.0.0-----*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section, section[data-designpart-id]:not(:root):not(:root):not(:root):not(:root)) {<br/>    &amp;.logoScroll_sec {<br/>      padding: 20px 0 10px;<br/>      @include breakpoint-sp {<br/>        padding: 10px 0;<br/>      }<br/>      .inner {<br/>        max-width: 100%;<br/>        padding: 0;<br/>        overflow: hidden;<br/>        .row {<br/>          &amp;.img_row {<br/>            display: flex !important;<br/>            width: max-content;<br/>            //アニメーション設定<br/>            &amp;.is-loopAnimation {<br/>              // 必要に応じて外す（※hoverで停止させる）<br/>              // &amp;:hover {<br/>              //   .col {<br/>              //     &amp;:first-child,<br/>              //     &amp;:last-child {<br/>              //       animation-play-state: paused;<br/>              //     }<br/>              //   }<br/>              // }<br/>              .col {<br/>                will-change: transform;<br/>                &amp;:first-child {<br/>                  animation: loop 120s -60s linear infinite;<br/>                }<br/>                &amp;:last-child {<br/>                  animation: loop2 120s linear infinite;<br/>                }<br/>              }<br/>              @keyframes loop {<br/>                0% {<br/>                  transform: translateX(100%);<br/>                }<br/>                to {<br/>                  transform: translateX(-100%);<br/>                }<br/>              }<br/>              @keyframes loop2 {<br/>                0% {<br/>                  transform: translateX(0);<br/>                }<br/>                to {<br/>                  transform: translateX(-200%);<br/>                }<br/>              }<br/>              // 逆再生<br/>              &amp;.op_reverse {<br/>                .col {<br/>                  &amp;:first-child {<br/>                    animation-direction: reverse;<br/>                  }<br/>                  &amp;:last-child {<br/>                    animation-direction: reverse;<br/>                  }<br/>                }<br/>              }<br/>              // 高速再生<br/>              &amp;.op_highspeed {<br/>                .col {<br/>                  &amp;:first-child {<br/>                    animation: loop 25s -12.5s linear infinite;<br/>                  }<br/>                  &amp;:last-child {<br/>                    animation: loop2 25s linear infinite;<br/>                  }<br/>                }<br/>              }<br/>              // 停止ボタン押したら止める<br/>              &amp;.-stop {<br/>                .col {<br/>                  &amp;:first-child,<br/>                  &amp;:last-child {<br/>                    animation-play-state: paused;<br/>                  }<br/>                }<br/>              }<br/>            }<br/>            .col {<br/>              display: flex !important;<br/>              width: 100% !important;<br/>              height: 100%;<br/>              padding: 0;<br/>              justify-content: space-around;<br/>              align-items: center;<br/>              .component {<br/>                margin: 0;<br/>                &amp;.image {<br/>                  width: 200px;<br/>                  margin: 0 10px;<br/>                  @include breakpoint-sp {<br/>                    width: 125px;<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>          &amp;:has(.col .loopStop_btn) {<br/>            max-width: 1100px;<br/>            margin: 0 auto;<br/>            padding: 0 20px;<br/>          }<br/>          .col {<br/>            .component {<br/>              // 再生・停止ボタン<br/>              &amp;.loopStop_btn {<br/>                margin-top: 30px;<br/>                .button-cont {<br/>                  a {<br/>                    display: inline-flex;<br/>                    justify-content: center;<br/>                    align-items: center;<br/>                    width: 30px;<br/>                    height: 30px;<br/>                    border-radius: 50vh;<br/>                    background: transparent;<br/>                    border: 2px solid #999;<br/>                    font-size: 0; //テキスト非表示<br/>                    letter-spacing: 0;<br/>                    line-height: 1;<br/>                    padding: 0;<br/>                    position: relative;<br/>                    &amp;::before {<br/>                      content: \"\\f04d\"; //停止アイコン<br/>                      font-family: $font_family_awsm5;<br/>                      font-weight: 900;<br/>                      font-size: 15px;<br/>                      color: #999;<br/>                      position: absolute;<br/>                      top: 50%;<br/>                      left: 50%;<br/>                      transform: translate(-50%, -50%);<br/>                    }<br/>                    // 停止時アイコン切り替え<br/>                    &amp;.-stop {<br/>                      &amp;::before {<br/>                        content: \"\\f04b\"; //再生アイコン<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- ロゴスクロール END -----*/</section>\n\n<section class=\"content-element content-9\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-07-24更新（1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- ロゴスクロール 編集画面用 START v1.0.0--*/<br/>:is(section,section[data-designpart-id]:not(:root):not(:root):not(:root):not(:root)) {<br/>  &amp;.logoScroll_sec {<br/>    .inner {<br/>      max-width: 1100px;<br/>      padding: 20px;<br/>      overflow: inherit;<br/>      .row {<br/>        &amp;.img_row {<br/>          display: table;<br/>          width: auto;<br/>          //アニメーション設定<br/>          &amp;.is-loopAnimation {<br/>            .col {<br/>              &amp;:first-child,<br/>              &amp;:last-child {<br/>                animation: none;<br/>              }<br/>            }<br/>            // 逆再生<br/>            &amp;.op_reverse {<br/>              .col {<br/>                &amp;:first-child,<br/>                &amp;:last-child {<br/>                  animation: none;<br/>                }<br/>              }<br/>            }<br/>            // 高速再生<br/>            &amp;.op_highspeed {<br/>              .col {<br/>                &amp;:first-child,<br/>                &amp;:last-child {<br/>                  animation: none;<br/>                }<br/>              }<br/>            }<br/>          }<br/>          .col {<br/>            display: table-cell !important;<br/>            width: 50% !important;<br/>            height: 100%;<br/>            padding: 0 10px 10px;;<br/>            .component {<br/>              &amp;.image {<br/>                // width: 100%;//必要に応じて外す<br/>                margin: 20px 0;<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- ロゴスクロール 編集画面用 END --*/</section>\n\n<section class=\"content-element content-10\"><h2>JavaScript</h2><p><strong>2023-12-26更新（1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  'use strict';<br/>  /* ----------------<br/>    ロゴスクロール v1.0.0<br/>  ---------------- */<br/>  document.addEventListener('DOMContentLoaded', function () {<br/>    /* スクロールするロゴ画像を取得 */<br/>    const loopImgArray = document.querySelectorAll('.js-img_row .image img');<br/>    /* スクロールするrowを取得 */<br/>    const loopLow = document.querySelectorAll('.js-img_row');<br/>    /* スクロール画像が入ったセクションを取得 */<br/>    const loopImgSec = document.querySelectorAll('.js-logoScroll_sec');<br/><br/>    setTimeout(() =&gt; {<br/>      for (let i = 0; i &lt; loopImgArray.length; i++) {<br/>        loopImgArray[i].removeAttribute('loading');<br/>      }<br/><br/>      for (let i = 0; i &lt; loopLow.length; i++) {<br/>        loopLow[i].classList.add('is-loopAnimation');<br/>      }<br/> <br/>      /* 再生・停止ボタン処理 */<br/>      for (let i = 0; i &lt; loopImgSec.length; i++) {<br/>        const loopStopBtn = loopImgSec[i].querySelector('.js-loopStop_btn a');<br/>        if(loopStopBtn) {<br/>          loopStopBtn.addEventListener('click', function(e) {<br/>            e.preventDefault();<br/>            if (this.classList.contains('-stop')) {<br/>              this.classList.add('-start');<br/>              this.classList.remove('-stop');<br/>              loopLow[i].classList.remove('-stop');<br/>            } else {<br/>              this.classList.add('-stop');<br/>              loopLow[i].classList.add('-stop');<br/>              this.classList.remove('-start');<br/>            }<br/>          });<br/>        }<br/>      }<br/>    }, 500);<br/>  });<br/>  /* ----------------<br/>    ロゴスクロール END<br/>  ---------------- */<br/>&lt;/script&gt;</section>\n\n<section class=\"content-element content-11\"></section>"
  },
  {
    "title": "ふわっとフェードイン",
    "url": "https://js-part.hmup.jp/js/fade-slide-in",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>ふわっとフェードイン</h2><p>要素がウィンドウ画面内に入ったらふわっとフェード＆スライドインする<br/>\n※SPでは無効化</p>\n</section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能<br/>\n   パーツ</th>\n<th>変更可能箇所</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>基本どのパーツでも可※1</p>\n</td>\n<td>\n<ul>\n<li>要素がフェードイン<br/>\n    する方向（その場/上/下/右/左）<br/>\n     </li>\n</ul>\n<p><strong>JS変更箇所</strong></p>\n<ul>\n<li>フェードイン時の速さ※①</li>\n<li>フェードイン時のスクロール量※②</li>\n<li>SP時の挙動</li>\n</ul>\n</td>\n<td>〇</td>\n<td>〇</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：component単位〜から可能。クラスの付与ができないパーツは不可になります。（一文字ずつフェードインなど×）</p>\n<p><br/>\n<strong>【JS】</strong><br/>\n   ※①：デフォルトの表示速度は0.8秒です。<br/>\n   ※②：デフォルトのスクロール量は100pxです。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>その場からフェードイン</h2><p>テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。</p>\n<h3>課題解決のアンサー見出し（h3）</h3><p>テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<h3>課題解決のアンサー見出し（h3）<br/></h3><p>テキストテキスト テキストテキスト テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<a href=\"/reason\">選ばれる理由</a></section>\n\n<section class=\"content-element content-4\" style=\"background-color:#fbf9ef\"><h2>下から上にフェードイン</h2><p>テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。</p>\n<h3>課題解決のアンサー見出し（h3）</h3><p>テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<h3>課題解決のアンサー見出し（h3）<br/></h3><p>テキストテキスト テキストテキスト テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<a href=\"/reason\">選ばれる理由</a></section>\n\n<section class=\"content-element content-5\"><h2>上から下にフェードイン</h2><p>テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。</p>\n<h3>課題解決のアンサー見出し（h3）</h3><p>テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<h3>課題解決のアンサー見出し（h3）<br/></h3><p>テキストテキスト テキストテキスト テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<a href=\"/reason\">選ばれる理由</a></section>\n\n<section class=\"content-element content-6\" style=\"background-color:#fbf9ef\"><h2>左からフェードイン</h2><p>テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。</p>\n<h3>課題解決のアンサー見出し（h3）</h3><p>テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<h3>課題解決のアンサー見出し（h3）<br/></h3><p>テキストテキスト テキストテキスト テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<a href=\"/reason\">選ばれる理由</a></section>\n\n<section class=\"content-element content-7\"><h2>右からフェードイン</h2><p>テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。テキスト文章が入ります。</p>\n<h3>課題解決のアンサー見出し（h3）</h3><p>テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<h3>課題解決のアンサー見出し（h3）<br/></h3><p>テキストテキスト テキストテキスト テキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキストテキスト</p>\n<a href=\"/reason\">選ばれる理由</a></section>\n\n<section class=\"content-element content-8\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページで使用する場合は<strong>共通フッター</strong>に配置。</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>ふわっとフェードインさせたいパーツに下記クラス名を用途に合わせて追加。（基本は行（row）に付与するのがおすすめ）\n <ul>\n<li>下から上にフェードイン→「<strong>fade-up</strong>」</li>\n<li>上から下にフェードイン→「<strong>fade-down</strong>」</li>\n<li>左からフェードイン→「<strong>fade-left</strong>」</li>\n<li>右からフェードイン→「<strong>fade-right</strong>」</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-9\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-08-23更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- ふわっとフェード v1.0.0-----*/<br/>:is(<br/>  .fade-up,<br/>  .fade-down,<br/>  .fade-left,<br/>  .fade-right,<br/>) {<br/>  @include breakpoint-pc {<br/>    opacity: 0;//読み込み時ちらつき防止<br/>  }<br/>}<br/>/*----- ふわっとフェード END -----*/</section>\n\n<section class=\"content-element content-10\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-08-23更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- ふわっとフェード 編集画面用 START v1.0.0--*/<br/>:is(<br/>  .fade-up,<br/>  .fade-down,<br/>  .fade-left,<br/>  .fade-right,<br/>) {<br/>  opacity: 1;//読み込み時ちらつき防止<br/>}<br/>/*-- ふわっとフェード 編集画面用 END --*/</section>\n\n<section class=\"content-element content-11\"><h2>①jQueryを設定</h2><p>JavaScript埋め込みパーツを設置し、CDNで読み込んだ最新バージョンのjQueryを反映させます。<br/>\n※jQueryコンフリクト回避 のため<br/>\n<br/>\n複数のJSパーツを使用する場合は、こちらの①jQueryの読み込みは一度だけで大丈夫です。</p>\n<p><strong>2024-01更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script<br/>  src=\"https://code.jquery.com/jquery-3.6.0.min.js\"<br/>  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"<br/>  crossorigin=\"anonymous\"<br/>&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  'use strict';<br/>  /*--- jQueryコンフリクト回避 v1.0.0---*/<br/>  jQuery.noConflict();<br/><br/>  /*--- この下にJavaScriptを記述していく---*/<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-12\"><h2>②JavaScript</h2><p>①の下に新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p>\n<p><strong>2024-05-02更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* ---------------------------<br/>   ふわっとフェード v1.0.0<br/>  --------------------------- */<br/>  /* function()で囲むと「loadメソッド」によるsafariの読み込みバグが発生するため、モジュール化なし（他のJSパーツと併用する場合は変数・関数がかぶらないように注意） */<br/>  /*---------------------------------<br/>    変数定義 【変更可能】 START<br/>  ---------------------------------*/<br/>  const offset_bottom = 100; /* 画面下からどの位置でフェードインさせるか(px) */<br/>  const spMoveFlag = false; /* SP時にフェードインする場合は「 true 」、しない場合は「 false 」 */<br/>  /*------------- デフォルトフェードイン -------------*/<br/>  const fade_time = 800; /* フェードの時間(ms) */<br/>  /*------------- 下から上にフェードイン -------------*/<br/>  const fade_up_move = 100; /* どのぐらい要素を動かすか(px) */<br/>  const fade_up_time = 800; /* フェードの時間(ms) */<br/>  /*------------- 上から下にフェードイン -------------*/<br/>  const fade_down_move = 100; /* どのぐらい要素を動かすか(px) */<br/>  const fade_down_time = 800; /* フェードの時間(ms) */<br/>  /*------------- 左からフェードイン -------------*/<br/>  const fade_left_move = 100; /* どのぐらい要素を動かすか(px) */<br/>  const fade_left_time = 800; /* フェードの時間(ms) */<br/>  /*------------- 右からフェードイン -------------*/<br/>  const fade_right_move = 100; /* どのぐらい要素を動かすか(px) */<br/>  const fade_right_time = 800; /* フェードの時間(ms) */<br/>  /*---------------------------------<br/>    変数定義 【変更可能】 END<br/>  ---------------------------------*/<br/><br/>  /*--- PC or SP　判定 ---*/<br/>  function windowPCorSP() {<br/>    if (window.matchMedia('(min-width: 770px)').matches) {<br/>      /* 画面幅が770px以上のときの処理(PC) */<br/>      return 'pc';<br/>    } else {<br/>      /* 画面幅が769px以下のときの処理(SP) */<br/>      return 'sp';<br/>    }<br/>  }<br/><br/>  /*------------- デフォルトフェードイン フェード前のcssを定義 -------------*/<br/>  function fadeSetUp() {<br/>    jQuery('.fade').css({<br/>      opacity: 0,<br/>      transition: `${fade_time}ms`,<br/>    });<br/>  };<br/><br/>  function fade(scroll_top, scroll_bottom, fade_position) {<br/>    jQuery('.fade').each(function () {<br/>      const this_position = jQuery(this).offset().top;<br/>      if (fade_position &gt; this_position) {<br/>        jQuery(this).css({<br/>          opacity: 1,<br/>          transform: 'none',<br/>        });<br/>      }<br/>    });<br/>  }<br/><br/>  /*------------- 下から上にフェードイン フェード前のcssを定義 -------------*/<br/>  function fadeUpSetUp() {<br/>    jQuery('.fade-up').css({<br/>      opacity: 0,<br/>      transform: `translateY(${fade_up_move}px)`,<br/>      transition: `${fade_up_time}ms`,<br/>    });<br/>  };<br/><br/>  function fadeUp(scroll_top, scroll_bottom, fade_position) {<br/>    jQuery('.fade-up').each(function () {<br/>      const this_position = jQuery(this).offset().top;<br/>      if (fade_position &gt; this_position) {<br/>        jQuery(this).css({<br/>          opacity: 1,<br/>          transform: 'translateY(0)',<br/>        });<br/>      }<br/>    });<br/>  }<br/><br/>  /*------------- 上から下にフェードイン フェード前のcssを定義 -------------*/<br/>  function fadeDownSetUp() {<br/>    jQuery('.fade-down').css({<br/>      opacity: 0,<br/>      transform: `translateY(${-fade_down_move}px)`,<br/>      transition: `${fade_down_time}ms`,<br/>    });<br/>  };<br/><br/>  function fadeDown(scroll_top, scroll_bottom, fade_position) {<br/>    jQuery('.fade-down').each(function () {<br/>      const this_position = jQuery(this).offset().top;<br/>      if (fade_position &gt; this_position) {<br/>        jQuery(this).css({<br/>          opacity: 1,<br/>          transform: 'translateY(0)',<br/>        });<br/>      }<br/>    });<br/>  }<br/><br/>  /*------------- 左からフェードイン フェード前のcssを定義 -------------*/<br/>  function fadeLeftSetUp() {<br/>    jQuery('.fade-left').css({<br/>      opacity: 0,<br/>      transform: `translateX(${-fade_left_move}px)`,<br/>      transition: `${fade_left_time}ms`,<br/>    });<br/>  }<br/><br/>  function fadeLeft(scroll_top, scroll_bottom, fade_position) {<br/>    jQuery('.fade-left').each(function () {<br/>      const this_position = jQuery(this).offset().top;<br/>      if (fade_position &gt; this_position) {<br/>        jQuery(this).css({<br/>          opacity: 1,<br/>          transform: 'translateX(0)',<br/>        });<br/>      }<br/>    });<br/>  }<br/><br/>  /*------------- 右からフェードイン フェード前のcssを定義 -------------*/<br/>  function fadeRightSetUp() {<br/>    jQuery('.fade-right').css({<br/>      opacity: 0,<br/>      transform: `translateX(${fade_right_move}px)`,<br/>      transition: `${fade_right_time}ms`,<br/>    });<br/>  }<br/><br/>  function fadeRight(scroll_top, scroll_bottom, fade_position) {<br/>    jQuery('.fade-right').each(function () {<br/>      const this_position = jQuery(this).offset().top;<br/>      if (fade_position &gt; this_position) {<br/>        jQuery(this).css({<br/>          opacity: 1,<br/>          transform: 'translateX(0)',<br/>        });<br/>      }<br/>    });<br/>  }<br/><br/>  /* スクロールまたはロードするたびに実行 */<br/>  function windowScrollFadeIn() {<br/>    jQuery(window).on('scroll load', function () {<br/>      const scroll_top = jQuery(this).scrollTop();<br/>      const scroll_bottom = scroll_top + jQuery(this).height();<br/>      const fade_position = scroll_bottom - offset_bottom;<br/><br/>      fade(scroll_top, scroll_bottom, fade_position);<br/>      fadeUp(scroll_top, scroll_bottom, fade_position);<br/>      fadeDown(scroll_top, scroll_bottom, fade_position);<br/>      fadeLeft(scroll_top, scroll_bottom, fade_position);<br/>      fadeRight(scroll_top, scroll_bottom, fade_position);<br/>    });<br/>  }<br/><br/>  /*--- ウィンドウのリサイズ完了後の処理 ---*/<br/>  const windowResize = () =&gt; {<br/>    let timer = 0;<br/>    let delay = 200;<br/>    window.addEventListener(<br/>      'resize',<br/>      () =&gt; {<br/>        clearTimeout(timer);<br/>        timer = setTimeout(() =&gt; {<br/>          if ( windowPCorSP() === 'pc' ) {<br/>            windowScrollFadeIn();<br/>          } else if ( windowPCorSP() === 'sp' &amp;&amp; spMoveFlag ) {<br/>            windowScrollFadeIn();<br/>          }<br/>        }, delay);<br/>      },<br/>      false<br/>    );<br/>  };<br/><br/>  if ( windowPCorSP() === 'pc') {<br/>    fadeSetUp();<br/>    fadeUpSetUp();<br/>    fadeDownSetUp();<br/>    fadeLeftSetUp();<br/>    fadeRightSetUp();<br/>    windowScrollFadeIn();<br/>  } else if ( windowPCorSP() === 'sp' &amp;&amp; spMoveFlag ) {<br/>    fadeSetUp();<br/>    fadeUpSetUp();<br/>    fadeDownSetUp();<br/>    fadeLeftSetUp();<br/>    fadeRightSetUp();<br/>    windowScrollFadeIn();<br/>  }<br/>  /* ---------------------------<br/>    ふわっとフェード END<br/>  --------------------------- */<br/>&lt;/script&gt;<br/><br/></section>\n\n<section class=\"content-element content-13\">  </section>"
  },
  {
    "title": "アコーディオン（行ver.）",
    "url": "https://js-part.hmup.jp/js/row-accordion",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>アコーディオン（行ver.）</h2></section>\n\n<section class=\"content-element content-2\">\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>NG</th>\n<th>同一ページに<br/>\n   複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>（行に設置可能なパーツ）</p>\n<ul>\n<li>カラム（~4つまで）</li>\n<li>基本パーツ\n    <ul>\n<li>リッチテキストパーツ</li>\n<li>見出しパーツ</li>\n<li>ボタンパーツ</li>\n<li>画像パーツ　etc...</li>\n</ul>\n</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>行の背景色</li>\n<li>\n<p>行の角丸/ボックスシャドウ</p>\n</li>\n<li>行の余白</li>\n<li>テキストカラー</li>\n<li>\n<p>[＋]アイコンのデザイン</p>\n</li>\n</ul>\n<p> </p>\n<p><strong>JS変更箇所</strong></p>\n<ul>\n<li>アコーディオンの開閉時間 ※①<br/>\n    変数名 : <strong>duration02</strong></li>\n</ul>\n</td>\n<td>展開領域内で<br/>\n   行を複数配置✕※1</td>\n<td>〇</td>\n<td>\n<p>〇</p>\n</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：クリック領域の行（row）と展開領域の行（row）にはそれぞれ一つずつしか行（row）を置けません。<br/>\n   （例）展開領域内で4カラムの行を２つ配置→NG✕</p>\n<p><br/>\n<strong>【JS】</strong><br/>\n    ※①：デフォルトの開閉速度は0.3秒です。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n<a href=\"#structure\">構造図を見る</a></section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><p>ダミーテキストダミーテキストダミーテキストダミーテキストダミーテキスト</p>\n<h3>見出し</h3><p>ダミーテキストダミーテキストダミーテキストダミーテキストダミーテキスト</p>\n<p>ダミーテキストダミーテキストダミーテキストダミーテキストダミーテキスト</p>\n<h3>見出し</h3><h3>見出し</h3><p>ダミーテキストダミーテキストダミーテキストダミーテキストダミーテキスト</p>\n<p>ダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキスト</p>\n<h3>見出し</h3><p>ダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキスト</p>\n<p>ダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキストダミーテキスト</p>\n<a href=\"#\">ボタン</a></section>\n\n<section class=\"content-element content-4\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-5\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSをカスタムCSSに記述。</li>\n<li>JavaScriptを<strong>使用したいパーツのセクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>CSSはデザインに合わせて適宜変更してください。<br/>\n  </li>\n</ul>\n<ol>\n<li>クリック対象の行（row）にクラス名「<strong>js-accordionBtn_row accordionBtn_row</strong>」の2つを追加。<br/>\n ※この行がアコーディオンのクリック領域になります。</li>\n<li>上記の直下に行（row）を新規追加し、クラス名「<strong>js-accordionElements_row accordionElements_row</strong>」の2つを追加。<br/>\n ※この行がクリック後の表示領域になります。</li>\n<li>\n<p>プラス[＋]アイコンなどの挙動は、各自カスタムCSSで調整してください。</p>\n</li>\n</ol>\n<h2>注意点</h2><ul>\n<li>クリック領域の行に対して、表示領域の行を2つ以上使用することはできません。</li>\n<li>「クリック領域の行」と「表示領域の行」は必ず連続で並べてください。間に他の行が入ると正常に表示されません。</li>\n<li>表示領域の行のdisplayの値をtableからflexに変更しており、通常の行と構造が変わっているのでご注意ください。</li>\n<li>\n<p>新CMSの場合：複合パーツ[Q&amp;A]は従来のものと構造が異なるため、使用できません。デフォルトパーツを使用し、上記フローに沿って構築するようにしてください。</p>\n</li>\n</ul>\n</section>\n\n<section class=\"content-element content-6\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2024-01-26更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- アコーディオン（行ver.） START v1.0.0-----*/<br/>.theme-fo-base {<br/>  .wrapper {<br/>    .contents {<br/>      section {<br/>        .inner {<br/>          .row {<br/>            &amp;.accordionBtn_row,<br/>            &amp;.accordionElements_row {<br/>              background: #fff;<br/>              margin: 0;<br/>              padding: 20px 30px;<br/>              @include breakpoint-sp {<br/>                padding: 20px;<br/>              }<br/>              .col {<br/>                width: 100%;<br/>              }<br/>            }<br/>            &amp;.accordionBtn_row {<br/>              cursor: pointer;<br/>              position: relative;<br/>              padding-right: 70px;<br/>              @include breakpoint-sp {<br/>                padding-right: 60px;<br/>              }<br/>              //アコーディオンOPEN<br/>              &amp;.is-active {<br/>                &amp;::after {<br/>                  content: \"\\f056\";<br/>                }<br/>              }<br/>              &amp;::after {<br/>                content: \"\\f055\";<br/>                font-family: $font_family_awsm6;<br/>                display: inline-block;<br/>                position: absolute;<br/>                top: 50%;<br/>                right: 20px;<br/>                transform: translateY(-50%);<br/>                font-size: 28px;<br/>                font-weight: 900;<br/>                line-height: 1;<br/>                color: #ffad2f;<br/>              }<br/>              .col {<br/>                .component {<br/>                  &amp;.heading {<br/>                    :is(h1,h2,h3,h4,h5) {<br/>                      cursor: inherit;<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>            &amp;.accordionElements_row {<br/>              display: flex;<br/>              gap: 20px;<br/>              @include breakpoint-sp {<br/>                flex-direction: column;<br/>                gap: 0;<br/>                padding-top: 0;<br/>              }<br/>              &amp; + .accordionBtn_row {<br/>                margin-top: 30px;<br/>                @include breakpoint-sp {<br/>                  margin-top: 20px;<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- アコーディオン（行ver.） END -----*/</section>\n\n<section class=\"content-element content-7\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2024-01-26更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- アコーディオン（行ver.） 編集画面用 START v1.0.0-----*/<br/>.row {<br/>  &amp;.accordionBtn_row,<br/>  &amp;.accordionElements_row {<br/>    position: relative;<br/>    &amp;::before {<br/>      position: absolute;<br/>      color: #fff;<br/>      padding: 5px 5px;<br/>      right: 0;<br/>      top: -24px;<br/>      font-size: 14px;<br/>      line-height: 1;<br/>    }<br/>  }<br/>  &amp;.accordionBtn_row {<br/>    border: 1px solid #000;<br/>    &amp;::before {<br/>      content: \"クリック領域\";<br/>      background: #000;<br/>    }<br/>  }<br/>  &amp;.accordionElements_row {<br/>    border: 1px solid #00f;<br/>    &amp;::before {<br/>      content: \"展開領域\";<br/>      background: #00f;<br/>    }<br/>  }<br/>}<br/>/*----- アコーディオン（行ver.） 編集画面用 END -----*/</section>\n\n<section class=\"content-element content-8\"><h2>JavaScript</h2><p><strong>2024-09-06更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  'use strict';<br/>  /* -------------------------------<br/>    アコーディオン（行ver.） v1.0.0<br/>  --------------------------------- */<br/>  /*------------- 変数定義 【変更可能】 START -------------*/<br/>  const rowDuration = 300;/* アコーディオンが表示されるまでの時間 [ms] */<br/>  /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>  /* アコーディオンでスライドさせたい要素を取得 (クラス名を指定) */<br/>  const rowSlideToggleElements = document.querySelectorAll('.js-accordionElements_row');<br/>  /* スライドを起動するトリガーのボタンを取得 (クラス名を指定) */<br/>  const rowSlideToggleBtn = document.querySelectorAll('.js-accordionBtn_row');<br/><br/>  rowSlideToggleElements.forEach((an) =&gt; {<br/>    an.style.display = 'none';<br/>  });<br/><br/>  /* slideToggle */<br/>  rowSlideToggleBtn.forEach((rowSlideToggleBtn) =&gt; {<br/>    rowSlideToggleBtn.addEventListener('click', () =&gt; {<br/>      if (rowSlideToggleBtn.nextElementSibling.classList.contains(\"js-accordionElements_row\")) {<br/>        const el = rowSlideToggleBtn.nextElementSibling;<br/>        rowSlideToggle(el, rowDuration);<br/>      }<br/>    });<br/>  });<br/><br/>  /* slideUp */<br/>  const rowSlideUp = (el, rowDuration) =&gt; {<br/>    el.previousElementSibling.classList.remove('is-active');<br/>    el.style.height = el.offsetHeight + 'px';<br/>    el.offsetHeight;<br/>    el.style.transitionProperty = 'height, margin, padding';<br/>    el.style.transitionDuration = rowDuration + 'ms';<br/>    el.style.transitionTimingFunction = 'ease';<br/>    el.style.overflow = 'hidden';<br/>    el.style.height = 0;<br/>    el.style.paddingTop = 0;<br/>    el.style.paddingBottom = 0;<br/>    el.style.marginTop = 0;<br/>    el.style.marginBottom = 0;<br/>    setTimeout(() =&gt; {<br/>      el.style.display = 'none';<br/>      el.style.removeProperty('height');<br/>      el.style.removeProperty('padding-top');<br/>      el.style.removeProperty('padding-bottom');<br/>      el.style.removeProperty('margin-top');<br/>      el.style.removeProperty('margin-bottom');<br/>      el.style.removeProperty('overflow');<br/>      el.style.removeProperty('transition-duration');<br/>      el.style.removeProperty('transition-property');<br/>      el.style.removeProperty('transition-timing-function');<br/>    }, rowDuration);<br/>  };<br/><br/>  /* slideDown */<br/>  const rowSlideDown = (el, rowDuration) =&gt; {<br/>    el.previousElementSibling.classList.add('is-active');<br/>    el.style.removeProperty('display');<br/>    let display = window.getComputedStyle(el).display;<br/>    if (display === 'none') {<br/>      display = 'flex';<br/>    }<br/>    el.style.display = display;<br/>    let height = el.offsetHeight;<br/>    el.style.overflow = 'hidden';<br/>    el.style.height = 0;<br/>    el.style.paddingTop = 0;<br/>    el.style.paddingBottom = 0;<br/>    el.style.marginTop = 0;<br/>    el.style.marginBottom = 0;<br/>    el.offsetHeight;<br/>    el.style.transitionProperty = 'height, margin, padding';<br/>    el.style.transitionDuration = rowDuration + 'ms';<br/>    el.style.transitionTimingFunction = 'ease';<br/>    el.style.height = height + 'px';<br/>    el.style.removeProperty('padding-top');<br/>    el.style.removeProperty('padding-bottom');<br/>    el.style.removeProperty('margin-top');<br/>    el.style.removeProperty('margin-bottom');<br/>    setTimeout(() =&gt; {<br/>      el.style.removeProperty('height');<br/>      el.style.removeProperty('overflow');<br/>      el.style.removeProperty('transition-duration');<br/>      el.style.removeProperty('transition-property');<br/>      el.style.removeProperty('transition-timing-function');<br/>    }, rowDuration);<br/>  };<br/><br/>  /* slideToggle */<br/>  const rowSlideToggle = (el, rowDuration) =&gt; {<br/>    if (window.getComputedStyle(el).display === 'none') {<br/>      return rowSlideDown(el, rowDuration);<br/>    } else {<br/>      return rowSlideUp(el, rowDuration);<br/>    }<br/>  };<br/>  /* -------------------------------<br/>    アコーディオン（行ver.） END<br/>  --------------------------------- */<br/>&lt;/script&gt;</section>\n\n<section class=\"content-element content-9\"></section>"
  },
  {
    "title": "タブ切り替え (リストボタンver.)",
    "url": "https://js-part.hmup.jp/js/tab02",
    "html": "<section class=\"content-element content-1 title_hd_sec\" style=\"background-color:#fbf9ef\"><h2>タブ切り替え<br/>（リストボタンver.）<br/></h2>リンクリストをボタンとしてタブを切り替える</section>\n\n<section class=\"content-element content-2\"><p>※デザインにより工数変動あり</p>\n\n<table>\n<thead>\n<tr>\n<th>追加可能パーツ</th>\n<th>変更可能箇所</th>\n<th>変更NG</th>\n<th>同一ページ<br/>\n   に複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p><strong>■タブ</strong><br/>\n   ×<br/>\n<br/>\n<strong>■コンテンツ部分</strong><br/>\n（カラムに設置可能なパーツ）</p>\n<ul>\n<li>デザインパーツ \n<ul>\n<li>見出しパーツ</li>\n<li>リッチテキストパーツ</li>\n<li>ボタンパーツ</li>\n<li>画像パーツ　etc...</li>\n</ul>\n</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>タブの数※1</li>\n<li>タブの背景色/テキストカラー/余白</li>\n<li>コンテンツ部分の背景色</li>\n</ul>\n</td>\n<td>\n<p>後から顧客側でタブ数を変更は不可※2</p>\n</td>\n<td>〇</td>\n<td>〇</td>\n</tr>\n</tbody>\n</table>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：編集画面のリンクリストを使用して増減可能。一段で並ぶタブ数はCSSで変更可◎<br/>\n   →タブ数が端数（5,7~）だった場合、2段にすると見た目が揃わないため1段のみで構築するなどして工夫する必要があります。<br/>\n   ※2：<a href=\"//js-part.hmup.jp/js-private/tab\">タブ切り替え（colボタンver.）</a>と違ってタブの幅をCSSでコントロールするため、後からタブ数を変更すると場合によっては見た目が綺麗に揃わなくなる可能性があるので、後からの変更は不可とします。<br/>\n   ※タブエリアとタブコンテンツエリアが一つのセクション内に収まる形になります。<br/>\n   　セクションが分かれると困る場合は当パーツを使用するなどして使い分けるとよいかと思います。</p>\n<p>※<a href=\"//js-part.hmup.jp/js-private/tab\">タブ切り替え（colボタンver.）</a>と比べてコンテンツ内での複雑なレイアウト（2カラム以上〜）は基本できません。<br/>\n   （コンテンツ内でrowを複数使用できないため）</p>\n<p>※SP時はタブ切り替え用のボタンが横スクロールします。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n<p>フェレットワンで管理されたページのコンテンツ量の上限は、カラムにして大体150カラムが上限です。（個社ごとの扱い方によって変動します）<br/>\nこのタブ切り替えパーツでは、多くの情報をタブに分割・格納するパーツである特徴から、データ量の上限にあたりやすい特性を持ちます。<br/>\nデータ量の上限にあたると、「変更を保存できませんでした」というメッセージが表示されます。<br/>\n上記のエラーメッセージが表示された場合、パーツや行、カラム数を減らしていただく必要がございますので予めご了承ください。</p>\n<a href=\"#structure\">構造図を見る</a></section>\n\n<section class=\"content-element content-3\" style=\"background-color:#fbf9ef\"><h2>デモ</h2><ul><li>タブメニュー1</li><li>タブメニュー2</li><li>タブメニュー3</li><li>タブメニュー4</li></ul><h2>タブ切り替え行01</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p>\n<h3>機能１の見出し（h3）</h3><a href=\"/service\">サービスについて</a><h2>タブ切り替え行02</h2><ul>\n<li>○○ができていない</li>\n<li>○○を改善したい</li>\n<li>○○に不満を感じている</li>\n</ul>\n<h2>タブ切り替え行03</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p>\n<h2>タブ切り替え行04</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p>\n</section>\n\n<section class=\"content-element content-4\" style=\"background-color:#fbeff6\"><h2>デモ02</h2><ul><li>タブメニュー1</li><li>タブメニュー2</li><li>タブメニュー3</li><li>タブメニュー4</li><li>タブメニュー5</li><li>タブメニュー6</li><li>タブメニュー7</li><li>タブメニュー8</li></ul><h2>タブ切り替え行01</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p>\n<h3>機能１の見出し（h3）</h3><a href=\"/service\">サービスについて</a><h2>タブ切り替え行02</h2><ul>\n<li>○○ができていない</li>\n<li>○○を改善したい</li>\n<li>○○に不満を感じている</li>\n</ul>\n<h2>タブ切り替え行03</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p>\n<h2>タブ切り替え行04</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p>\n<h2>タブ切り替え行05</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p>\n<h2>タブ切り替え行06</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p>\n<h2>タブ切り替え行07</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p>\n<h2>タブ切り替え行08</h2><p>サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。サービス概要説明が入ります。</p>\n</section>\n\n<section class=\"content-element content-5\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n</section>\n\n<section class=\"content-element content-6\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>CSSをカスタムCSSに記述。</li>\n<li>編集画面用CSSを適切な位置に記述。</li>\n<li>JavaScriptを<strong>使用したいパーツ</strong>の<strong>セクション</strong>の<strong>一番下</strong>に配置。複数ページ設置する場合は<strong>共通フッター</strong>に配置。</li>\n<li>クラス名を見本とあわせる。</li>\n</ul>\n<ol>\n<li>新規行（row）を作成し、クラス名「<strong>tabNav02_row js-tabNav02_row</strong>」の２つを追加。[=タブエリア]</li>\n<li>上記行（row）内にリンクリストを設置し、クラス「<strong>tabNav02_list js-tabNav02_list</strong>」を追加。<br/>\n ※リンクは設定しないでください。</li>\n<li>上記行（row）のすぐ下にタブコンテンツ表示用の行（row）を新規作成し、クラス名「<strong>tab02_row js-tab02_row</strong>」を追加。</li>\n<li>\n<p>上で用意したタブ切り替え用のボタン「<strong>js-tabNav02_list</strong>」の並び順とタブコンテンツ表示用の行「<strong>js-tab02_row</strong>」の配置順が連動しているので、タブ切り替え用のボタンの数だけ行（row）を下に順番に追加していってください。<br/>\n ※<a href=\"#structure\">構造図</a>参照</p>\n</li>\n</ol>\n<p>※デフォルトではSP時タブ部分がスクロールします。（CSSで適宜変更可能）<br/>\n※タブの横幅はカスタムCSSで適宜調整してください。（デフォルトでは4つ並びになるようにしています）<br/>\n※JSで表示をコントロールする際に「display:block;」がかかる関係で強制的に縦並びになるため、2カラム以上のレイアウトは不可としています。（留意事項にも記載あり）</p>\n<ul>\n<li>新CMSの場合：基本デザインパーツ（セクションパーツ、複合パーツ、単体パーツ）を使用して問題ありません。</li>\n</ul>\n<h2>注意点</h2><ul>\n<li>タブ切り替え用の行の間にタブ切り替え以外のパーツを配置しないでください。</li>\n<li>スマホ編集画面機能との併用はできません。</li>\n</ul>\n</section>\n\n<section class=\"content-element content-7\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2023-07-25更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- タブ切り替え（リストボタンver.） START v1.0.0-----*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>    .inner {<br/>      .row {<br/>        // タブ切り替え ボタンエリア<br/>        &amp;.tabNav02_row {<br/>          &amp; + .tab02_row {<br/>            display: block;// １つ目のタブコンテンツだけ初期読み込み時に表示<br/>          }<br/>          .col {<br/>            padding: 0;<br/>            .component {<br/>              &amp;.list {<br/>                &amp;.tabNav02_list {<br/>                  margin: 0;<br/>                  ul {<br/>                    display: flex;<br/>                    flex-wrap: wrap;<br/>                    gap: 5px;<br/>                    @include breakpoint-ssp {<br/>                      flex-wrap: nowrap;<br/>                      overflow: auto;//SP時横にスライド<br/>                    }<br/>                    &amp;::-webkit-scrollbar {<br/>                      display: none;//スクロールバー非表示<br/>                      -ms-overflow-style: none;//Edge対策<br/>                      scrollbar-width: none;//Firefox対策<br/>                    }<br/>                    li {<br/>                      cursor: pointer;<br/>                      width: calc((100% - 5px * 3) / 4);<br/>                      display: block;<br/>                      background: #fff;<br/>                      font-weight: bold;<br/>                      text-align: center;<br/>                      margin: 0;<br/>                      padding: 20px;<br/>                      @include breakpoint-ssp {<br/>                        min-width: 130px;<br/>                        font-size: 12px;<br/>                        padding: 15px 10px;<br/>                      }<br/>                      &amp;:hover {<br/>                        background: #ffc72e;<br/>                        color: #fff;<br/>                      }<br/>                      &amp;.is-active {<br/>                        background: #ffad2f;<br/>                        color: #fff;<br/>                      }<br/>                      // 5個目以降〜下余白つける<br/>                      &amp;:nth-child(n + 5) {<br/>                        @include breakpoint-pc {<br/>                          margin-bottom: 5px;<br/>                        }<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>        // タブ切り替え コンテンツエリア<br/>        &amp;.tab02_row {<br/>          display: none;// 2個目以降のタブコンテンツ初期読み込み時に非表示<br/>          background: #fff;<br/>          padding: 30px;<br/>          .col {<br/>            display: block;<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- タブ切り替え（リストボタンver.） END -----*/<br/></section>\n\n<section class=\"content-element content-8\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2023-07-25更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- タブ切り替え（リストボタンver.） 編集画面用 START v1.0.0--*/<br/>:is(section,section[data-designpart-id]:not(:root:root:root:root)) {<br/>  .inner {<br/>    .row {<br/>      &amp;.tab02_row {<br/>        display: block !important;<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- タブ切り替え（リストボタンver.） 編集画面用 END --*/<br/></section>\n\n<section class=\"content-element content-9\"><h2>①jQueryを設定</h2><p>JavaScript埋め込みパーツを設置し、CDNで読み込んだ最新バージョンのjQueryを反映させます。<br/>\n※jQueryコンフリクト回避 のため<br/>\n<br/>\n複数のJSパーツを使用する場合は、こちらの①jQueryの読み込みは一度だけで大丈夫です。</p>\n<p><strong>2024-01更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script<br/>  src=\"https://code.jquery.com/jquery-3.6.0.min.js\"<br/>  integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"<br/>  crossorigin=\"anonymous\"<br/>&gt;&lt;/script&gt;<br/>&lt;script&gt;<br/>  'use strict';<br/>  /*--- jQueryコンフリクト回避 v1.0.0---*/<br/>  jQuery.noConflict();<br/><br/>  /*--- この下にJavaScriptを記述していく---*/<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-10\"><h2>②JavaScript</h2><p>①の下に新規でJavaScript埋め込みパーツを設置し、コピー＆ペーストします。</p>\n<p><strong>2022-09-05更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  /* ----------------------------<br/>    タブ切り替え（リストボタンver.）v1.0.0<br/>  ---------------------------- */<br/>  jQuery(function () {<br/>    /*------------- 変数定義 【変更可能】 START -------------*/<br/>    const tabNavRow = jQuery('.js-tabNav02_row');/* タブ切り替えのボタンが入ったrow*/<br/>    const tabNavBtn = jQuery('.js-tabNav02_row .js-tabNav02_list li');/* タブ切り替えのボタン */<br/>    const tabRow = jQuery('.js-tab02_row');/* 切り替え対象のrow */<br/>    /*------------- 変数定義 【変更可能】 END -------------*/<br/><br/>    /* タブ切り替えボタンと切り替え対象のrowにそれぞれdata属性を付与（複数タブ切り替えパーツに対応するため） */<br/>    for (let i = 0; i &lt; tabNavRow.length; i++) {<br/>      /* 1つのタブ切り替えナビセクションの中に含まれるタブ切り替えボタンの数 */<br/>      let tabNavButtons = tabNavRow.eq(i).find('.js-tabNav02_list li');<br/>      /* 「.finish」がついてないタブ切り替えボタン・rowに属性を付与していく */<br/>      let tabRowArray = jQuery('.js-tab02_row:not(.finish)');<br/>      for (let m = 0; m &lt; tabNavButtons.length; m++) {<br/>        tabNavButtons.eq(m).attr('data-tab-target', `${i + 1}`);<br/>        tabNavButtons.eq(m).attr('data-tab-id', `${m + 1}`);<br/>        tabRowArray.eq(m).attr('data-tab-target', `${i + 1}`);<br/>        /* 処理が終わったタブ切り替えボタン・rowに「.finish」をつける */<br/>        tabRowArray.eq(m).addClass('finish');<br/>      };<br/>    };<br/>    tabRow.removeClass('finish');/* 全て処理が終わったら.finishを外す */<br/><br/>    /* 各タブ切り替えパーツの１つ目の切り替えボタンとrowを表示し、「.is-active」を付与（初期設定） */<br/>    tabNavRow.each(function(index) {<br/>      const targetBtn = jQuery(`.js-tabNav02_list li[data-tab-target=\"${index + 1}\"]`);<br/>      const targetRow = jQuery(`.js-tab02_row[data-tab-target=\"${index + 1}\"]`);<br/>      targetBtn.eq(0).addClass('is-active');<br/>      targetRow.eq(0).css('display', 'block');<br/>      targetRow.eq(0).addClass('is-active');<br/>    });<br/><br/>    /* タブ切り替え用のクリックイベント */<br/>    tabNavBtn.on('click', function (e) {<br/>      let targetNumber = jQuery(this).attr('data-tab-target');/* クリックされたボタンの属性番号を取得 */<br/>      const targetRow = jQuery(`.js-tab02_row[data-tab-target=\"${targetNumber}\"]`);/* クリックしたボタンと同じ属性番号が付与されたrow */<br/>      const targetBtn = jQuery(`.js-tabNav02_list li[data-tab-target=\"${targetNumber}\"]`);/* クリックしたボタンと同じ属性番号が付与されたボタン */<br/>      let targetId = jQuery(this).attr('data-tab-id') - 1;/* 切り替えボタンの属性番号 */<br/><br/>      targetRow.css('display', 'none');<br/>      targetBtn.removeClass('is-active');<br/>      /* クリックしたボタンに「is-active」 を付与 */<br/>      jQuery(e.currentTarget).addClass('is-active');<br/>      /* クリックしたボタンの対象のrowを表示 */<br/>      targetRow.eq(targetId).css('display', 'block');<br/>      targetRow.eq(targetId).addClass('is-active');<br/>    });<br/><br/>  });<br/>  /* ----------------------------<br/>    タブ切り替え（リストボタンver.） END<br/>  ---------------------------- */<br/>&lt;/script&gt;<br/></section>\n\n<section class=\"content-element content-11\"> </section>"
  },
  {
    "title": "アンド検索",
    "url": "https://js-part.hmup.jp/js/and-search",
    "html": "<section class=\"content-element content-1\">\n<table>\n<thead>\n<tr>\n<th>追加可能</th>\n<th>変更可能</th>\n<th>変更NG</th>\n<th>複数設置</th>\n<th>ページ複製・<br/>\n   クリップボード使用可否</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<ul>\n<li>チェックボックス（タグ）※1</li>\n<li>検索対象の行（row）</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>絞り込むタグ</li>\n<li>[絞り込む]の<br/>\n    ボタンデザイン</li>\n<li>カラムのデザイン</li>\n<li>パーツの配置順</li>\n</ul>\n<p><br/>\n[検索結果内]</p>\n<ul>\n<li>見出し「絞り込み結果」 /テキスト「該当なし」の文言変更</li>\n</ul>\n</td>\n<td>\n<ul>\n<li>カラムの分割数<br/>\n→3カラム固定※2</li>\n</ul>\n</td>\n<td>✕</td>\n<td>\n<p>○</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<table>\n<tbody>\n<tr>\n<th>※留意事項</th>\n</tr>\n<tr>\n<td>\n<p>※1：タグ一覧パーツを使用。任意のタグを選択できます。<br/>\n   ※2：絞り込み結果表示用の行（row）に、条件に一致したカラム（col）をJS側で流し込む構造（一つのrowの中に4個以上のcolが入る可能性もある）ため、CSSでしかカラムの数をコントロールできません。そのため、後からお客様側でカラム数を変更されると崩れるため固定とさせていただいてます。</p>\n</td>\n</tr>\n</tbody>\n</table>\n\n</section>\n\n<section class=\"content-element content-2\"><a href=\"#\">絞り込む</a><h2>絞り込み結果</h2><p>該当なし</p>\n<h3>項目1テキスト<br/></h3><p>本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。</p>\n<a href=\"#\">資料ダウンロード</a><h3>項目2テキスト</h3><p>本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。</p>\n<a href=\"#\">資料ダウンロード</a><h3>項目3テキスト</h3><p>本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。</p>\n<a href=\"#\">資料ダウンロード</a><h3>項目4テキスト<br/></h3><p>本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。</p>\n<a href=\"#\">資料ダウンロード</a><h3>項目5テキスト</h3><p>本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。</p>\n<a href=\"#\">資料ダウンロード</a><h3>項目6テキスト</h3><p>本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。本文テキストが入ります。</p>\n<a href=\"#\">資料ダウンロード</a></section>\n\n<section class=\"content-element content-3\"><h2>構造図</h2><p>デモのパーツの構造を説明しています。</p>\n<ul><li><a href=\"https://ferret-one.akamaized.net/images/65bb3a6639f54109dc6d7b75/large.png?utime=1706768998\"></a></li></ul></section>\n\n<section class=\"content-element content-4\" style=\"background-color:#fafafa\"><h2>設定方法</h2><ul>\n<li>\n<p>CSSをカスタムCSSに記述。</p>\n</li>\n<li>\n<p>編集画面用CSSを適切な位置に記述。</p>\n</li>\n<li>\n<p>JavaScriptを使用したいパーツのセクションの<strong>一番下</strong>に配置。複数ページある場合は<strong>共通フッター</strong>に配置。</p>\n</li>\n<li>\n<p>クラス名を見本とあわせる。</p>\n</li>\n</ul>\n<ol>\n<li>行（row）を新規作成＞[タグ一覧パーツ]を配置＞クラス名「<strong>js-checkTag_list checkTag_list</strong>」を追加。<br/>\n ※絞り込み対象のタグを選択してください。</li>\n<li>上記で用意した[タグ一覧パーツ]の下にボタンパーツを配置＞クラス名「<strong>js-andSearch_btn</strong>」を追加。<br/>\n リンク先を、[このページの一番上に遷移]に設定する。<br/>\n ※旧CMSの場合はデザイン用のカスタムクラス（<strong>btn_custom01</strong> 等）をつけてください。</li>\n<li>上記行（row）の下に、新規行（row）を作成し、<br/>\n クラス名「<strong>js-searchResults_row andSearch_row js-displayNone</strong>」を追加。\n <ol>\n<li>見出しパーツを配置し、クラス「<strong>hd_result</strong>」を追加。<br/>\n  ※カスタム用のクラス（hd_custom01 等）は別途任意でつけてください。</li>\n<li>テキストパーツを配置し、クラス「<strong>js-searchNone</strong>」を追加。</li>\n</ol>\n</li>\n<li>更に下に新規行（row）を作成し、クラス名「<strong>js-andSearch_row andSearch_row</strong>」を追加。<br/>\n カラム（col）を3分割【※固定】し、中に必要なパーツを配置していきます。</li>\n<li>上記カラム内にそれぞれタグ一覧パーツを配置し、任意のタグを選択します。</li>\n<li>必要な分だけ、行を複製して作成していきます。</li>\n</ol>\n<h2>注意点</h2><ul>\n<li>絞り込み対象のカラムは3分割固定としています。（結果表示の際も3カラムで統一しています）</li>\n</ul>\n</section>\n\n<section class=\"content-element content-5\"><h2>カスタムCSS</h2><p>CSS内にデフォルトで用意されている、「JSパーツ集記述場所」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、LP記述欄の下などに入れてください。</p>\n<p><strong>2024-07-10更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*----- アンド検索 START v1.0.0-----*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section, section[data-designpart-id]:not(:root:root:root:root)) {<br/>    .inner {<br/>      .row {<br/>        /* 初期読み込み時に一瞬見えてしまう（チラつき）防止用クラス */<br/>        .js-displayNone {<br/>          display: none !important;<br/>        }<br/>        &amp;.js-searchResults_row {<br/>          margin-bottom: 80px;<br/>          .col {<br/>            &amp;:has(.hd_result) {<br/>              width: 100% !important;<br/>            }<br/>          }<br/>        }<br/>        &amp;.andSearch_row {<br/>          display: flex;<br/>          flex-wrap: wrap;<br/>          gap: 10px;<br/>          .col {<br/>            width: calc((100% - (10px * 2)) / 3) !important;<br/>            padding-top: 10px;<br/>            @include breakpoint-sp {<br/>              width: 100% !important;<br/>              padding: 0 10px;<br/>            }<br/>          }<br/>        }<br/>        .col {<br/>          .component {<br/>            &amp;.tag_cloud {<br/>              &amp;.checkTag_list {<br/>                label {<br/>                  padding-left: 5px;<br/>                  margin-right: 15px;<br/>                }<br/>              }<br/>            }<br/>            &amp;.button {<br/>              &amp;.js-andSearch_btn {<br/>                margin-top: calc(40px * var(--fo-spacing-coef) - 20px);//旧CMSの場合削除<br/>                @include breakpoint-sp {<br/>                  margin-top: calc(40px * var(--fo-spacing-coef)* .75 - 10px);//旧CMSの場合削除<br/>                }<br/>                .button-cont {<br/>                  a {<br/>                    &amp;:is(.blue,.red,.orange,.black,.white) {<br/>                      &amp;::before {<br/>                        content: none;<br/>                      }<br/>                      &amp;::after {<br/>                        content: \"\\f107\";<br/>                        font-family: $font_family_awsm6;<br/>                        font-weight: 900;<br/>                        color: inherit;<br/>                        position: relative;<br/>                        top: initial;<br/>                        transform: none;<br/>                        margin-left: 5px;<br/>                      }<br/>                    }<br/>                  }<br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*----- アンド検索 END -----*/</section>\n\n<section class=\"content-element content-6\"><h2>編集画面用カスタムCSS</h2><p>編集画面CSS内にデフォルトで用意されている、「//JSパーツの記述はここにお願いします」の中に追加してください。<br/>\n※アップセル等で見つからない場合は、@include edit-page {}内に必ず入れてください。</p>\n<p><strong>2024-02-01更新（v1.0.0）</strong></p>\n<a href=\"#\">CSSをコピーする</a>/*-- アンド検索 編集画面用 START v1.0.0--*/<br/>.theme-fo-base .wrapper .contents {<br/>  :is(section, section[data-designpart-id]:not(:root:root:root:root)) {<br/>    .inner {<br/>      .row {<br/>        .js-displayNone {<br/>          display: block !important;<br/>        }<br/>        &amp;.js-searchResults_row {<br/>          position: relative;<br/>          border: 1px solid #f00;<br/>          &amp;::before {<br/>            content: \"絞り込み結果表示用（削除しないでください）\";<br/>            position: absolute;<br/>            color: #fff;<br/>            background: #f00;<br/>            padding: 5px 5px;<br/>            right: 0;<br/>            top: -24px;<br/>            font-size: 14px;<br/>            line-height: 1;<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>}<br/>/*-- アンド検索 編集画面用 END --*/</section>\n\n<section class=\"content-element content-7\"><h2>JavaScript</h2><p><strong>2024-07-10更新（v1.0.0）</strong></p>\n<a href=\"#\">JavaScriptをコピーする</a>&lt;script&gt;<br/>  'use strict';<br/>  /* ------------------------------------<br/>    アンド検索 v1.0.0<br/>  ------------------------------------ */<br/>  document.addEventListener('DOMContentLoaded', function() {<br/>    /* チェックタグを囲む設定 */<br/>    function replaceTagWithCheckbox(tag, index) {<br/>      if (!tag.closest('.js-andSearch_row')) {<br/>        /* divを作成 */<br/>        const wrapperDiv = document.createElement('div');<br/>        wrapperDiv.classList.add('checkTag-wrap');<br/>        /* checkbox inputを作成 */<br/>        const checkbox = document.createElement('input');<br/>        checkbox.type = 'checkbox';<br/>        checkbox.id = `checkbox-${index + 1}`;<br/>        checkbox.name = 'checkTag';<br/>        /* labelを作成 */<br/>        const label = document.createElement('label');<br/>        label.htmlFor = checkbox.id;<br/>        label.textContent = tag.textContent;<br/>        /* divで囲む */<br/>        wrapperDiv.appendChild(checkbox);<br/>        wrapperDiv.appendChild(label);<br/>        tag.parentNode.replaceChild(wrapperDiv, tag);<br/>      }<br/>    };<br/>    /* DOM変更を監視するMutationObserverの設定 */<br/>    const observer = new MutationObserver((mutations) =&gt; {<br/>      mutations.forEach((mutation) =&gt; {<br/>        mutation.addedNodes.forEach((node) =&gt; {<br/>          /* 新しく追加されたノードが`.tag`クラスを持つか確認 */<br/>          if (node.nodeType === 1 &amp;&amp; node.classList.contains('tag')) {<br/>            replaceTagWithCheckbox(node, document.querySelectorAll(<br/>              '.checkTag-wrap').length);<br/>          }<br/>        });<br/>      });<br/>    });<br/>    observer.observe(document.body, {<br/>      childList: true,<br/>      subtree: true<br/>    });<br/>    setTimeout(() =&gt; {<br/>      /*------------- 変数定義 START -------------*/<br/>      /* 絞り込み検索用ボタン */<br/>      const searchBtn = document.querySelector('.js-andSearch_btn a');<br/>      /* 絞り込み対象のカラム */<br/>      const searchCols = document.querySelectorAll('.js-andSearch_row .col');<br/>      /* 検索結果の該当要素を格納する用のrow */<br/>      const searchResultsRow = document.querySelector('.js-searchResults_row');<br/>      /* チェックが入ったタグを入れる配列 */<br/>      let checkTagTextLists = [];<br/>      /*------------- 変数定義 END -------------*/<br/><br/>      /* チェックタグに上記のdivで囲む */<br/>      document.querySelectorAll('.js-checkTag_list .tag').forEach((tag, index) =&gt; {<br/>        if (tag.closest('.js-checkTag_list')) {<br/>          replaceTagWithCheckbox(tag, index);<br/>        }<br/>      });<br/>      /* inputタグを取得 */<br/>      document.getElementsByName('checkTag').forEach(checkTag =&gt; {<br/>        checkTag.addEventListener('change', function() {<br/>          const tagText = this.nextElementSibling.textContent;<br/>          if (this.checked) {<br/>            /* チェックが入った場合は配列へ追加 */<br/>            if (!checkTagTextLists.includes(tagText)) {<br/>              checkTagTextLists.push(tagText);<br/>            }<br/>          } else {<br/>            /* チェックが外れた場合は配列から削除 */<br/>            const index = checkTagTextLists.indexOf(tagText);<br/>            if (index !== -1) {<br/>              checkTagTextLists.splice(index, 1);<br/>            }<br/>          }<br/>        });<br/>      });<br/>      /* 絞り込むボタンクリック後の処理 */<br/>      searchBtn.addEventListener('click', function(e) {<br/>        e.preventDefault();<br/>        /* ちらつき防止用の非表示クラス削除 */<br/>        searchResultsRow.classList.remove('js-displayNone');<br/>        /* 既存の検索結果を削除する */<br/>        document.querySelectorAll('.search-result-item').forEach(item =&gt; item.remove());<br/>        searchCols.forEach(searchCol =&gt; {<br/>          /* 各カラム内のタグを取得 */<br/>          let searchTagTextLists = Array.from(searchCol.querySelectorAll(<br/>            '.tag')).map(tag =&gt; tag.textContent);<br/>            /* 該当するタグが一致したカラムを複製して格納用rowに入れる */<br/>          if (checkTagTextLists.every(tag =&gt; searchTagTextLists.includes(tag))) {<br/>            let result = searchCol.cloneNode(true);<br/>            result.classList.add(\"search-result-item\");<br/>            searchResultsRow.appendChild(result);<br/>          }<br/>        });<br/>        /*検索結果の有無の表示*/<br/>        const noResultText = document.querySelector('.js-searchNone');<br/>        if (searchResultsRow.querySelectorAll('.search-result-item').length === 0) {<br/>          /*検索結果がない場合*/<br/>          noResultText.style.display = '';<br/>          searchResultsRow.classList.add('js-searchNone_row');<br/>        } else {<br/>          /*検索結果がある場合*/<br/>          noResultText.style.display = 'none';<br/>          searchResultsRow.classList.remove('js-searchNone_row');<br/>        }<br/>      });<br/>    }, 300); /* 読み込み速度が遅ければ数値上げる */<br/>  });<br/>  /* ------------------------------------<br/>    アンド検索 END<br/>  ------------------------------------ */<br/>&lt;/script&gt;<br/> <br/></section>\n\n<section class=\"content-element content-8\"></section>"
  }
]